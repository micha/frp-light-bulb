/*! jQuery v1.8.2 jquery.com | jquery.org/license */
(function(a,b){function G(a){var b=F[a]={};return p.each(a.split(s),function(a,c){b[c]=!0}),b}function J(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(I,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:+d+""===d?+d:H.test(d)?p.parseJSON(d):d}catch(f){}p.data(a,c,d)}else d=b}return d}function K(a){var b;for(b in a){if(b==="data"&&p.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function ba(){return!1}function bb(){return!0}function bh(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function bi(a,b){do a=a[b];while(a&&a.nodeType!==1);return a}function bj(a,b,c){b=b||0;if(p.isFunction(b))return p.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return p.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=p.grep(a,function(a){return a.nodeType===1});if(be.test(b))return p.filter(b,d,!c);b=p.filter(b,d)}return p.grep(a,function(a,d){return p.inArray(a,b)>=0===c})}function bk(a){var b=bl.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function bC(a,b){return a.getElementsByTagName(b)[0]||a.appendChild(a.ownerDocument.createElement(b))}function bD(a,b){if(b.nodeType!==1||!p.hasData(a))return;var c,d,e,f=p._data(a),g=p._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;d<e;d++)p.event.add(b,c,h[c][d])}g.data&&(g.data=p.extend({},g.data))}function bE(a,b){var c;if(b.nodeType!==1)return;b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?(b.parentNode&&(b.outerHTML=a.outerHTML),p.support.html5Clone&&a.innerHTML&&!p.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):c==="input"&&bv.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text),b.removeAttribute(p.expando)}function bF(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bG(a){bv.test(a.type)&&(a.defaultChecked=a.checked)}function bY(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=bW.length;while(e--){b=bW[e]+c;if(b in a)return b}return d}function bZ(a,b){return a=b||a,p.css(a,"display")==="none"||!p.contains(a.ownerDocument,a)}function b$(a,b){var c,d,e=[],f=0,g=a.length;for(;f<g;f++){c=a[f];if(!c.style)continue;e[f]=p._data(c,"olddisplay"),b?(!e[f]&&c.style.display==="none"&&(c.style.display=""),c.style.display===""&&bZ(c)&&(e[f]=p._data(c,"olddisplay",cc(c.nodeName)))):(d=bH(c,"display"),!e[f]&&d!=="none"&&p._data(c,"olddisplay",d))}for(f=0;f<g;f++){c=a[f];if(!c.style)continue;if(!b||c.style.display==="none"||c.style.display==="")c.style.display=b?e[f]||"":"none"}return a}function b_(a,b,c){var d=bP.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function ca(a,b,c,d){var e=c===(d?"border":"content")?4:b==="width"?1:0,f=0;for(;e<4;e+=2)c==="margin"&&(f+=p.css(a,c+bV[e],!0)),d?(c==="content"&&(f-=parseFloat(bH(a,"padding"+bV[e]))||0),c!=="margin"&&(f-=parseFloat(bH(a,"border"+bV[e]+"Width"))||0)):(f+=parseFloat(bH(a,"padding"+bV[e]))||0,c!=="padding"&&(f+=parseFloat(bH(a,"border"+bV[e]+"Width"))||0));return f}function cb(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=!0,f=p.support.boxSizing&&p.css(a,"boxSizing")==="border-box";if(d<=0||d==null){d=bH(a,b);if(d<0||d==null)d=a.style[b];if(bQ.test(d))return d;e=f&&(p.support.boxSizingReliable||d===a.style[b]),d=parseFloat(d)||0}return d+ca(a,b,c||(f?"border":"content"),e)+"px"}function cc(a){if(bS[a])return bS[a];var b=p("<"+a+">").appendTo(e.body),c=b.css("display");b.remove();if(c==="none"||c===""){bI=e.body.appendChild(bI||p.extend(e.createElement("iframe"),{frameBorder:0,width:0,height:0}));if(!bJ||!bI.createElement)bJ=(bI.contentWindow||bI.contentDocument).document,bJ.write("<!doctype html><html><body>"),bJ.close();b=bJ.body.appendChild(bJ.createElement(a)),c=bH(b,"display"),e.body.removeChild(bI)}return bS[a]=c,c}function ci(a,b,c,d){var e;if(p.isArray(b))p.each(b,function(b,e){c||ce.test(a)?d(a,e):ci(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&p.type(b)==="object")for(e in b)ci(a+"["+e+"]",b[e],c,d);else d(a,b)}function cz(a){return function(b,c){typeof b!="string"&&(c=b,b="*");var d,e,f,g=b.toLowerCase().split(s),h=0,i=g.length;if(p.isFunction(c))for(;h<i;h++)d=g[h],f=/^\+/.test(d),f&&(d=d.substr(1)||"*"),e=a[d]=a[d]||[],e[f?"unshift":"push"](c)}}function cA(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h,i=a[f],j=0,k=i?i.length:0,l=a===cv;for(;j<k&&(l||!h);j++)h=i[j](c,d,e),typeof h=="string"&&(!l||g[h]?h=b:(c.dataTypes.unshift(h),h=cA(a,c,d,e,h,g)));return(l||!h)&&!g["*"]&&(h=cA(a,c,d,e,"*",g)),h}function cB(a,c){var d,e,f=p.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((f[d]?a:e||(e={}))[d]=c[d]);e&&p.extend(!0,a,e)}function cC(a,c,d){var e,f,g,h,i=a.contents,j=a.dataTypes,k=a.responseFields;for(f in k)f in d&&(c[k[f]]=d[f]);while(j[0]==="*")j.shift(),e===b&&(e=a.mimeType||c.getResponseHeader("content-type"));if(e)for(f in i)if(i[f]&&i[f].test(e)){j.unshift(f);break}if(j[0]in d)g=j[0];else{for(f in d){if(!j[0]||a.converters[f+" "+j[0]]){g=f;break}h||(h=f)}g=g||h}if(g)return g!==j[0]&&j.unshift(g),d[g]}function cD(a,b){var c,d,e,f,g=a.dataTypes.slice(),h=g[0],i={},j=0;a.dataFilter&&(b=a.dataFilter(b,a.dataType));if(g[1])for(c in a.converters)i[c.toLowerCase()]=a.converters[c];for(;e=g[++j];)if(e!=="*"){if(h!=="*"&&h!==e){c=i[h+" "+e]||i["* "+e];if(!c)for(d in i){f=d.split(" ");if(f[1]===e){c=i[h+" "+f[0]]||i["* "+f[0]];if(c){c===!0?c=i[d]:i[d]!==!0&&(e=f[0],g.splice(j--,0,e));break}}}if(c!==!0)if(c&&a["throws"])b=c(b);else try{b=c(b)}catch(k){return{state:"parsererror",error:c?k:"No conversion from "+h+" to "+e}}}h=e}return{state:"success",data:b}}function cL(){try{return new a.XMLHttpRequest}catch(b){}}function cM(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function cU(){return setTimeout(function(){cN=b},0),cN=p.now()}function cV(a,b){p.each(b,function(b,c){var d=(cT[b]||[]).concat(cT["*"]),e=0,f=d.length;for(;e<f;e++)if(d[e].call(a,b,c))return})}function cW(a,b,c){var d,e=0,f=0,g=cS.length,h=p.Deferred().always(function(){delete i.elem}),i=function(){var b=cN||cU(),c=Math.max(0,j.startTime+j.duration-b),d=1-(c/j.duration||0),e=0,f=j.tweens.length;for(;e<f;e++)j.tweens[e].run(d);return h.notifyWith(a,[j,d,c]),d<1&&f?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:p.extend({},b),opts:p.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:cN||cU(),duration:c.duration,tweens:[],createTween:function(b,c,d){var e=p.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(e),e},stop:function(b){var c=0,d=b?j.tweens.length:0;for(;c<d;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;cX(k,j.opts.specialEasing);for(;e<g;e++){d=cS[e].call(j,a,k,j.opts);if(d)return d}return cV(j,k),p.isFunction(j.opts.start)&&j.opts.start.call(a,j),p.fx.timer(p.extend(i,{anim:j,queue:j.opts.queue,elem:a})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}function cX(a,b){var c,d,e,f,g;for(c in a){d=p.camelCase(c),e=b[d],f=a[c],p.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=p.cssHooks[d];if(g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}}function cY(a,b,c){var d,e,f,g,h,i,j,k,l=this,m=a.style,n={},o=[],q=a.nodeType&&bZ(a);c.queue||(j=p._queueHooks(a,"fx"),j.unqueued==null&&(j.unqueued=0,k=j.empty.fire,j.empty.fire=function(){j.unqueued||k()}),j.unqueued++,l.always(function(){l.always(function(){j.unqueued--,p.queue(a,"fx").length||j.empty.fire()})})),a.nodeType===1&&("height"in b||"width"in b)&&(c.overflow=[m.overflow,m.overflowX,m.overflowY],p.css(a,"display")==="inline"&&p.css(a,"float")==="none"&&(!p.support.inlineBlockNeedsLayout||cc(a.nodeName)==="inline"?m.display="inline-block":m.zoom=1)),c.overflow&&(m.overflow="hidden",p.support.shrinkWrapBlocks||l.done(function(){m.overflow=c.overflow[0],m.overflowX=c.overflow[1],m.overflowY=c.overflow[2]}));for(d in b){f=b[d];if(cP.exec(f)){delete b[d];if(f===(q?"hide":"show"))continue;o.push(d)}}g=o.length;if(g){h=p._data(a,"fxshow")||p._data(a,"fxshow",{}),q?p(a).show():l.done(function(){p(a).hide()}),l.done(function(){var b;p.removeData(a,"fxshow",!0);for(b in n)p.style(a,b,n[b])});for(d=0;d<g;d++)e=o[d],i=l.createTween(e,q?h[e]:0),n[e]=h[e]||p.style(a,e),e in h||(h[e]=i.start,q&&(i.end=i.start,i.start=e==="width"||e==="height"?1:0))}}function cZ(a,b,c,d,e){return new cZ.prototype.init(a,b,c,d,e)}function c$(a,b){var c,d={height:a},e=0;b=b?1:0;for(;e<4;e+=2-b)c=bV[e],d["margin"+c]=d["padding"+c]=a;return b&&(d.opacity=d.width=a),d}function da(a){return p.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}var c,d,e=a.document,f=a.location,g=a.navigator,h=a.jQuery,i=a.$,j=Array.prototype.push,k=Array.prototype.slice,l=Array.prototype.indexOf,m=Object.prototype.toString,n=Object.prototype.hasOwnProperty,o=String.prototype.trim,p=function(a,b){return new p.fn.init(a,b,c)},q=/[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,r=/\S/,s=/\s+/,t=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,u=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^[\],:{}\s]*$/,x=/(?:^|:|,)(?:\s*\[)+/g,y=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,z=/"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,A=/^-ms-/,B=/-([\da-z])/gi,C=function(a,b){return(b+"").toUpperCase()},D=function(){e.addEventListener?(e.removeEventListener("DOMContentLoaded",D,!1),p.ready()):e.readyState==="complete"&&(e.detachEvent("onreadystatechange",D),p.ready())},E={};p.fn=p.prototype={constructor:p,init:function(a,c,d){var f,g,h,i;if(!a)return this;if(a.nodeType)return this.context=this[0]=a,this.length=1,this;if(typeof a=="string"){a.charAt(0)==="<"&&a.charAt(a.length-1)===">"&&a.length>=3?f=[null,a,null]:f=u.exec(a);if(f&&(f[1]||!c)){if(f[1])return c=c instanceof p?c[0]:c,i=c&&c.nodeType?c.ownerDocument||c:e,a=p.parseHTML(f[1],i,!0),v.test(f[1])&&p.isPlainObject(c)&&this.attr.call(a,c,!0),p.merge(this,a);g=e.getElementById(f[2]);if(g&&g.parentNode){if(g.id!==f[2])return d.find(a);this.length=1,this[0]=g}return this.context=e,this.selector=a,this}return!c||c.jquery?(c||d).find(a):this.constructor(c).find(a)}return p.isFunction(a)?d.ready(a):(a.selector!==b&&(this.selector=a.selector,this.context=a.context),p.makeArray(a,this))},selector:"",jquery:"1.8.2",length:0,size:function(){return this.length},toArray:function(){return k.call(this)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=p.merge(this.constructor(),a);return d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")"),d},each:function(a,b){return p.each(this,a,b)},ready:function(a){return p.ready.promise().done(a),this},eq:function(a){return a=+a,a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(k.apply(this,arguments),"slice",k.call(arguments).join(","))},map:function(a){return this.pushStack(p.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:j,sort:[].sort,splice:[].splice},p.fn.init.prototype=p.fn,p.extend=p.fn.extend=function(){var a,c,d,e,f,g,h=arguments[0]||{},i=1,j=arguments.length,k=!1;typeof h=="boolean"&&(k=h,h=arguments[1]||{},i=2),typeof h!="object"&&!p.isFunction(h)&&(h={}),j===i&&(h=this,--i);for(;i<j;i++)if((a=arguments[i])!=null)for(c in a){d=h[c],e=a[c];if(h===e)continue;k&&e&&(p.isPlainObject(e)||(f=p.isArray(e)))?(f?(f=!1,g=d&&p.isArray(d)?d:[]):g=d&&p.isPlainObject(d)?d:{},h[c]=p.extend(k,g,e)):e!==b&&(h[c]=e)}return h},p.extend({noConflict:function(b){return a.$===p&&(a.$=i),b&&a.jQuery===p&&(a.jQuery=h),p},isReady:!1,readyWait:1,holdReady:function(a){a?p.readyWait++:p.ready(!0)},ready:function(a){if(a===!0?--p.readyWait:p.isReady)return;if(!e.body)return setTimeout(p.ready,1);p.isReady=!0;if(a!==!0&&--p.readyWait>0)return;d.resolveWith(e,[p]),p.fn.trigger&&p(e).trigger("ready").off("ready")},isFunction:function(a){return p.type(a)==="function"},isArray:Array.isArray||function(a){return p.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):E[m.call(a)]||"object"},isPlainObject:function(a){if(!a||p.type(a)!=="object"||a.nodeType||p.isWindow(a))return!1;try{if(a.constructor&&!n.call(a,"constructor")&&!n.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||n.call(a,d)},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},error:function(a){throw new Error(a)},parseHTML:function(a,b,c){var d;return!a||typeof a!="string"?null:(typeof b=="boolean"&&(c=b,b=0),b=b||e,(d=v.exec(a))?[b.createElement(d[1])]:(d=p.buildFragment([a],b,c?null:[]),p.merge([],(d.cacheable?p.clone(d.fragment):d.fragment).childNodes)))},parseJSON:function(b){if(!b||typeof b!="string")return null;b=p.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(w.test(b.replace(y,"@").replace(z,"]").replace(x,"")))return(new Function("return "+b))();p.error("Invalid JSON: "+b)},parseXML:function(c){var d,e;if(!c||typeof c!="string")return null;try{a.DOMParser?(e=new DOMParser,d=e.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(f){d=b}return(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&p.error("Invalid XML: "+c),d},noop:function(){},globalEval:function(b){b&&r.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(A,"ms-").replace(B,C)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,c,d){var e,f=0,g=a.length,h=g===b||p.isFunction(a);if(d){if(h){for(e in a)if(c.apply(a[e],d)===!1)break}else for(;f<g;)if(c.apply(a[f++],d)===!1)break}else if(h){for(e in a)if(c.call(a[e],e,a[e])===!1)break}else for(;f<g;)if(c.call(a[f],f,a[f++])===!1)break;return a},trim:o&&!o.call("﻿ ")?function(a){return a==null?"":o.call(a)}:function(a){return a==null?"":(a+"").replace(t,"")},makeArray:function(a,b){var c,d=b||[];return a!=null&&(c=p.type(a),a.length==null||c==="string"||c==="function"||c==="regexp"||p.isWindow(a)?j.call(d,a):p.merge(d,a)),d},inArray:function(a,b,c){var d;if(b){if(l)return l.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=c.length,e=a.length,f=0;if(typeof d=="number")for(;f<d;f++)a[e++]=c[f];else while(c[f]!==b)a[e++]=c[f++];return a.length=e,a},grep:function(a,b,c){var d,e=[],f=0,g=a.length;c=!!c;for(;f<g;f++)d=!!b(a[f],f),c!==d&&e.push(a[f]);return e},map:function(a,c,d){var e,f,g=[],h=0,i=a.length,j=a instanceof p||i!==b&&typeof i=="number"&&(i>0&&a[0]&&a[i-1]||i===0||p.isArray(a));if(j)for(;h<i;h++)e=c(a[h],h,d),e!=null&&(g[g.length]=e);else for(f in a)e=c(a[f],f,d),e!=null&&(g[g.length]=e);return g.concat.apply([],g)},guid:1,proxy:function(a,c){var d,e,f;return typeof c=="string"&&(d=a[c],c=a,a=d),p.isFunction(a)?(e=k.call(arguments,2),f=function(){return a.apply(c,e.concat(k.call(arguments)))},f.guid=a.guid=a.guid||p.guid++,f):b},access:function(a,c,d,e,f,g,h){var i,j=d==null,k=0,l=a.length;if(d&&typeof d=="object"){for(k in d)p.access(a,c,k,d[k],1,g,e);f=1}else if(e!==b){i=h===b&&p.isFunction(e),j&&(i?(i=c,c=function(a,b,c){return i.call(p(a),c)}):(c.call(a,e),c=null));if(c)for(;k<l;k++)c(a[k],d,i?e.call(a[k],k,c(a[k],d)):e,h);f=1}return f?a:j?c.call(a):l?c(a[0],d):g},now:function(){return(new Date).getTime()}}),p.ready.promise=function(b){if(!d){d=p.Deferred();if(e.readyState==="complete")setTimeout(p.ready,1);else if(e.addEventListener)e.addEventListener("DOMContentLoaded",D,!1),a.addEventListener("load",p.ready,!1);else{e.attachEvent("onreadystatechange",D),a.attachEvent("onload",p.ready);var c=!1;try{c=a.frameElement==null&&e.documentElement}catch(f){}c&&c.doScroll&&function g(){if(!p.isReady){try{c.doScroll("left")}catch(a){return setTimeout(g,50)}p.ready()}}()}}return d.promise(b)},p.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){E["[object "+b+"]"]=b.toLowerCase()}),c=p(e);var F={};p.Callbacks=function(a){a=typeof a=="string"?F[a]||G(a):p.extend({},a);var c,d,e,f,g,h,i=[],j=!a.once&&[],k=function(b){c=a.memory&&b,d=!0,h=f||0,f=0,g=i.length,e=!0;for(;i&&h<g;h++)if(i[h].apply(b[0],b[1])===!1&&a.stopOnFalse){c=!1;break}e=!1,i&&(j?j.length&&k(j.shift()):c?i=[]:l.disable())},l={add:function(){if(i){var b=i.length;(function d(b){p.each(b,function(b,c){var e=p.type(c);e==="function"&&(!a.unique||!l.has(c))?i.push(c):c&&c.length&&e!=="string"&&d(c)})})(arguments),e?g=i.length:c&&(f=b,k(c))}return this},remove:function(){return i&&p.each(arguments,function(a,b){var c;while((c=p.inArray(b,i,c))>-1)i.splice(c,1),e&&(c<=g&&g--,c<=h&&h--)}),this},has:function(a){return p.inArray(a,i)>-1},empty:function(){return i=[],this},disable:function(){return i=j=c=b,this},disabled:function(){return!i},lock:function(){return j=b,c||l.disable(),this},locked:function(){return!j},fireWith:function(a,b){return b=b||[],b=[a,b.slice?b.slice():b],i&&(!d||j)&&(e?j.push(b):k(b)),this},fire:function(){return l.fireWith(this,arguments),this},fired:function(){return!!d}};return l},p.extend({Deferred:function(a){var b=[["resolve","done",p.Callbacks("once memory"),"resolved"],["reject","fail",p.Callbacks("once memory"),"rejected"],["notify","progress",p.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return p.Deferred(function(c){p.each(b,function(b,d){var f=d[0],g=a[b];e[d[1]](p.isFunction(g)?function(){var a=g.apply(this,arguments);a&&p.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f+"With"](this===e?c:this,[a])}:c[f])}),a=null}).promise()},promise:function(a){return a!=null?p.extend(a,d):d}},e={};return d.pipe=d.then,p.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[a^1][2].disable,b[2][2].lock),e[f[0]]=g.fire,e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=k.call(arguments),d=c.length,e=d!==1||a&&p.isFunction(a.promise)?d:0,f=e===1?a:p.Deferred(),g=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?k.call(arguments):d,c===h?f.notifyWith(b,c):--e||f.resolveWith(b,c)}},h,i,j;if(d>1){h=new Array(d),i=new Array(d),j=new Array(d);for(;b<d;b++)c[b]&&p.isFunction(c[b].promise)?c[b].promise().done(g(b,j,c)).fail(f.reject).progress(g(b,i,h)):--e}return e||f.resolveWith(j,c),f.promise()}}),p.support=function(){var b,c,d,f,g,h,i,j,k,l,m,n=e.createElement("div");n.setAttribute("className","t"),n.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",c=n.getElementsByTagName("*"),d=n.getElementsByTagName("a")[0],d.style.cssText="top:1px;float:left;opacity:.5";if(!c||!c.length)return{};f=e.createElement("select"),g=f.appendChild(e.createElement("option")),h=n.getElementsByTagName("input")[0],b={leadingWhitespace:n.firstChild.nodeType===3,tbody:!n.getElementsByTagName("tbody").length,htmlSerialize:!!n.getElementsByTagName("link").length,style:/top/.test(d.getAttribute("style")),hrefNormalized:d.getAttribute("href")==="/a",opacity:/^0.5/.test(d.style.opacity),cssFloat:!!d.style.cssFloat,checkOn:h.value==="on",optSelected:g.selected,getSetAttribute:n.className!=="t",enctype:!!e.createElement("form").enctype,html5Clone:e.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",boxModel:e.compatMode==="CSS1Compat",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},h.checked=!0,b.noCloneChecked=h.cloneNode(!0).checked,f.disabled=!0,b.optDisabled=!g.disabled;try{delete n.test}catch(o){b.deleteExpando=!1}!n.addEventListener&&n.attachEvent&&n.fireEvent&&(n.attachEvent("onclick",m=function(){b.noCloneEvent=!1}),n.cloneNode(!0).fireEvent("onclick"),n.detachEvent("onclick",m)),h=e.createElement("input"),h.value="t",h.setAttribute("type","radio"),b.radioValue=h.value==="t",h.setAttribute("checked","checked"),h.setAttribute("name","t"),n.appendChild(h),i=e.createDocumentFragment(),i.appendChild(n.lastChild),b.checkClone=i.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=h.checked,i.removeChild(h),i.appendChild(n);if(n.attachEvent)for(k in{submit:!0,change:!0,focusin:!0})j="on"+k,l=j in n,l||(n.setAttribute(j,"return;"),l=typeof n[j]=="function"),b[k+"Bubbles"]=l;return p(function(){var c,d,f,g,h="padding:0;margin:0;border:0;display:block;overflow:hidden;",i=e.getElementsByTagName("body")[0];if(!i)return;c=e.createElement("div"),c.style.cssText="visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",i.insertBefore(c,i.firstChild),d=e.createElement("div"),c.appendChild(d),d.innerHTML="<table><tr><td></td><td>t</td></tr></table>",f=d.getElementsByTagName("td"),f[0].style.cssText="padding:0;margin:0;border:0;display:none",l=f[0].offsetHeight===0,f[0].style.display="",f[1].style.display="none",b.reliableHiddenOffsets=l&&f[0].offsetHeight===0,d.innerHTML="",d.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",b.boxSizing=d.offsetWidth===4,b.doesNotIncludeMarginInBodyOffset=i.offsetTop!==1,a.getComputedStyle&&(b.pixelPosition=(a.getComputedStyle(d,null)||{}).top!=="1%",b.boxSizingReliable=(a.getComputedStyle(d,null)||{width:"4px"}).width==="4px",g=e.createElement("div"),g.style.cssText=d.style.cssText=h,g.style.marginRight=g.style.width="0",d.style.width="1px",d.appendChild(g),b.reliableMarginRight=!parseFloat((a.getComputedStyle(g,null)||{}).marginRight)),typeof d.style.zoom!="undefined"&&(d.innerHTML="",d.style.cssText=h+"width:1px;padding:1px;display:inline;zoom:1",b.inlineBlockNeedsLayout=d.offsetWidth===3,d.style.display="block",d.style.overflow="visible",d.innerHTML="<div></div>",d.firstChild.style.width="5px",b.shrinkWrapBlocks=d.offsetWidth!==3,c.style.zoom=1),i.removeChild(c),c=d=f=g=null}),i.removeChild(n),c=d=f=g=h=i=n=null,b}();var H=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,I=/([A-Z])/g;p.extend({cache:{},deletedIds:[],uuid:0,expando:"jQuery"+(p.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){return a=a.nodeType?p.cache[a[p.expando]]:a[p.expando],!!a&&!K(a)},data:function(a,c,d,e){if(!p.acceptData(a))return;var f,g,h=p.expando,i=typeof c=="string",j=a.nodeType,k=j?p.cache:a,l=j?a[h]:a[h]&&h;if((!l||!k[l]||!e&&!k[l].data)&&i&&d===b)return;l||(j?a[h]=l=p.deletedIds.pop()||p.guid++:l=h),k[l]||(k[l]={},j||(k[l].toJSON=p.noop));if(typeof c=="object"||typeof c=="function")e?k[l]=p.extend(k[l],c):k[l].data=p.extend(k[l].data,c);return f=k[l],e||(f.data||(f.data={}),f=f.data),d!==b&&(f[p.camelCase(c)]=d),i?(g=f[c],g==null&&(g=f[p.camelCase(c)])):g=f,g},removeData:function(a,b,c){if(!p.acceptData(a))return;var d,e,f,g=a.nodeType,h=g?p.cache:a,i=g?a[p.expando]:p.expando;if(!h[i])return;if(b){d=c?h[i]:h[i].data;if(d){p.isArray(b)||(b in d?b=[b]:(b=p.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,f=b.length;e<f;e++)delete d[b[e]];if(!(c?K:p.isEmptyObject)(d))return}}if(!c){delete h[i].data;if(!K(h[i]))return}g?p.cleanData([a],!0):p.support.deleteExpando||h!=h.window?delete h[i]:h[i]=null},_data:function(a,b,c){return p.data(a,b,c,!0)},acceptData:function(a){var b=a.nodeName&&p.noData[a.nodeName.toLowerCase()];return!b||b!==!0&&a.getAttribute("classid")===b}}),p.fn.extend({data:function(a,c){var d,e,f,g,h,i=this[0],j=0,k=null;if(a===b){if(this.length){k=p.data(i);if(i.nodeType===1&&!p._data(i,"parsedAttrs")){f=i.attributes;for(h=f.length;j<h;j++)g=f[j].name,g.indexOf("data-")||(g=p.camelCase(g.substring(5)),J(i,g,k[g]));p._data(i,"parsedAttrs",!0)}}return k}return typeof a=="object"?this.each(function(){p.data(this,a)}):(d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!",p.access(this,function(c){if(c===b)return k=this.triggerHandler("getData"+e,[d[0]]),k===b&&i&&(k=p.data(i,a),k=J(i,a,k)),k===b&&d[1]?this.data(d[0]):k;d[1]=c,this.each(function(){var b=p(this);b.triggerHandler("setData"+e,d),p.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1))},removeData:function(a){return this.each(function(){p.removeData(this,a)})}}),p.extend({queue:function(a,b,c){var d;if(a)return b=(b||"fx")+"queue",d=p._data(a,b),c&&(!d||p.isArray(c)?d=p._data(a,b,p.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||"fx";var c=p.queue(a,b),d=c.length,e=c.shift(),f=p._queueHooks(a,b),g=function(){p.dequeue(a,b)};e==="inprogress"&&(e=c.shift(),d--),e&&(b==="fx"&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return p._data(a,c)||p._data(a,c,{empty:p.Callbacks("once memory").add(function(){p.removeData(a,b+"queue",!0),p.removeData(a,c,!0)})})}}),p.fn.extend({queue:function(a,c){var d=2;return typeof a!="string"&&(c=a,a="fx",d--),arguments.length<d?p.queue(this[0],a):c===b?this:this.each(function(){var b=p.queue(this,a,c);p._queueHooks(this,a),a==="fx"&&b[0]!=="inprogress"&&p.dequeue(this,a)})},dequeue:function(a){return this.each(function(){p.dequeue(this,a)})},delay:function(a,b){return a=p.fx?p.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){var d,e=1,f=p.Deferred(),g=this,h=this.length,i=function(){--e||f.resolveWith(g,[g])};typeof a!="string"&&(c=a,a=b),a=a||"fx";while(h--)d=p._data(g[h],a+"queueHooks"),d&&d.empty&&(e++,d.empty.add(i));return i(),f.promise(c)}});var L,M,N,O=/[\t\r\n]/g,P=/\r/g,Q=/^(?:button|input)$/i,R=/^(?:button|input|object|select|textarea)$/i,S=/^a(?:rea|)$/i,T=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,U=p.support.getSetAttribute;p.fn.extend({attr:function(a,b){return p.access(this,p.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){p.removeAttr(this,a)})},prop:function(a,b){return p.access(this,p.prop,a,b,arguments.length>1)},removeProp:function(a){return a=p.propFix[a]||a,this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,f,g,h;if(p.isFunction(a))return this.each(function(b){p(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(s);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{f=" "+e.className+" ";for(g=0,h=b.length;g<h;g++)f.indexOf(" "+b[g]+" ")<0&&(f+=b[g]+" ");e.className=p.trim(f)}}}return this},removeClass:function(a){var c,d,e,f,g,h,i;if(p.isFunction(a))return this.each(function(b){p(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(s);for(h=0,i=this.length;h<i;h++){e=this[h];if(e.nodeType===1&&e.className){d=(" "+e.className+" ").replace(O," ");for(f=0,g=c.length;f<g;f++)while(d.indexOf(" "+c[f]+" ")>=0)d=d.replace(" "+c[f]+" "," ");e.className=a?p.trim(d):""}}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";return p.isFunction(a)?this.each(function(c){p(this).toggleClass(a.call(this,c,this.className,b),b)}):this.each(function(){if(c==="string"){var e,f=0,g=p(this),h=b,i=a.split(s);while(e=i[f++])h=d?h:!g.hasClass(e),g[h?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&p._data(this,"__className__",this.className),this.className=this.className||a===!1?"":p._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(O," ").indexOf(b)>=0)return!0;return!1},val:function(a){var c,d,e,f=this[0];if(!arguments.length){if(f)return c=p.valHooks[f.type]||p.valHooks[f.nodeName.toLowerCase()],c&&"get"in c&&(d=c.get(f,"value"))!==b?d:(d=f.value,typeof d=="string"?d.replace(P,""):d==null?"":d);return}return e=p.isFunction(a),this.each(function(d){var f,g=p(this);if(this.nodeType!==1)return;e?f=a.call(this,d,g.val()):f=a,f==null?f="":typeof f=="number"?f+="":p.isArray(f)&&(f=p.map(f,function(a){return a==null?"":a+""})),c=p.valHooks[this.type]||p.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,f,"value")===b)this.value=f})}}),p.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,f=a.selectedIndex,g=[],h=a.options,i=a.type==="select-one";if(f<0)return null;c=i?f:0,d=i?f+1:h.length;for(;c<d;c++){e=h[c];if(e.selected&&(p.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!p.nodeName(e.parentNode,"optgroup"))){b=p(e).val();if(i)return b;g.push(b)}}return i&&!g.length&&h.length?p(h[f]).val():g},set:function(a,b){var c=p.makeArray(b);return p(a).find("option").each(function(){this.selected=p.inArray(p(this).val(),c)>=0}),c.length||(a.selectedIndex=-1),c}}},attrFn:{},attr:function(a,c,d,e){var f,g,h,i=a.nodeType;if(!a||i===3||i===8||i===2)return;if(e&&p.isFunction(p.fn[c]))return p(a)[c](d);if(typeof a.getAttribute=="undefined")return p.prop(a,c,d);h=i!==1||!p.isXMLDoc(a),h&&(c=c.toLowerCase(),g=p.attrHooks[c]||(T.test(c)?M:L));if(d!==b){if(d===null){p.removeAttr(a,c);return}return g&&"set"in g&&h&&(f=g.set(a,d,c))!==b?f:(a.setAttribute(c,d+""),d)}return g&&"get"in g&&h&&(f=g.get(a,c))!==null?f:(f=a.getAttribute(c),f===null?b:f)},removeAttr:function(a,b){var c,d,e,f,g=0;if(b&&a.nodeType===1){d=b.split(s);for(;g<d.length;g++)e=d[g],e&&(c=p.propFix[e]||e,f=T.test(e),f||p.attr(a,e,""),a.removeAttribute(U?e:c),f&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(Q.test(a.nodeName)&&a.parentNode)p.error("type property can't be changed");else if(!p.support.radioValue&&b==="radio"&&p.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}},value:{get:function(a,b){return L&&p.nodeName(a,"button")?L.get(a,b):b in a?a.value:null},set:function(a,b,c){if(L&&p.nodeName(a,"button"))return L.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,f,g,h=a.nodeType;if(!a||h===3||h===8||h===2)return;return g=h!==1||!p.isXMLDoc(a),g&&(c=p.propFix[c]||c,f=p.propHooks[c]),d!==b?f&&"set"in f&&(e=f.set(a,d,c))!==b?e:a[c]=d:f&&"get"in f&&(e=f.get(a,c))!==null?e:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):R.test(a.nodeName)||S.test(a.nodeName)&&a.href?0:b}}}}),M={get:function(a,c){var d,e=p.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;return b===!1?p.removeAttr(a,c):(d=p.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase())),c}},U||(N={name:!0,id:!0,coords:!0},L=p.valHooks.button={get:function(a,c){var d;return d=a.getAttributeNode(c),d&&(N[c]?d.value!=="":d.specified)?d.value:b},set:function(a,b,c){var d=a.getAttributeNode(c);return d||(d=e.createAttribute(c),a.setAttributeNode(d)),d.value=b+""}},p.each(["width","height"],function(a,b){p.attrHooks[b]=p.extend(p.attrHooks[b],{set:function(a,c){if(c==="")return a.setAttribute(b,"auto"),c}})}),p.attrHooks.contenteditable={get:L.get,set:function(a,b,c){b===""&&(b="false"),L.set(a,b,c)}}),p.support.hrefNormalized||p.each(["href","src","width","height"],function(a,c){p.attrHooks[c]=p.extend(p.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),p.support.style||(p.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=b+""}}),p.support.optSelected||(p.propHooks.selected=p.extend(p.propHooks.selected,{get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}})),p.support.enctype||(p.propFix.enctype="encoding"),p.support.checkOn||p.each(["radio","checkbox"],function(){p.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),p.each(["radio","checkbox"],function(){p.valHooks[this]=p.extend(p.valHooks[this],{set:function(a,b){if(p.isArray(b))return a.checked=p.inArray(p(a).val(),b)>=0}})});var V=/^(?:textarea|input|select)$/i,W=/^([^\.]*|)(?:\.(.+)|)$/,X=/(?:^|\s)hover(\.\S+|)\b/,Y=/^key/,Z=/^(?:mouse|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=function(a){return p.event.special.hover?a:a.replace(X,"mouseenter$1 mouseleave$1")};p.event={add:function(a,c,d,e,f){var g,h,i,j,k,l,m,n,o,q,r;if(a.nodeType===3||a.nodeType===8||!c||!d||!(g=p._data(a)))return;d.handler&&(o=d,d=o.handler,f=o.selector),d.guid||(d.guid=p.guid++),i=g.events,i||(g.events=i={}),h=g.handle,h||(g.handle=h=function(a){return typeof p!="undefined"&&(!a||p.event.triggered!==a.type)?p.event.dispatch.apply(h.elem,arguments):b},h.elem=a),c=p.trim(_(c)).split(" ");for(j=0;j<c.length;j++){k=W.exec(c[j])||[],l=k[1],m=(k[2]||"").split(".").sort(),r=p.event.special[l]||{},l=(f?r.delegateType:r.bindType)||l,r=p.event.special[l]||{},n=p.extend({type:l,origType:k[1],data:e,handler:d,guid:d.guid,selector:f,needsContext:f&&p.expr.match.needsContext.test(f),namespace:m.join(".")},o),q=i[l];if(!q){q=i[l]=[],q.delegateCount=0;if(!r.setup||r.setup.call(a,e,m,h)===!1)a.addEventListener?a.addEventListener(l,h,!1):a.attachEvent&&a.attachEvent("on"+l,h)}r.add&&(r.add.call(a,n),n.handler.guid||(n.handler.guid=d.guid)),f?q.splice(q.delegateCount++,0,n):q.push(n),p.event.global[l]=!0}a=null},global:{},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,q,r=p.hasData(a)&&p._data(a);if(!r||!(m=r.events))return;b=p.trim(_(b||"")).split(" ");for(f=0;f<b.length;f++){g=W.exec(b[f])||[],h=i=g[1],j=g[2];if(!h){for(h in m)p.event.remove(a,h+b[f],c,d,!0);continue}n=p.event.special[h]||{},h=(d?n.delegateType:n.bindType)||h,o=m[h]||[],k=o.length,j=j?new RegExp("(^|\\.)"+j.split(".").sort().join("\\.(?:.*\\.|)")+"(\\.|$)"):null;for(l=0;l<o.length;l++)q=o[l],(e||i===q.origType)&&(!c||c.guid===q.guid)&&(!j||j.test(q.namespace))&&(!d||d===q.selector||d==="**"&&q.selector)&&(o.splice(l--,1),q.selector&&o.delegateCount--,n.remove&&n.remove.call(a,q));o.length===0&&k!==o.length&&((!n.teardown||n.teardown.call(a,j,r.handle)===!1)&&p.removeEvent(a,h,r.handle),delete m[h])}p.isEmptyObject(m)&&(delete r.handle,p.removeData(a,"events",!0))},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,f,g){if(!f||f.nodeType!==3&&f.nodeType!==8){var h,i,j,k,l,m,n,o,q,r,s=c.type||c,t=[];if($.test(s+p.event.triggered))return;s.indexOf("!")>=0&&(s=s.slice(0,-1),i=!0),s.indexOf(".")>=0&&(t=s.split("."),s=t.shift(),t.sort());if((!f||p.event.customEvent[s])&&!p.event.global[s])return;c=typeof c=="object"?c[p.expando]?c:new p.Event(s,c):new p.Event(s),c.type=s,c.isTrigger=!0,c.exclusive=i,c.namespace=t.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+t.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,m=s.indexOf(":")<0?"on"+s:"";if(!f){h=p.cache;for(j in h)h[j].events&&h[j].events[s]&&p.event.trigger(c,d,h[j].handle.elem,!0);return}c.result=b,c.target||(c.target=f),d=d!=null?p.makeArray(d):[],d.unshift(c),n=p.event.special[s]||{};if(n.trigger&&n.trigger.apply(f,d)===!1)return;q=[[f,n.bindType||s]];if(!g&&!n.noBubble&&!p.isWindow(f)){r=n.delegateType||s,k=$.test(r+s)?f:f.parentNode;for(l=f;k;k=k.parentNode)q.push([k,r]),l=k;l===(f.ownerDocument||e)&&q.push([l.defaultView||l.parentWindow||a,r])}for(j=0;j<q.length&&!c.isPropagationStopped();j++)k=q[j][0],c.type=q[j][1],o=(p._data(k,"events")||{})[c.type]&&p._data(k,"handle"),o&&o.apply(k,d),o=m&&k[m],o&&p.acceptData(k)&&o.apply&&o.apply(k,d)===!1&&c.preventDefault();return c.type=s,!g&&!c.isDefaultPrevented()&&(!n._default||n._default.apply(f.ownerDocument,d)===!1)&&(s!=="click"||!p.nodeName(f,"a"))&&p.acceptData(f)&&m&&f[s]&&(s!=="focus"&&s!=="blur"||c.target.offsetWidth!==0)&&!p.isWindow(f)&&(l=f[m],l&&(f[m]=null),p.event.triggered=s,f[s](),p.event.triggered=b,l&&(f[m]=l)),c.result}return},dispatch:function(c){c=p.event.fix(c||a.event);var d,e,f,g,h,i,j,l,m,n,o=(p._data(this,"events")||{})[c.type]||[],q=o.delegateCount,r=k.call(arguments),s=!c.exclusive&&!c.namespace,t=p.event.special[c.type]||{},u=[];r[0]=c,c.delegateTarget=this;if(t.preDispatch&&t.preDispatch.call(this,c)===!1)return;if(q&&(!c.button||c.type!=="click"))for(f=c.target;f!=this;f=f.parentNode||this)if(f.disabled!==!0||c.type!=="click"){h={},j=[];for(d=0;d<q;d++)l=o[d],m=l.selector,h[m]===b&&(h[m]=l.needsContext?p(m,this).index(f)>=0:p.find(m,this,null,[f]).length),h[m]&&j.push(l);j.length&&u.push({elem:f,matches:j})}o.length>q&&u.push({elem:this,matches:o.slice(q)});for(d=0;d<u.length&&!c.isPropagationStopped();d++){i=u[d],c.currentTarget=i.elem;for(e=0;e<i.matches.length&&!c.isImmediatePropagationStopped();e++){l=i.matches[e];if(s||!c.namespace&&!l.namespace||c.namespace_re&&c.namespace_re.test(l.namespace))c.data=l.data,c.handleObj=l,g=((p.event.special[l.origType]||{}).handle||l.handler).apply(i.elem,r),g!==b&&(c.result=g,g===!1&&(c.preventDefault(),c.stopPropagation()))}}return t.postDispatch&&t.postDispatch.call(this,c),c.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,c){var d,f,g,h=c.button,i=c.fromElement;return a.pageX==null&&c.clientX!=null&&(d=a.target.ownerDocument||e,f=d.documentElement,g=d.body,a.pageX=c.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=c.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?c.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0),a}},fix:function(a){if(a[p.expando])return a;var b,c,d=a,f=p.event.fixHooks[a.type]||{},g=f.props?this.props.concat(f.props):this.props;a=p.Event(d);for(b=g.length;b;)c=g[--b],a[c]=d[c];return a.target||(a.target=d.srcElement||e),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,f.filter?f.filter(a,d):a},special:{load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){p.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=p.extend(new p.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?p.event.trigger(e,null,b):p.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},p.event.handle=p.event.dispatch,p.removeEvent=e.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d="on"+b;a.detachEvent&&(typeof a[d]=="undefined"&&(a[d]=null),a.detachEvent(d,c))},p.Event=function(a,b){if(this instanceof p.Event)a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?bb:ba):this.type=a,b&&p.extend(this,b),this.timeStamp=a&&a.timeStamp||p.now(),this[p.expando]=!0;else return new p.Event(a,b)},p.Event.prototype={preventDefault:function(){this.isDefaultPrevented=bb;var a=this.originalEvent;if(!a)return;a.preventDefault?a.preventDefault():a.returnValue=!1},stopPropagation:function(){this.isPropagationStopped=bb;var a=this.originalEvent;if(!a)return;a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=bb,this.stopPropagation()},isDefaultPrevented:ba,isPropagationStopped:ba,isImmediatePropagationStopped:ba},p.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){p.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj,g=f.selector;if(!e||e!==d&&!p.contains(d,e))a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b;return c}}}),p.support.submitBubbles||(p.event.special.submit={setup:function(){if(p.nodeName(this,"form"))return!1;p.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=p.nodeName(c,"input")||p.nodeName(c,"button")?c.form:b;d&&!p._data(d,"_submit_attached")&&(p.event.add(d,"submit._submit",function(a){a._submit_bubble=!0}),p._data(d,"_submit_attached",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&p.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){if(p.nodeName(this,"form"))return!1;p.event.remove(this,"._submit")}}),p.support.changeBubbles||(p.event.special.change={setup:function(){if(V.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")p.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),p.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),p.event.simulate("change",this,a,!0)});return!1}p.event.add(this,"beforeactivate._change",function(a){var b=a.target;V.test(b.nodeName)&&!p._data(b,"_change_attached")&&(p.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&p.event.simulate("change",this.parentNode,a,!0)}),p._data(b,"_change_attached",!0))})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){return p.event.remove(this,"._change"),!V.test(this.nodeName)}}),p.support.focusinBubbles||p.each({focus:"focusin",blur:"focusout"},function(a,b){var c=0,d=function(a){p.event.simulate(b,a.target,p.event.fix(a),!0)};p.event.special[b]={setup:function(){c++===0&&e.addEventListener(a,d,!0)},teardown:function(){--c===0&&e.removeEventListener(a,d,!0)}}}),p.fn.extend({on:function(a,c,d,e,f){var g,h;if(typeof a=="object"){typeof c!="string"&&(d=d||c,c=b);for(h in a)this.on(h,c,d,a[h],f);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=ba;else if(!e)return this;return f===1&&(g=e,e=function(a){return p().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=p.guid++)),this.each(function(){p.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){var e,f;if(a&&a.preventDefault&&a.handleObj)return e=a.handleObj,p(a.delegateTarget).off(e.namespace?e.origType+"."+e.namespace:e.origType,e.selector,e.handler),this;if(typeof a=="object"){for(f in a)this.off(f,c,a[f]);return this}if(c===!1||typeof c=="function")d=c,c=b;return d===!1&&(d=ba),this.each(function(){p.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){return p(this.context).on(a,this.selector,b,c),this},die:function(a,b){return p(this.context).off(a,this.selector||"**",b),this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length===1?this.off(a,"**"):this.off(b,a||"**",c)},trigger:function(a,b){return this.each(function(){p.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return p.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||p.guid++,d=0,e=function(c){var e=(p._data(this,"lastToggle"+a.guid)||0)%d;return p._data(this,"lastToggle"+a.guid,e+1),c.preventDefault(),b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),p.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){p.fn[b]=function(a,c){return c==null&&(c=a,a=null),arguments.length>0?this.on(b,null,a,c):this.trigger(b)},Y.test(b)&&(p.event.fixHooks[b]=p.event.keyHooks),Z.test(b)&&(p.event.fixHooks[b]=p.event.mouseHooks)}),function(a,b){function bc(a,b,c,d){c=c||[],b=b||r;var e,f,i,j,k=b.nodeType;if(!a||typeof a!="string")return c;if(k!==1&&k!==9)return[];i=g(b);if(!i&&!d)if(e=P.exec(a))if(j=e[1]){if(k===9){f=b.getElementById(j);if(!f||!f.parentNode)return c;if(f.id===j)return c.push(f),c}else if(b.ownerDocument&&(f=b.ownerDocument.getElementById(j))&&h(b,f)&&f.id===j)return c.push(f),c}else{if(e[2])return w.apply(c,x.call(b.getElementsByTagName(a),0)),c;if((j=e[3])&&_&&b.getElementsByClassName)return w.apply(c,x.call(b.getElementsByClassName(j),0)),c}return bp(a.replace(L,"$1"),b,c,d,i)}function bd(a){return function(b){var c=b.nodeName.toLowerCase();return c==="input"&&b.type===a}}function be(a){return function(b){var c=b.nodeName.toLowerCase();return(c==="input"||c==="button")&&b.type===a}}function bf(a){return z(function(b){return b=+b,z(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function bg(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}function bh(a,b){var c,d,f,g,h,i,j,k=C[o][a];if(k)return b?0:k.slice(0);h=a,i=[],j=e.preFilter;while(h){if(!c||(d=M.exec(h)))d&&(h=h.slice(d[0].length)),i.push(f=[]);c=!1;if(d=N.exec(h))f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=d[0].replace(L," ");for(g in e.filter)(d=W[g].exec(h))&&(!j[g]||(d=j[g](d,r,!0)))&&(f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=g,c.matches=d);if(!c)break}return b?h.length:h?bc.error(a):C(a,i).slice(0)}function bi(a,b,d){var e=b.dir,f=d&&b.dir==="parentNode",g=u++;return b.first?function(b,c,d){while(b=b[e])if(f||b.nodeType===1)return a(b,c,d)}:function(b,d,h){if(!h){var i,j=t+" "+g+" ",k=j+c;while(b=b[e])if(f||b.nodeType===1){if((i=b[o])===k)return b.sizset;if(typeof i=="string"&&i.indexOf(j)===0){if(b.sizset)return b}else{b[o]=k;if(a(b,d,h))return b.sizset=!0,b;b.sizset=!1}}}else while(b=b[e])if(f||b.nodeType===1)if(a(b,d,h))return b}}function bj(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function bk(a,b,c,d,e){var f,g=[],h=0,i=a.length,j=b!=null;for(;h<i;h++)if(f=a[h])if(!c||c(f,d,e))g.push(f),j&&b.push(h);return g}function bl(a,b,c,d,e,f){return d&&!d[o]&&(d=bl(d)),e&&!e[o]&&(e=bl(e,f)),z(function(f,g,h,i){if(f&&e)return;var j,k,l,m=[],n=[],o=g.length,p=f||bo(b||"*",h.nodeType?[h]:h,[],f),q=a&&(f||!b)?bk(p,m,a,h,i):p,r=c?e||(f?a:o||d)?[]:g:q;c&&c(q,r,h,i);if(d){l=bk(r,n),d(l,[],h,i),j=l.length;while(j--)if(k=l[j])r[n[j]]=!(q[n[j]]=k)}if(f){j=a&&r.length;while(j--)if(k=r[j])f[m[j]]=!(g[m[j]]=k)}else r=bk(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):w.apply(g,r)})}function bm(a){var b,c,d,f=a.length,g=e.relative[a[0].type],h=g||e.relative[" "],i=g?1:0,j=bi(function(a){return a===b},h,!0),k=bi(function(a){return y.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==l)||((b=c).nodeType?j(a,c,d):k(a,c,d))}];for(;i<f;i++)if(c=e.relative[a[i].type])m=[bi(bj(m),c)];else{c=e.filter[a[i].type].apply(null,a[i].matches);if(c[o]){d=++i;for(;d<f;d++)if(e.relative[a[d].type])break;return bl(i>1&&bj(m),i>1&&a.slice(0,i-1).join("").replace(L,"$1"),c,i<d&&bm(a.slice(i,d)),d<f&&bm(a=a.slice(d)),d<f&&a.join(""))}m.push(c)}return bj(m)}function bn(a,b){var d=b.length>0,f=a.length>0,g=function(h,i,j,k,m){var n,o,p,q=[],s=0,u="0",x=h&&[],y=m!=null,z=l,A=h||f&&e.find.TAG("*",m&&i.parentNode||i),B=t+=z==null?1:Math.E;y&&(l=i!==r&&i,c=g.el);for(;(n=A[u])!=null;u++){if(f&&n){for(o=0;p=a[o];o++)if(p(n,i,j)){k.push(n);break}y&&(t=B,c=++g.el)}d&&((n=!p&&n)&&s--,h&&x.push(n))}s+=u;if(d&&u!==s){for(o=0;p=b[o];o++)p(x,q,i,j);if(h){if(s>0)while(u--)!x[u]&&!q[u]&&(q[u]=v.call(k));q=bk(q)}w.apply(k,q),y&&!h&&q.length>0&&s+b.length>1&&bc.uniqueSort(k)}return y&&(t=B,l=z),x};return g.el=0,d?z(g):g}function bo(a,b,c,d){var e=0,f=b.length;for(;e<f;e++)bc(a,b[e],c,d);return c}function bp(a,b,c,d,f){var g,h,j,k,l,m=bh(a),n=m.length;if(!d&&m.length===1){h=m[0]=m[0].slice(0);if(h.length>2&&(j=h[0]).type==="ID"&&b.nodeType===9&&!f&&e.relative[h[1].type]){b=e.find.ID(j.matches[0].replace(V,""),b,f)[0];if(!b)return c;a=a.slice(h.shift().length)}for(g=W.POS.test(a)?-1:h.length-1;g>=0;g--){j=h[g];if(e.relative[k=j.type])break;if(l=e.find[k])if(d=l(j.matches[0].replace(V,""),R.test(h[0].type)&&b.parentNode||b,f)){h.splice(g,1),a=d.length&&h.join("");if(!a)return w.apply(c,x.call(d,0)),c;break}}}return i(a,m)(d,b,f,c,R.test(a)),c}function bq(){}var c,d,e,f,g,h,i,j,k,l,m=!0,n="undefined",o=("sizcache"+Math.random()).replace(".",""),q=String,r=a.document,s=r.documentElement,t=0,u=0,v=[].pop,w=[].push,x=[].slice,y=[].indexOf||function(a){var b=0,c=this.length;for(;b<c;b++)if(this[b]===a)return b;return-1},z=function(a,b){return a[o]=b==null||b,a},A=function(){var a={},b=[];return z(function(c,d){return b.push(c)>e.cacheLength&&delete a[b.shift()],a[c]=d},a)},B=A(),C=A(),D=A(),E="[\\x20\\t\\r\\n\\f]",F="(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",G=F.replace("w","w#"),H="([*^$|!~]?=)",I="\\["+E+"*("+F+")"+E+"*(?:"+H+E+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+G+")|)|)"+E+"*\\]",J=":("+F+")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:"+I+")|[^:]|\\\\.)*|.*))\\)|)",K=":(even|odd|eq|gt|lt|nth|first|last)(?:\\("+E+"*((?:-\\d)?\\d*)"+E+"*\\)|)(?=[^-]|$)",L=new RegExp("^"+E+"+|((?:^|[^\\\\])(?:\\\\.)*)"+E+"+$","g"),M=new RegExp("^"+E+"*,"+E+"*"),N=new RegExp("^"+E+"*([\\x20\\t\\r\\n\\f>+~])"+E+"*"),O=new RegExp(J),P=/^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,Q=/^:not/,R=/[\x20\t\r\n\f]*[+~]/,S=/:not\($/,T=/h\d/i,U=/input|select|textarea|button/i,V=/\\(?!\\)/g,W={ID:new RegExp("^#("+F+")"),CLASS:new RegExp("^\\.("+F+")"),NAME:new RegExp("^\\[name=['\"]?("+F+")['\"]?\\]"),TAG:new RegExp("^("+F.replace("w","w*")+")"),ATTR:new RegExp("^"+I),PSEUDO:new RegExp("^"+J),POS:new RegExp(K,"i"),CHILD:new RegExp("^:(only|nth|first|last)-child(?:\\("+E+"*(even|odd|(([+-]|)(\\d*)n|)"+E+"*(?:([+-]|)"+E+"*(\\d+)|))"+E+"*\\)|)","i"),needsContext:new RegExp("^"+E+"*[>+~]|"+K,"i")},X=function(a){var b=r.createElement("div");try{return a(b)}catch(c){return!1}finally{b=null}},Y=X(function(a){return a.appendChild(r.createComment("")),!a.getElementsByTagName("*").length}),Z=X(function(a){return a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!==n&&a.firstChild.getAttribute("href")==="#"}),$=X(function(a){a.innerHTML="<select></select>";var b=typeof a.lastChild.getAttribute("multiple");return b!=="boolean"&&b!=="string"}),_=X(function(a){return a.innerHTML="<div class='hidden e'></div><div class='hidden'></div>",!a.getElementsByClassName||!a.getElementsByClassName("e").length?!1:(a.lastChild.className="e",a.getElementsByClassName("e").length===2)}),ba=X(function(a){a.id=o+0,a.innerHTML="<a name='"+o+"'></a><div name='"+o+"'></div>",s.insertBefore(a,s.firstChild);var b=r.getElementsByName&&r.getElementsByName(o).length===2+r.getElementsByName(o+0).length;return d=!r.getElementById(o),s.removeChild(a),b});try{x.call(s.childNodes,0)[0].nodeType}catch(bb){x=function(a){var b,c=[];for(;b=this[a];a++)c.push(b);return c}}bc.matches=function(a,b){return bc(a,null,null,b)},bc.matchesSelector=function(a,b){return bc(b,null,null,[a]).length>0},f=bc.getText=function(a){var b,c="",d=0,e=a.nodeType;if(e){if(e===1||e===9||e===11){if(typeof a.textContent=="string")return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=f(a)}else if(e===3||e===4)return a.nodeValue}else for(;b=a[d];d++)c+=f(b);return c},g=bc.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?b.nodeName!=="HTML":!1},h=bc.contains=s.contains?function(a,b){var c=a.nodeType===9?a.documentElement:a,d=b&&b.parentNode;return a===d||!!(d&&d.nodeType===1&&c.contains&&c.contains(d))}:s.compareDocumentPosition?function(a,b){return b&&!!(a.compareDocumentPosition(b)&16)}:function(a,b){while(b=b.parentNode)if(b===a)return!0;return!1},bc.attr=function(a,b){var c,d=g(a);return d||(b=b.toLowerCase()),(c=e.attrHandle[b])?c(a):d||$?a.getAttribute(b):(c=a.getAttributeNode(b),c?typeof a[b]=="boolean"?a[b]?b:null:c.specified?c.value:null:null)},e=bc.selectors={cacheLength:50,createPseudo:z,match:W,attrHandle:Z?{}:{href:function(a){return a.getAttribute("href",2)},type:function(a){return a.getAttribute("type")}},find:{ID:d?function(a,b,c){if(typeof b.getElementById!==n&&!c){var d=b.getElementById(a);return d&&d.parentNode?[d]:[]}}:function(a,c,d){if(typeof c.getElementById!==n&&!d){var e=c.getElementById(a);return e?e.id===a||typeof e.getAttributeNode!==n&&e.getAttributeNode("id").value===a?[e]:b:[]}},TAG:Y?function(a,b){if(typeof b.getElementsByTagName!==n)return b.getElementsByTagName(a)}:function(a,b){var c=b.getElementsByTagName(a);if(a==="*"){var d,e=[],f=0;for(;d=c[f];f++)d.nodeType===1&&e.push(d);return e}return c},NAME:ba&&function(a,b){if(typeof b.getElementsByName!==n)return b.getElementsByName(name)},CLASS:_&&function(a,b,c){if(typeof b.getElementsByClassName!==n&&!c)return b.getElementsByClassName(a)}},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(V,""),a[3]=(a[4]||a[5]||"").replace(V,""),a[2]==="~="&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),a[1]==="nth"?(a[2]||bc.error(a[0]),a[3]=+(a[3]?a[4]+(a[5]||1):2*(a[2]==="even"||a[2]==="odd")),a[4]=+(a[6]+a[7]||a[2]==="odd")):a[2]&&bc.error(a[0]),a},PSEUDO:function(a){var b,c;if(W.CHILD.test(a[0]))return null;if(a[3])a[2]=a[3];else if(b=a[4])O.test(b)&&(c=bh(b,!0))&&(c=b.indexOf(")",b.length-c)-b.length)&&(b=b.slice(0,c),a[0]=a[0].slice(0,c)),a[2]=b;return a.slice(0,3)}},filter:{ID:d?function(a){return a=a.replace(V,""),function(b){return b.getAttribute("id")===a}}:function(a){return a=a.replace(V,""),function(b){var c=typeof b.getAttributeNode!==n&&b.getAttributeNode("id");return c&&c.value===a}},TAG:function(a){return a==="*"?function(){return!0}:(a=a.replace(V,"").toLowerCase(),function(b){return b.nodeName&&b.nodeName.toLowerCase()===a})},CLASS:function(a){var b=B[o][a];return b||(b=B(a,new RegExp("(^|"+E+")"+a+"("+E+"|$)"))),function(a){return b.test(a.className||typeof a.getAttribute!==n&&a.getAttribute("class")||"")}},ATTR:function(a,b,c){return function(d,e){var f=bc.attr(d,a);return f==null?b==="!=":b?(f+="",b==="="?f===c:b==="!="?f!==c:b==="^="?c&&f.indexOf(c)===0:b==="*="?c&&f.indexOf(c)>-1:b==="$="?c&&f.substr(f.length-c.length)===c:b==="~="?(" "+f+" ").indexOf(c)>-1:b==="|="?f===c||f.substr(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d){return a==="nth"?function(a){var b,e,f=a.parentNode;if(c===1&&d===0)return!0;if(f){e=0;for(b=f.firstChild;b;b=b.nextSibling)if(b.nodeType===1){e++;if(a===b)break}}return e-=d,e===c||e%c===0&&e/c>=0}:function(b){var c=b;switch(a){case"only":case"first":while(c=c.previousSibling)if(c.nodeType===1)return!1;if(a==="first")return!0;c=b;case"last":while(c=c.nextSibling)if(c.nodeType===1)return!1;return!0}}},PSEUDO:function(a,b){var c,d=e.pseudos[a]||e.setFilters[a.toLowerCase()]||bc.error("unsupported pseudo: "+a);return d[o]?d(b):d.length>1?(c=[a,a,"",b],e.setFilters.hasOwnProperty(a.toLowerCase())?z(function(a,c){var e,f=d(a,b),g=f.length;while(g--)e=y.call(a,f[g]),a[e]=!(c[e]=f[g])}):function(a){return d(a,0,c)}):d}},pseudos:{not:z(function(a){var b=[],c=[],d=i(a.replace(L,"$1"));return d[o]?z(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)if(f=g[h])a[h]=!(b[h]=f)}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:z(function(a){return function(b){return bc(a,b).length>0}}),contains:z(function(a){return function(b){return(b.textContent||b.innerText||f(b)).indexOf(a)>-1}}),enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&!!a.checked||b==="option"&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},parent:function(a){return!e.pseudos.empty(a)},empty:function(a){var b;a=a.firstChild;while(a){if(a.nodeName>"@"||(b=a.nodeType)===3||b===4)return!1;a=a.nextSibling}return!0},header:function(a){return T.test(a.nodeName)},text:function(a){var b,c;return a.nodeName.toLowerCase()==="input"&&(b=a.type)==="text"&&((c=a.getAttribute("type"))==null||c.toLowerCase()===b)},radio:bd("radio"),checkbox:bd("checkbox"),file:bd("file"),password:bd("password"),image:bd("image"),submit:be("submit"),reset:be("reset"),button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&a.type==="button"||b==="button"},input:function(a){return U.test(a.nodeName)},focus:function(a){var b=a.ownerDocument;return a===b.activeElement&&(!b.hasFocus||b.hasFocus())&&(!!a.type||!!a.href)},active:function(a){return a===a.ownerDocument.activeElement},first:bf(function(a,b,c){return[0]}),last:bf(function(a,b,c){return[b-1]}),eq:bf(function(a,b,c){return[c<0?c+b:c]}),even:bf(function(a,b,c){for(var d=0;d<b;d+=2)a.push(d);return a}),odd:bf(function(a,b,c){for(var d=1;d<b;d+=2)a.push(d);return a}),lt:bf(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:bf(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},j=s.compareDocumentPosition?function(a,b){return a===b?(k=!0,0):(!a.compareDocumentPosition||!b.compareDocumentPosition?a.compareDocumentPosition:a.compareDocumentPosition(b)&4)?-1:1}:function(a,b){if(a===b)return k=!0,0;if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,h=b.parentNode,i=g;if(g===h)return bg(a,b);if(!g)return-1;if(!h)return 1;while(i)e.unshift(i),i=i.parentNode;i=h;while(i)f.unshift(i),i=i.parentNode;c=e.length,d=f.length;for(var j=0;j<c&&j<d;j++)if(e[j]!==f[j])return bg(e[j],f[j]);return j===c?bg(a,f[j],-1):bg(e[j],b,1)},[0,0].sort(j),m=!k,bc.uniqueSort=function(a){var b,c=1;k=m,a.sort(j);if(k)for(;b=a[c];c++)b===a[c-1]&&a.splice(c--,1);return a},bc.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},i=bc.compile=function(a,b){var c,d=[],e=[],f=D[o][a];if(!f){b||(b=bh(a)),c=b.length;while(c--)f=bm(b[c]),f[o]?d.push(f):e.push(f);f=D(a,bn(e,d))}return f},r.querySelectorAll&&function(){var a,b=bp,c=/'|\\/g,d=/\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,e=[":focus"],f=[":active",":focus"],h=s.matchesSelector||s.mozMatchesSelector||s.webkitMatchesSelector||s.oMatchesSelector||s.msMatchesSelector;X(function(a){a.innerHTML="<select><option selected=''></option></select>",a.querySelectorAll("[selected]").length||e.push("\\["+E+"*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),a.querySelectorAll(":checked").length||e.push(":checked")}),X(function(a){a.innerHTML="<p test=''></p>",a.querySelectorAll("[test^='']").length&&e.push("[*^$]="+E+"*(?:\"\"|'')"),a.innerHTML="<input type='hidden'/>",a.querySelectorAll(":enabled").length||e.push(":enabled",":disabled")}),e=new RegExp(e.join("|")),bp=function(a,d,f,g,h){if(!g&&!h&&(!e||!e.test(a))){var i,j,k=!0,l=o,m=d,n=d.nodeType===9&&a;if(d.nodeType===1&&d.nodeName.toLowerCase()!=="object"){i=bh(a),(k=d.getAttribute("id"))?l=k.replace(c,"\\$&"):d.setAttribute("id",l),l="[id='"+l+"'] ",j=i.length;while(j--)i[j]=l+i[j].join("");m=R.test(a)&&d.parentNode||d,n=i.join(",")}if(n)try{return w.apply(f,x.call(m.querySelectorAll(n),0)),f}catch(p){}finally{k||d.removeAttribute("id")}}return b(a,d,f,g,h)},h&&(X(function(b){a=h.call(b,"div");try{h.call(b,"[test!='']:sizzle"),f.push("!=",J)}catch(c){}}),f=new RegExp(f.join("|")),bc.matchesSelector=function(b,c){c=c.replace(d,"='$1']");if(!g(b)&&!f.test(c)&&(!e||!e.test(c)))try{var i=h.call(b,c);if(i||a||b.document&&b.document.nodeType!==11)return i}catch(j){}return bc(c,null,null,[b]).length>0})}(),e.pseudos.nth=e.pseudos.eq,e.filters=bq.prototype=e.pseudos,e.setFilters=new bq,bc.attr=p.attr,p.find=bc,p.expr=bc.selectors,p.expr[":"]=p.expr.pseudos,p.unique=bc.uniqueSort,p.text=bc.getText,p.isXMLDoc=bc.isXML,p.contains=bc.contains}(a);var bc=/Until$/,bd=/^(?:parents|prev(?:Until|All))/,be=/^.[^:#\[\.,]*$/,bf=p.expr.match.needsContext,bg={children:!0,contents:!0,next:!0,prev:!0};p.fn.extend({find:function(a){var b,c,d,e,f,g,h=this;if(typeof a!="string")return p(a).filter(function(){for(b=0,c=h.length;b<c;b++)if(p.contains(h[b],this))return!0});g=this.pushStack("","find",a);for(b=0,c=this.length;b<c;b++){d=g.length,p.find(a,this[b],g);if(b>0)for(e=d;e<g.length;e++)for(f=0;f<d;f++)if(g[f]===g[e]){g.splice(e--,1);break}}return g},has:function(a){var b,c=p(a,this),d=c.length;return this.filter(function(){for(b=0;b<d;b++)if(p.contains(this,c[b]))return!0})},not:function(a){return this.pushStack(bj(this,a,!1),"not",a)},filter:function(a){return this.pushStack(bj(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?bf.test(a)?p(a,this.context).index(this[0])>=0:p.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c,d=0,e=this.length,f=[],g=bf.test(a)||typeof a!="string"?p(a,b||this.context):0;for(;d<e;d++){c=this[d];while(c&&c.ownerDocument&&c!==b&&c.nodeType!==11){if(g?g.index(c)>-1:p.find.matchesSelector(c,a)){f.push(c);break}c=c.parentNode}}return f=f.length>1?p.unique(f):f,this.pushStack(f,"closest",a)},index:function(a){return a?typeof a=="string"?p.inArray(this[0],p(a)):p.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.prevAll().length:-1},add:function(a,b){var c=typeof a=="string"?p(a,b):p.makeArray(a&&a.nodeType?[a]:a),d=p.merge(this.get(),c);return this.pushStack(bh(c[0])||bh(d[0])?d:p.unique(d))},addBack:function(a){return this.add(a==null?this.prevObject:this.prevObject.filter(a))}}),p.fn.andSelf=p.fn.addBack,p.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return p.dir(a,"parentNode")},parentsUntil:function(a,b,c){return p.dir(a,"parentNode",c)},next:function(a){return bi(a,"nextSibling")},prev:function(a){return bi(a,"previousSibling")},nextAll:function(a){return p.dir(a,"nextSibling")},prevAll:function(a){return p.dir(a,"previousSibling")},nextUntil:function(a,b,c){return p.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return p.dir(a,"previousSibling",c)},siblings:function(a){return p.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return p.sibling(a.firstChild)},contents:function(a){return p.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:p.merge([],a.childNodes)}},function(a,b){p.fn[a]=function(c,d){var e=p.map(this,b,c);return bc.test(a)||(d=c),d&&typeof d=="string"&&(e=p.filter(d,e)),e=this.length>1&&!bg[a]?p.unique(e):e,this.length>1&&bd.test(a)&&(e=e.reverse()),this.pushStack(e,a,k.call(arguments).join(","))}}),p.extend({filter:function(a,b,c){return c&&(a=":not("+a+")"),b.length===1?p.find.matchesSelector(b[0],a)?[b[0]]:[]:p.find.matches(a,b)},dir:function(a,c,d){var e=[],f=a[c];while(f&&f.nodeType!==9&&(d===b||f.nodeType!==1||!p(f).is(d)))f.nodeType===1&&e.push(f),f=f[c];return e},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var bl="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",bm=/ jQuery\d+="(?:null|\d+)"/g,bn=/^\s+/,bo=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,bp=/<([\w:]+)/,bq=/<tbody/i,br=/<|&#?\w+;/,bs=/<(?:script|style|link)/i,bt=/<(?:script|object|embed|option|style)/i,bu=new RegExp("<(?:"+bl+")[\\s/>]","i"),bv=/^(?:checkbox|radio)$/,bw=/checked\s*(?:[^=]|=\s*.checked.)/i,bx=/\/(java|ecma)script/i,by=/^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,bz={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},bA=bk(e),bB=bA.appendChild(e.createElement("div"));bz.optgroup=bz.option,bz.tbody=bz.tfoot=bz.colgroup=bz.caption=bz.thead,bz.th=bz.td,p.support.htmlSerialize||(bz._default=[1,"X<div>","</div>"]),p.fn.extend({text:function(a){return p.access(this,function(a){return a===b?p.text(this):this.empty().append((this[0]&&this[0].ownerDocument||e).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(p.isFunction(a))return this.each(function(b){p(this).wrapAll(a.call(this,b))});if(this[0]){var b=p(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return p.isFunction(a)?this.each(function(b){p(this).wrapInner(a.call(this,b))}):this.each(function(){var b=p(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=p.isFunction(a);return this.each(function(c){p(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){p.nodeName(this,"body")||p(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.insertBefore(a,this.firstChild)})},before:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(a,this),"before",this.selector)}},after:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(this,a),"after",this.selector)}},remove:function(a,b){var c,d=0;for(;(c=this[d])!=null;d++)if(!a||p.filter(a,[c]).length)!b&&c.nodeType===1&&(p.cleanData(c.getElementsByTagName("*")),p.cleanData([c])),c.parentNode&&c.parentNode.removeChild(c);return this},empty:function(){var a,b=0;for(;(a=this[b])!=null;b++){a.nodeType===1&&p.cleanData(a.getElementsByTagName("*"));while(a.firstChild)a.removeChild(a.firstChild)}return this},clone:function(a,b){return a=a==null?!1:a,b=b==null?a:b,this.map(function(){return p.clone(this,a,b)})},html:function(a){return p.access(this,function(a){var c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(bm,""):b;if(typeof a=="string"&&!bs.test(a)&&(p.support.htmlSerialize||!bu.test(a))&&(p.support.leadingWhitespace||!bn.test(a))&&!bz[(bp.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(bo,"<$1></$2>");try{for(;d<e;d++)c=this[d]||{},c.nodeType===1&&(p.cleanData(c.getElementsByTagName("*")),c.innerHTML=a);c=0}catch(f){}}c&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){return bh(this[0])?this.length?this.pushStack(p(p.isFunction(a)?a():a),"replaceWith",a):this:p.isFunction(a)?this.each(function(b){var c=p(this),d=c.html();c.replaceWith(a.call(this,b,d))}):(typeof a!="string"&&(a=p(a).detach()),this.each(function(){var b=this.nextSibling,c=this.parentNode;p(this).remove(),b?p(b).before(a):p(c).append(a)}))},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){a=[].concat.apply([],a);var e,f,g,h,i=0,j=a[0],k=[],l=this.length;if(!p.support.checkClone&&l>1&&typeof j=="string"&&bw.test(j))return this.each(function(){p(this).domManip(a,c,d)});if(p.isFunction(j))return this.each(function(e){var f=p(this);a[0]=j.call(this,e,c?f.html():b),f.domManip(a,c,d)});if(this[0]){e=p.buildFragment(a,this,k),g=e.fragment,f=g.firstChild,g.childNodes.length===1&&(g=f);if(f){c=c&&p.nodeName(f,"tr");for(h=e.cacheable||l-1;i<l;i++)d.call(c&&p.nodeName(this[i],"table")?bC(this[i],"tbody"):this[i],i===h?g:p.clone(g,!0,!0))}g=f=null,k.length&&p.each(k,function(a,b){b.src?p.ajax?p.ajax({url:b.src,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0}):p.error("no ajax"):p.globalEval((b.text||b.textContent||b.innerHTML||"").replace(by,"")),b.parentNode&&b.parentNode.removeChild(b)})}return this}}),p.buildFragment=function(a,c,d){var f,g,h,i=a[0];return c=c||e,c=!c.nodeType&&c[0]||c,c=c.ownerDocument||c,a.length===1&&typeof i=="string"&&i.length<512&&c===e&&i.charAt(0)==="<"&&!bt.test(i)&&(p.support.checkClone||!bw.test(i))&&(p.support.html5Clone||!bu.test(i))&&(g=!0,f=p.fragments[i],h=f!==b),f||(f=c.createDocumentFragment(),p.clean(a,c,f,d),g&&(p.fragments[i]=h&&f)),{fragment:f,cacheable:g}},p.fragments={},p.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){p.fn[a]=function(c){var d,e=0,f=[],g=p(c),h=g.length,i=this.length===1&&this[0].parentNode;if((i==null||i&&i.nodeType===11&&i.childNodes.length===1)&&h===1)return g[b](this[0]),this;for(;e<h;e++)d=(e>0?this.clone(!0):this).get(),p(g[e])[b](d),f=f.concat(d);return this.pushStack(f,a,g.selector)}}),p.extend({clone:function(a,b,c){var d,e,f,g;p.support.html5Clone||p.isXMLDoc(a)||!bu.test("<"+a.nodeName+">")?g=a.cloneNode(!0):(bB.innerHTML=a.outerHTML,bB.removeChild(g=bB.firstChild));if((!p.support.noCloneEvent||!p.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!p.isXMLDoc(a)){bE(a,g),d=bF(a),e=bF(g);for(f=0;d[f];++f)e[f]&&bE(d[f],e[f])}if(b){bD(a,g);if(c){d=bF(a),e=bF(g);for(f=0;d[f];++f)bD(d[f],e[f])}}return d=e=null,g},clean:function(a,b,c,d){var f,g,h,i,j,k,l,m,n,o,q,r,s=b===e&&bA,t=[];if(!b||typeof b.createDocumentFragment=="undefined")b=e;for(f=0;(h=a[f])!=null;f++){typeof h=="number"&&(h+="");if(!h)continue;if(typeof h=="string")if(!br.test(h))h=b.createTextNode(h);else{s=s||bk(b),l=b.createElement("div"),s.appendChild(l),h=h.replace(bo,"<$1></$2>"),i=(bp.exec(h)||["",""])[1].toLowerCase(),j=bz[i]||bz._default,k=j[0],l.innerHTML=j[1]+h+j[2];while(k--)l=l.lastChild;if(!p.support.tbody){m=bq.test(h),n=i==="table"&&!m?l.firstChild&&l.firstChild.childNodes:j[1]==="<table>"&&!m?l.childNodes:[];for(g=n.length-1;g>=0;--g)p.nodeName(n[g],"tbody")&&!n[g].childNodes.length&&n[g].parentNode.removeChild(n[g])}!p.support.leadingWhitespace&&bn.test(h)&&l.insertBefore(b.createTextNode(bn.exec(h)[0]),l.firstChild),h=l.childNodes,l.parentNode.removeChild(l)}h.nodeType?t.push(h):p.merge(t,h)}l&&(h=l=s=null);if(!p.support.appendChecked)for(f=0;(h=t[f])!=null;f++)p.nodeName(h,"input")?bG(h):typeof h.getElementsByTagName!="undefined"&&p.grep(h.getElementsByTagName("input"),bG);if(c){q=function(a){if(!a.type||bx.test(a.type))return d?d.push(a.parentNode?a.parentNode.removeChild(a):a):c.appendChild(a)};for(f=0;(h=t[f])!=null;f++)if(!p.nodeName(h,"script")||!q(h))c.appendChild(h),typeof h.getElementsByTagName!="undefined"&&(r=p.grep(p.merge([],h.getElementsByTagName("script")),q),t.splice.apply(t,[f+1,0].concat(r)),f+=r.length)}return t},cleanData:function(a,b){var c,d,e,f,g=0,h=p.expando,i=p.cache,j=p.support.deleteExpando,k=p.event.special;for(;(e=a[g])!=null;g++)if(b||p.acceptData(e)){d=e[h],c=d&&i[d];if(c){if(c.events)for(f in c.events)k[f]?p.event.remove(e,f):p.removeEvent(e,f,c.handle);i[d]&&(delete i[d],j?delete e[h]:e.removeAttribute?e.removeAttribute(h):e[h]=null,p.deletedIds.push(d))}}}}),function(){var a,b;p.uaMatch=function(a){a=a.toLowerCase();var b=/(chrome)[ \/]([\w.]+)/.exec(a)||/(webkit)[ \/]([\w.]+)/.exec(a)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||a.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},a=p.uaMatch(g.userAgent),b={},a.browser&&(b[a.browser]=!0,b.version=a.version),b.chrome?b.webkit=!0:b.webkit&&(b.safari=!0),p.browser=b,p.sub=function(){function a(b,c){return new a.fn.init(b,c)}p.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function c(c,d){return d&&d instanceof p&&!(d instanceof a)&&(d=a(d)),p.fn.init.call(this,c,d,b)},a.fn.init.prototype=a.fn;var b=a(e);return a}}();var bH,bI,bJ,bK=/alpha\([^)]*\)/i,bL=/opacity=([^)]*)/,bM=/^(top|right|bottom|left)$/,bN=/^(none|table(?!-c[ea]).+)/,bO=/^margin/,bP=new RegExp("^("+q+")(.*)$","i"),bQ=new RegExp("^("+q+")(?!px)[a-z%]+$","i"),bR=new RegExp("^([-+])=("+q+")","i"),bS={},bT={position:"absolute",visibility:"hidden",display:"block"},bU={letterSpacing:0,fontWeight:400},bV=["Top","Right","Bottom","Left"],bW=["Webkit","O","Moz","ms"],bX=p.fn.toggle;p.fn.extend({css:function(a,c){return p.access(this,function(a,c,d){return d!==b?p.style(a,c,d):p.css(a,c)},a,c,arguments.length>1)},show:function(){return b$(this,!0)},hide:function(){return b$(this)},toggle:function(a,b){var c=typeof a=="boolean";return p.isFunction(a)&&p.isFunction(b)?bX.apply(this,arguments):this.each(function(){(c?a:bZ(this))?p(this).show():p(this).hide()})}}),p.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bH(a,"opacity");return c===""?"1":c}}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":p.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!a||a.nodeType===3||a.nodeType===8||!a.style)return;var f,g,h,i=p.camelCase(c),j=a.style;c=p.cssProps[i]||(p.cssProps[i]=bY(j,i)),h=p.cssHooks[c]||p.cssHooks[i];if(d===b)return h&&"get"in h&&(f=h.get(a,!1,e))!==b?f:j[c];g=typeof d,g==="string"&&(f=bR.exec(d))&&(d=(f[1]+1)*f[2]+parseFloat(p.css(a,c)),g="number");if(d==null||g==="number"&&isNaN(d))return;g==="number"&&!p.cssNumber[i]&&(d+="px");if(!h||!("set"in h)||(d=h.set(a,d,e))!==b)try{j[c]=d}catch(k){}},css:function(a,c,d,e){var f,g,h,i=p.camelCase(c);return c=p.cssProps[i]||(p.cssProps[i]=bY(a.style,i)),h=p.cssHooks[c]||p.cssHooks[i],h&&"get"in h&&(f=h.get(a,!0,e)),f===b&&(f=bH(a,c)),f==="normal"&&c in bU&&(f=bU[c]),d||e!==b?(g=parseFloat(f),d||p.isNumeric(g)?g||0:f):f},swap:function(a,b,c){var d,e,f={};for(e in b)f[e]=a.style[e],a.style[e]=b[e];d=c.call(a);for(e in b)a.style[e]=f[e];return d}}),a.getComputedStyle?bH=function(b,c){var d,e,f,g,h=a.getComputedStyle(b,null),i=b.style;return h&&(d=h[c],d===""&&!p.contains(b.ownerDocument,b)&&(d=p.style(b,c)),bQ.test(d)&&bO.test(c)&&(e=i.width,f=i.minWidth,g=i.maxWidth,i.minWidth=i.maxWidth=i.width=d,d=h.width,i.width=e,i.minWidth=f,i.maxWidth=g)),d}:e.documentElement.currentStyle&&(bH=function(a,b){var c,d,e=a.currentStyle&&a.currentStyle[b],f=a.style;return e==null&&f&&f[b]&&(e=f[b]),bQ.test(e)&&!bM.test(b)&&(c=f.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),f.left=b==="fontSize"?"1em":e,e=f.pixelLeft+"px",f.left=c,d&&(a.runtimeStyle.left=d)),e===""?"auto":e}),p.each(["height","width"],function(a,b){p.cssHooks[b]={get:function(a,c,d){if(c)return a.offsetWidth===0&&bN.test(bH(a,"display"))?p.swap(a,bT,function(){return cb(a,b,d)}):cb(a,b,d)},set:function(a,c,d){return b_(a,c,d?ca(a,b,d,p.support.boxSizing&&p.css(a,"boxSizing")==="border-box"):0)}}}),p.support.opacity||(p.cssHooks.opacity={get:function(a,b){return bL.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=p.isNumeric(b)?"alpha(opacity="+b*100+")":"",f=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&p.trim(f.replace(bK,""))===""&&c.removeAttribute){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bK.test(f)?f.replace(bK,e):f+" "+e}}),p(function(){p.support.reliableMarginRight||(p.cssHooks.marginRight={get:function(a,b){return p.swap(a,{display:"inline-block"},function(){if(b)return bH(a,"marginRight")})}}),!p.support.pixelPosition&&p.fn.position&&p.each(["top","left"],function(a,b){p.cssHooks[b]={get:function(a,c){if(c){var d=bH(a,b);return bQ.test(d)?p(a).position()[b]+"px":d}}}})}),p.expr&&p.expr.filters&&(p.expr.filters.hidden=function(a){return a.offsetWidth===0&&a.offsetHeight===0||!p.support.reliableHiddenOffsets&&(a.style&&a.style.display||bH(a,"display"))==="none"},p.expr.filters.visible=function(a){return!p.expr.filters.hidden(a)}),p.each({margin:"",padding:"",border:"Width"},function(a,b){p.cssHooks[a+b]={expand:function(c){var d,e=typeof c=="string"?c.split(" "):[c],f={};for(d=0;d<4;d++)f[a+bV[d]+b]=e[d]||e[d-2]||e[0];return f}},bO.test(a)||(p.cssHooks[a+b].set=b_)});var cd=/%20/g,ce=/\[\]$/,cf=/\r?\n/g,cg=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,ch=/^(?:select|textarea)/i;p.fn.extend({serialize:function(){return p.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?p.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ch.test(this.nodeName)||cg.test(this.type))}).map(function(a,b){var c=p(this).val();return c==null?null:p.isArray(c)?p.map(c,function(a,c){return{name:b.name,value:a.replace(cf,"\r\n")}}):{name:b.name,value:c.replace(cf,"\r\n")}}).get()}}),p.param=function(a,c){var d,e=[],f=function(a,b){b=p.isFunction(b)?b():b==null?"":b,e[e.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=p.ajaxSettings&&p.ajaxSettings.traditional);if(p.isArray(a)||a.jquery&&!p.isPlainObject(a))p.each(a,function(){f(this.name,this.value)});else for(d in a)ci(d,a[d],c,f);return e.join("&").replace(cd,"+")};var cj,ck,cl=/#.*$/,cm=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,cn=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,co=/^(?:GET|HEAD)$/,cp=/^\/\//,cq=/\?/,cr=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,cs=/([?&])_=[^&]*/,ct=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,cu=p.fn.load,cv={},cw={},cx=["*/"]+["*"];try{ck=f.href}catch(cy){ck=e.createElement("a"),ck.href="",ck=ck.href}cj=ct.exec(ck.toLowerCase())||[],p.fn.load=function(a,c,d){if(typeof a!="string"&&cu)return cu.apply(this,arguments);if(!this.length)return this;var e,f,g,h=this,i=a.indexOf(" ");return i>=0&&(e=a.slice(i,a.length),a=a.slice(0,i)),p.isFunction(c)?(d=c,c=b):c&&typeof c=="object"&&(f="POST"),p.ajax({url:a,type:f,dataType:"html",data:c,complete:function(a,b){d&&h.each(d,g||[a.responseText,b,a])}}).done(function(a){g=arguments,h.html(e?p("<div>").append(a.replace(cr,"")).find(e):a)}),this},p.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){p.fn[b]=function(a){return this.on(b,a)}}),p.each(["get","post"],function(a,c){p[c]=function(a,d,e,f){return p.isFunction(d)&&(f=f||e,e=d,d=b),p.ajax({type:c,url:a,data:d,success:e,dataType:f})}}),p.extend({getScript:function(a,c){return p.get(a,b,c,"script")},getJSON:function(a,b,c){return p.get(a,b,c,"json")},ajaxSetup:function(a,b){return b?cB(a,p.ajaxSettings):(b=a,a=p.ajaxSettings),cB(a,b),a},ajaxSettings:{url:ck,isLocal:cn.test(cj[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":cx},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":p.parseJSON,"text xml":p.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:cz(cv),ajaxTransport:cz(cw),ajax:function(a,c){function y(a,c,f,i){var k,s,t,u,w,y=c;if(v===2)return;v=2,h&&clearTimeout(h),g=b,e=i||"",x.readyState=a>0?4:0,f&&(u=cC(l,x,f));if(a>=200&&a<300||a===304)l.ifModified&&(w=x.getResponseHeader("Last-Modified"),w&&(p.lastModified[d]=w),w=x.getResponseHeader("Etag"),w&&(p.etag[d]=w)),a===304?(y="notmodified",k=!0):(k=cD(l,u),y=k.state,s=k.data,t=k.error,k=!t);else{t=y;if(!y||a)y="error",a<0&&(a=0)}x.status=a,x.statusText=(c||y)+"",k?o.resolveWith(m,[s,y,x]):o.rejectWith(m,[x,y,t]),x.statusCode(r),r=b,j&&n.trigger("ajax"+(k?"Success":"Error"),[x,l,k?s:t]),q.fireWith(m,[x,y]),j&&(n.trigger("ajaxComplete",[x,l]),--p.active||p.event.trigger("ajaxStop"))}typeof a=="object"&&(c=a,a=b),c=c||{};var d,e,f,g,h,i,j,k,l=p.ajaxSetup({},c),m=l.context||l,n=m!==l&&(m.nodeType||m instanceof p)?p(m):p.event,o=p.Deferred(),q=p.Callbacks("once memory"),r=l.statusCode||{},t={},u={},v=0,w="canceled",x={readyState:0,setRequestHeader:function(a,b){if(!v){var c=a.toLowerCase();a=u[c]=u[c]||a,t[a]=b}return this},getAllResponseHeaders:function(){return v===2?e:null},getResponseHeader:function(a){var c;if(v===2){if(!f){f={};while(c=cm.exec(e))f[c[1].toLowerCase()]=c[2]}c=f[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){return v||(l.mimeType=a),this},abort:function(a){return a=a||w,g&&g.abort(a),y(0,a),this}};o.promise(x),x.success=x.done,x.error=x.fail,x.complete=q.add,x.statusCode=function(a){if(a){var b;if(v<2)for(b in a)r[b]=[r[b],a[b]];else b=a[x.status],x.always(b)}return this},l.url=((a||l.url)+"").replace(cl,"").replace(cp,cj[1]+"//"),l.dataTypes=p.trim(l.dataType||"*").toLowerCase().split(s),l.crossDomain==null&&(i=ct.exec(l.url.toLowerCase())||!1,l.crossDomain=i&&i.join(":")+(i[3]?"":i[1]==="http:"?80:443)!==cj.join(":")+(cj[3]?"":cj[1]==="http:"?80:443)),l.data&&l.processData&&typeof l.data!="string"&&(l.data=p.param(l.data,l.traditional)),cA(cv,l,c,x);if(v===2)return x;j=l.global,l.type=l.type.toUpperCase(),l.hasContent=!co.test(l.type),j&&p.active++===0&&p.event.trigger("ajaxStart");if(!l.hasContent){l.data&&(l.url+=(cq.test(l.url)?"&":"?")+l.data,delete l.data),d=l.url;if(l.cache===!1){var z=p.now(),A=l.url.replace(cs,"$1_="+z);l.url=A+(A===l.url?(cq.test(l.url)?"&":"?")+"_="+z:"")}}(l.data&&l.hasContent&&l.contentType!==!1||c.contentType)&&x.setRequestHeader("Content-Type",l.contentType),l.ifModified&&(d=d||l.url,p.lastModified[d]&&x.setRequestHeader("If-Modified-Since",p.lastModified[d]),p.etag[d]&&x.setRequestHeader("If-None-Match",p.etag[d])),x.setRequestHeader("Accept",l.dataTypes[0]&&l.accepts[l.dataTypes[0]]?l.accepts[l.dataTypes[0]]+(l.dataTypes[0]!=="*"?", "+cx+"; q=0.01":""):l.accepts["*"]);for(k in l.headers)x.setRequestHeader(k,l.headers[k]);if(!l.beforeSend||l.beforeSend.call(m,x,l)!==!1&&v!==2){w="abort";for(k in{success:1,error:1,complete:1})x[k](l[k]);g=cA(cw,l,c,x);if(!g)y(-1,"No Transport");else{x.readyState=1,j&&n.trigger("ajaxSend",[x,l]),l.async&&l.timeout>0&&(h=setTimeout(function(){x.abort("timeout")},l.timeout));try{v=1,g.send(t,y)}catch(B){if(v<2)y(-1,B);else throw B}}return x}return x.abort()},active:0,lastModified:{},etag:{}});var cE=[],cF=/\?/,cG=/(=)\?(?=&|$)|\?\?/,cH=p.now();p.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=cE.pop()||p.expando+"_"+cH++;return this[a]=!0,a}}),p.ajaxPrefilter("json jsonp",function(c,d,e){var f,g,h,i=c.data,j=c.url,k=c.jsonp!==!1,l=k&&cG.test(j),m=k&&!l&&typeof i=="string"&&!(c.contentType||"").indexOf("application/x-www-form-urlencoded")&&cG.test(i);if(c.dataTypes[0]==="jsonp"||l||m)return f=c.jsonpCallback=p.isFunction(c.jsonpCallback)?c.jsonpCallback():c.jsonpCallback,g=a[f],l?c.url=j.replace(cG,"$1"+f):m?c.data=i.replace(cG,"$1"+f):k&&(c.url+=(cF.test(j)?"&":"?")+c.jsonp+"="+f),c.converters["script json"]=function(){return h||p.error(f+" was not called"),h[0]},c.dataTypes[0]="json",a[f]=function(){h=arguments},e.always(function(){a[f]=g,c[f]&&(c.jsonpCallback=d.jsonpCallback,cE.push(f)),h&&p.isFunction(g)&&g(h[0]),h=g=b}),"script"}),p.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){return p.globalEval(a),a}}}),p.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),p.ajaxTransport("script",function(a){if(a.crossDomain){var c,d=e.head||e.getElementsByTagName("head")[0]||e.documentElement;return{send:function(f,g){c=e.createElement("script"),c.async="async",a.scriptCharset&&(c.charset=a.scriptCharset),c.src=a.url,c.onload=c.onreadystatechange=function(a,e){if(e||!c.readyState||/loaded|complete/.test(c.readyState))c.onload=c.onreadystatechange=null,d&&c.parentNode&&d.removeChild(c),c=b,e||g(200,"success")},d.insertBefore(c,d.firstChild)},abort:function(){c&&c.onload(0,1)}}}});var cI,cJ=a.ActiveXObject?function(){for(var a in cI)cI[a](0,1)}:!1,cK=0;p.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&cL()||cM()}:cL,function(a){p.extend(p.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(p.ajaxSettings.xhr()),p.support.ajax&&p.ajaxTransport(function(c){if(!c.crossDomain||p.support.cors){var d;return{send:function(e,f){var g,h,i=c.xhr();c.username?i.open(c.type,c.url,c.async,c.username,c.password):i.open(c.type,c.url,c.async);if(c.xhrFields)for(h in c.xhrFields)i[h]=c.xhrFields[h];c.mimeType&&i.overrideMimeType&&i.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(h in e)i.setRequestHeader(h,e[h])}catch(j){}i.send(c.hasContent&&c.data||null),d=function(a,e){var h,j,k,l,m;try{if(d&&(e||i.readyState===4)){d=b,g&&(i.onreadystatechange=p.noop,cJ&&delete cI[g]);if(e)i.readyState!==4&&i.abort();else{h=i.status,k=i.getAllResponseHeaders(),l={},m=i.responseXML,m&&m.documentElement&&(l.xml=m);try{l.text=i.responseText}catch(a){}try{j=i.statusText}catch(n){j=""}!h&&c.isLocal&&!c.crossDomain?h=l.text?200:404:h===1223&&(h=204)}}}catch(o){e||f(-1,o)}l&&f(h,j,l,k)},c.async?i.readyState===4?setTimeout(d,0):(g=++cK,cJ&&(cI||(cI={},p(a).unload(cJ)),cI[g]=d),i.onreadystatechange=d):d()},abort:function(){d&&d(0,1)}}}});var cN,cO,cP=/^(?:toggle|show|hide)$/,cQ=new RegExp("^(?:([-+])=|)("+q+")([a-z%]*)$","i"),cR=/queueHooks$/,cS=[cY],cT={"*":[function(a,b){var c,d,e=this.createTween(a,b),f=cQ.exec(b),g=e.cur(),h=+g||0,i=1,j=20;if(f){c=+f[2],d=f[3]||(p.cssNumber[a]?"":"px");if(d!=="px"&&h){h=p.css(e.elem,a,!0)||c||1;do i=i||".5",h=h/i,p.style(e.elem,a,h+d);while(i!==(i=e.cur()/g)&&i!==1&&--j)}e.unit=d,e.start=h,e.end=f[1]?h+(f[1]+1)*c:c}return e}]};p.Animation=p.extend(cW,{tweener:function(a,b){p.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");var c,d=0,e=a.length;for(;d<e;d++)c=a[d],cT[c]=cT[c]||[],cT[c].unshift(b)},prefilter:function(a,b){b?cS.unshift(a):cS.push(a)}}),p.Tween=cZ,cZ.prototype={constructor:cZ,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(p.cssNumber[c]?"":"px")},cur:function(){var a=cZ.propHooks[this.prop];return a&&a.get?a.get(this):cZ.propHooks._default.get(this)},run:function(a){var b,c=cZ.propHooks[this.prop];return this.options.duration?this.pos=b=p.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):cZ.propHooks._default.set(this),this}},cZ.prototype.init.prototype=cZ.prototype,cZ.propHooks={_default:{get:function(a){var b;return a.elem[a.prop]==null||!!a.elem.style&&a.elem.style[a.prop]!=null?(b=p.css(a.elem,a.prop,!1,""),!b||b==="auto"?0:b):a.elem[a.prop]},set:function(a){p.fx.step[a.prop]?p.fx.step[a.prop](a):a.elem.style&&(a.elem.style[p.cssProps[a.prop]]!=null||p.cssHooks[a.prop])?p.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},cZ.propHooks.scrollTop=cZ.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},p.each(["toggle","show","hide"],function(a,b){var c=p.fn[b];p.fn[b]=function(d,e,f){return d==null||typeof d=="boolean"||!a&&p.isFunction(d)&&p.isFunction(e)?c.apply(this,arguments):this.animate(c$(b,!0),d,e,f)}}),p.fn.extend({fadeTo:function(a,b,c,d){return this.filter(bZ).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=p.isEmptyObject(a),f=p.speed(b,c,d),g=function(){var b=cW(this,p.extend({},a),f);e&&b.stop(!0)};return e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,c,d){var e=function(a){var b=a.stop;delete a.stop,b(d)};return typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,c=a!=null&&a+"queueHooks",f=p.timers,g=p._data(this);if(c)g[c]&&g[c].stop&&e(g[c]);else for(c in g)g[c]&&g[c].stop&&cR.test(c)&&e(g[c]);for(c=f.length;c--;)f[c].elem===this&&(a==null||f[c].queue===a)&&(f[c].anim.stop(d),b=!1,f.splice(c,1));(b||!d)&&p.dequeue(this,a)})}}),p.each({slideDown:c$("show"),slideUp:c$("hide"),slideToggle:c$("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){p.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),p.speed=function(a,b,c){var d=a&&typeof a=="object"?p.extend({},a):{complete:c||!c&&b||p.isFunction(a)&&a,duration:a,easing:c&&b||b&&!p.isFunction(b)&&b};d.duration=p.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in p.fx.speeds?p.fx.speeds[d.duration]:p.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";return d.old=d.complete,d.complete=function(){p.isFunction(d.old)&&d.old.call(this),d.queue&&p.dequeue(this,d.queue)},d},p.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},p.timers=[],p.fx=cZ.prototype.init,p.fx.tick=function(){var a,b=p.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||p.fx.stop()},p.fx.timer=function(a){a()&&p.timers.push(a)&&!cO&&(cO=setInterval(p.fx.tick,p.fx.interval))},p.fx.interval=13,p.fx.stop=function(){clearInterval(cO),cO=null},p.fx.speeds={slow:600,fast:200,_default:400},p.fx.step={},p.expr&&p.expr.filters&&(p.expr.filters.animated=function(a){return p.grep(p.timers,function(b){return a===b.elem}).length});var c_=/^(?:body|html)$/i;p.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){p.offset.setOffset(this,a,b)});var c,d,e,f,g,h,i,j={top:0,left:0},k=this[0],l=k&&k.ownerDocument;if(!l)return;return(d=l.body)===k?p.offset.bodyOffset(k):(c=l.documentElement,p.contains(c,k)?(typeof k.getBoundingClientRect!="undefined"&&(j=k.getBoundingClientRect()),e=da(l),f=c.clientTop||d.clientTop||0,g=c.clientLeft||d.clientLeft||0,h=e.pageYOffset||c.scrollTop,i=e.pageXOffset||c.scrollLeft,{top:j.top+h-f,left:j.left+i-g}):j)},p.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;return p.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(p.css(a,"marginTop"))||0,c+=parseFloat(p.css(a,"marginLeft"))||0),{top:b,left:c}},setOffset:function(a,b,c){var d=p.css(a,"position");d==="static"&&(a.style.position="relative");var e=p(a),f=e.offset(),g=p.css(a,"top"),h=p.css(a,"left"),i=(d==="absolute"||d==="fixed")&&p.inArray("auto",[g,h])>-1,j={},k={},l,m;i?(k=e.position(),l=k.top,m=k.left):(l=parseFloat(g)||0,m=parseFloat(h)||0),p.isFunction(b)&&(b=b.call(a,c,f)),b.top!=null&&(j.top=b.top-f.top+l),b.left!=null&&(j.left=b.left-f.left+m),"using"in b?b.using.call(a,j):e.css(j)}},p.fn.extend({position:function(){if(!this[0])return;var a=this[0],b=this.offsetParent(),c=this.offset(),d=c_.test(b[0].nodeName)?{top:0,left:0}:b.offset();return c.top-=parseFloat(p.css(a,"marginTop"))||0,c.left-=parseFloat(p.css(a,"marginLeft"))||0,d.top+=parseFloat(p.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(p.css(b[0],"borderLeftWidth"))||0,{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||e.body;while(a&&!c_.test(a.nodeName)&&p.css(a,"position")==="static")a=a.offsetParent;return a||e.body})}}),p.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,c){var d=/Y/.test(c);p.fn[a]=function(e){return p.access(this,function(a,e,f){var g=da(a);if(f===b)return g?c in g?g[c]:g.document.documentElement[e]:a[e];g?g.scrollTo(d?p(g).scrollLeft():f,d?f:p(g).scrollTop()):a[e]=f},a,e,arguments.length,null)}}),p.each({Height:"height",Width:"width"},function(a,c){p.each({padding:"inner"+a,content:c,"":"outer"+a},function(d,e){p.fn[e]=function(e,f){var g=arguments.length&&(d||typeof e!="boolean"),h=d||(e===!0||f===!0?"margin":"border");return p.access(this,function(c,d,e){var f;return p.isWindow(c)?c.document.documentElement["client"+a]:c.nodeType===9?(f=c.documentElement,Math.max(c.body["scroll"+a],f["scroll"+a],c.body["offset"+a],f["offset"+a],f["client"+a])):e===b?p.css(c,d,e,h):p.style(c,d,e,h)},c,g?e:b,g,null)}})}),a.jQuery=a.$=p,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return p})})(window);
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__9261 = x == null ? null : x;
  if(p[goog.typeOf(x__9261)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__9262__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__9262 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9262__delegate.call(this, array, i, idxs)
    };
    G__9262.cljs$lang$maxFixedArity = 2;
    G__9262.cljs$lang$applyTo = function(arglist__9263) {
      var array = cljs.core.first(arglist__9263);
      var i = cljs.core.first(cljs.core.next(arglist__9263));
      var idxs = cljs.core.rest(cljs.core.next(arglist__9263));
      return G__9262__delegate(array, i, idxs)
    };
    G__9262.cljs$lang$arity$variadic = G__9262__delegate;
    return G__9262
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3941__auto____9348 = this$;
      if(and__3941__auto____9348) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3941__auto____9348
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__3769__auto____9349 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9350 = cljs.core._invoke[goog.typeOf(x__3769__auto____9349)];
        if(or__3943__auto____9350) {
          return or__3943__auto____9350
        }else {
          var or__3943__auto____9351 = cljs.core._invoke["_"];
          if(or__3943__auto____9351) {
            return or__3943__auto____9351
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3941__auto____9352 = this$;
      if(and__3941__auto____9352) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3941__auto____9352
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__3769__auto____9353 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9354 = cljs.core._invoke[goog.typeOf(x__3769__auto____9353)];
        if(or__3943__auto____9354) {
          return or__3943__auto____9354
        }else {
          var or__3943__auto____9355 = cljs.core._invoke["_"];
          if(or__3943__auto____9355) {
            return or__3943__auto____9355
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3941__auto____9356 = this$;
      if(and__3941__auto____9356) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3941__auto____9356
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__3769__auto____9357 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9358 = cljs.core._invoke[goog.typeOf(x__3769__auto____9357)];
        if(or__3943__auto____9358) {
          return or__3943__auto____9358
        }else {
          var or__3943__auto____9359 = cljs.core._invoke["_"];
          if(or__3943__auto____9359) {
            return or__3943__auto____9359
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3941__auto____9360 = this$;
      if(and__3941__auto____9360) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3941__auto____9360
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__3769__auto____9361 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9362 = cljs.core._invoke[goog.typeOf(x__3769__auto____9361)];
        if(or__3943__auto____9362) {
          return or__3943__auto____9362
        }else {
          var or__3943__auto____9363 = cljs.core._invoke["_"];
          if(or__3943__auto____9363) {
            return or__3943__auto____9363
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3941__auto____9364 = this$;
      if(and__3941__auto____9364) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3941__auto____9364
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__3769__auto____9365 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9366 = cljs.core._invoke[goog.typeOf(x__3769__auto____9365)];
        if(or__3943__auto____9366) {
          return or__3943__auto____9366
        }else {
          var or__3943__auto____9367 = cljs.core._invoke["_"];
          if(or__3943__auto____9367) {
            return or__3943__auto____9367
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3941__auto____9368 = this$;
      if(and__3941__auto____9368) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3941__auto____9368
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__3769__auto____9369 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9370 = cljs.core._invoke[goog.typeOf(x__3769__auto____9369)];
        if(or__3943__auto____9370) {
          return or__3943__auto____9370
        }else {
          var or__3943__auto____9371 = cljs.core._invoke["_"];
          if(or__3943__auto____9371) {
            return or__3943__auto____9371
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3941__auto____9372 = this$;
      if(and__3941__auto____9372) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3941__auto____9372
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__3769__auto____9373 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9374 = cljs.core._invoke[goog.typeOf(x__3769__auto____9373)];
        if(or__3943__auto____9374) {
          return or__3943__auto____9374
        }else {
          var or__3943__auto____9375 = cljs.core._invoke["_"];
          if(or__3943__auto____9375) {
            return or__3943__auto____9375
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3941__auto____9376 = this$;
      if(and__3941__auto____9376) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3941__auto____9376
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__3769__auto____9377 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9378 = cljs.core._invoke[goog.typeOf(x__3769__auto____9377)];
        if(or__3943__auto____9378) {
          return or__3943__auto____9378
        }else {
          var or__3943__auto____9379 = cljs.core._invoke["_"];
          if(or__3943__auto____9379) {
            return or__3943__auto____9379
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3941__auto____9380 = this$;
      if(and__3941__auto____9380) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3941__auto____9380
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__3769__auto____9381 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9382 = cljs.core._invoke[goog.typeOf(x__3769__auto____9381)];
        if(or__3943__auto____9382) {
          return or__3943__auto____9382
        }else {
          var or__3943__auto____9383 = cljs.core._invoke["_"];
          if(or__3943__auto____9383) {
            return or__3943__auto____9383
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3941__auto____9384 = this$;
      if(and__3941__auto____9384) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3941__auto____9384
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__3769__auto____9385 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9386 = cljs.core._invoke[goog.typeOf(x__3769__auto____9385)];
        if(or__3943__auto____9386) {
          return or__3943__auto____9386
        }else {
          var or__3943__auto____9387 = cljs.core._invoke["_"];
          if(or__3943__auto____9387) {
            return or__3943__auto____9387
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3941__auto____9388 = this$;
      if(and__3941__auto____9388) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3941__auto____9388
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__3769__auto____9389 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9390 = cljs.core._invoke[goog.typeOf(x__3769__auto____9389)];
        if(or__3943__auto____9390) {
          return or__3943__auto____9390
        }else {
          var or__3943__auto____9391 = cljs.core._invoke["_"];
          if(or__3943__auto____9391) {
            return or__3943__auto____9391
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3941__auto____9392 = this$;
      if(and__3941__auto____9392) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3941__auto____9392
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__3769__auto____9393 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9394 = cljs.core._invoke[goog.typeOf(x__3769__auto____9393)];
        if(or__3943__auto____9394) {
          return or__3943__auto____9394
        }else {
          var or__3943__auto____9395 = cljs.core._invoke["_"];
          if(or__3943__auto____9395) {
            return or__3943__auto____9395
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3941__auto____9396 = this$;
      if(and__3941__auto____9396) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3941__auto____9396
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__3769__auto____9397 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9398 = cljs.core._invoke[goog.typeOf(x__3769__auto____9397)];
        if(or__3943__auto____9398) {
          return or__3943__auto____9398
        }else {
          var or__3943__auto____9399 = cljs.core._invoke["_"];
          if(or__3943__auto____9399) {
            return or__3943__auto____9399
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3941__auto____9400 = this$;
      if(and__3941__auto____9400) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3941__auto____9400
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__3769__auto____9401 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9402 = cljs.core._invoke[goog.typeOf(x__3769__auto____9401)];
        if(or__3943__auto____9402) {
          return or__3943__auto____9402
        }else {
          var or__3943__auto____9403 = cljs.core._invoke["_"];
          if(or__3943__auto____9403) {
            return or__3943__auto____9403
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3941__auto____9404 = this$;
      if(and__3941__auto____9404) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3941__auto____9404
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__3769__auto____9405 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9406 = cljs.core._invoke[goog.typeOf(x__3769__auto____9405)];
        if(or__3943__auto____9406) {
          return or__3943__auto____9406
        }else {
          var or__3943__auto____9407 = cljs.core._invoke["_"];
          if(or__3943__auto____9407) {
            return or__3943__auto____9407
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3941__auto____9408 = this$;
      if(and__3941__auto____9408) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3941__auto____9408
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__3769__auto____9409 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9410 = cljs.core._invoke[goog.typeOf(x__3769__auto____9409)];
        if(or__3943__auto____9410) {
          return or__3943__auto____9410
        }else {
          var or__3943__auto____9411 = cljs.core._invoke["_"];
          if(or__3943__auto____9411) {
            return or__3943__auto____9411
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3941__auto____9412 = this$;
      if(and__3941__auto____9412) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3941__auto____9412
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__3769__auto____9413 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9414 = cljs.core._invoke[goog.typeOf(x__3769__auto____9413)];
        if(or__3943__auto____9414) {
          return or__3943__auto____9414
        }else {
          var or__3943__auto____9415 = cljs.core._invoke["_"];
          if(or__3943__auto____9415) {
            return or__3943__auto____9415
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3941__auto____9416 = this$;
      if(and__3941__auto____9416) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3941__auto____9416
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__3769__auto____9417 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9418 = cljs.core._invoke[goog.typeOf(x__3769__auto____9417)];
        if(or__3943__auto____9418) {
          return or__3943__auto____9418
        }else {
          var or__3943__auto____9419 = cljs.core._invoke["_"];
          if(or__3943__auto____9419) {
            return or__3943__auto____9419
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3941__auto____9420 = this$;
      if(and__3941__auto____9420) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3941__auto____9420
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__3769__auto____9421 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9422 = cljs.core._invoke[goog.typeOf(x__3769__auto____9421)];
        if(or__3943__auto____9422) {
          return or__3943__auto____9422
        }else {
          var or__3943__auto____9423 = cljs.core._invoke["_"];
          if(or__3943__auto____9423) {
            return or__3943__auto____9423
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3941__auto____9424 = this$;
      if(and__3941__auto____9424) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3941__auto____9424
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__3769__auto____9425 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9426 = cljs.core._invoke[goog.typeOf(x__3769__auto____9425)];
        if(or__3943__auto____9426) {
          return or__3943__auto____9426
        }else {
          var or__3943__auto____9427 = cljs.core._invoke["_"];
          if(or__3943__auto____9427) {
            return or__3943__auto____9427
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3941__auto____9428 = this$;
      if(and__3941__auto____9428) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3941__auto____9428
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__3769__auto____9429 = this$ == null ? null : this$;
      return function() {
        var or__3943__auto____9430 = cljs.core._invoke[goog.typeOf(x__3769__auto____9429)];
        if(or__3943__auto____9430) {
          return or__3943__auto____9430
        }else {
          var or__3943__auto____9431 = cljs.core._invoke["_"];
          if(or__3943__auto____9431) {
            return or__3943__auto____9431
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3941__auto____9436 = coll;
    if(and__3941__auto____9436) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3941__auto____9436
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__3769__auto____9437 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9438 = cljs.core._count[goog.typeOf(x__3769__auto____9437)];
      if(or__3943__auto____9438) {
        return or__3943__auto____9438
      }else {
        var or__3943__auto____9439 = cljs.core._count["_"];
        if(or__3943__auto____9439) {
          return or__3943__auto____9439
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3941__auto____9444 = coll;
    if(and__3941__auto____9444) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3941__auto____9444
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__3769__auto____9445 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9446 = cljs.core._empty[goog.typeOf(x__3769__auto____9445)];
      if(or__3943__auto____9446) {
        return or__3943__auto____9446
      }else {
        var or__3943__auto____9447 = cljs.core._empty["_"];
        if(or__3943__auto____9447) {
          return or__3943__auto____9447
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3941__auto____9452 = coll;
    if(and__3941__auto____9452) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3941__auto____9452
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__3769__auto____9453 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9454 = cljs.core._conj[goog.typeOf(x__3769__auto____9453)];
      if(or__3943__auto____9454) {
        return or__3943__auto____9454
      }else {
        var or__3943__auto____9455 = cljs.core._conj["_"];
        if(or__3943__auto____9455) {
          return or__3943__auto____9455
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3941__auto____9464 = coll;
      if(and__3941__auto____9464) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3941__auto____9464
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__3769__auto____9465 = coll == null ? null : coll;
      return function() {
        var or__3943__auto____9466 = cljs.core._nth[goog.typeOf(x__3769__auto____9465)];
        if(or__3943__auto____9466) {
          return or__3943__auto____9466
        }else {
          var or__3943__auto____9467 = cljs.core._nth["_"];
          if(or__3943__auto____9467) {
            return or__3943__auto____9467
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3941__auto____9468 = coll;
      if(and__3941__auto____9468) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3941__auto____9468
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__3769__auto____9469 = coll == null ? null : coll;
      return function() {
        var or__3943__auto____9470 = cljs.core._nth[goog.typeOf(x__3769__auto____9469)];
        if(or__3943__auto____9470) {
          return or__3943__auto____9470
        }else {
          var or__3943__auto____9471 = cljs.core._nth["_"];
          if(or__3943__auto____9471) {
            return or__3943__auto____9471
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3941__auto____9476 = coll;
    if(and__3941__auto____9476) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3941__auto____9476
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__3769__auto____9477 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9478 = cljs.core._first[goog.typeOf(x__3769__auto____9477)];
      if(or__3943__auto____9478) {
        return or__3943__auto____9478
      }else {
        var or__3943__auto____9479 = cljs.core._first["_"];
        if(or__3943__auto____9479) {
          return or__3943__auto____9479
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3941__auto____9484 = coll;
    if(and__3941__auto____9484) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3941__auto____9484
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__3769__auto____9485 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9486 = cljs.core._rest[goog.typeOf(x__3769__auto____9485)];
      if(or__3943__auto____9486) {
        return or__3943__auto____9486
      }else {
        var or__3943__auto____9487 = cljs.core._rest["_"];
        if(or__3943__auto____9487) {
          return or__3943__auto____9487
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3941__auto____9492 = coll;
    if(and__3941__auto____9492) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3941__auto____9492
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__3769__auto____9493 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9494 = cljs.core._next[goog.typeOf(x__3769__auto____9493)];
      if(or__3943__auto____9494) {
        return or__3943__auto____9494
      }else {
        var or__3943__auto____9495 = cljs.core._next["_"];
        if(or__3943__auto____9495) {
          return or__3943__auto____9495
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3941__auto____9504 = o;
      if(and__3941__auto____9504) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3941__auto____9504
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__3769__auto____9505 = o == null ? null : o;
      return function() {
        var or__3943__auto____9506 = cljs.core._lookup[goog.typeOf(x__3769__auto____9505)];
        if(or__3943__auto____9506) {
          return or__3943__auto____9506
        }else {
          var or__3943__auto____9507 = cljs.core._lookup["_"];
          if(or__3943__auto____9507) {
            return or__3943__auto____9507
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3941__auto____9508 = o;
      if(and__3941__auto____9508) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3941__auto____9508
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__3769__auto____9509 = o == null ? null : o;
      return function() {
        var or__3943__auto____9510 = cljs.core._lookup[goog.typeOf(x__3769__auto____9509)];
        if(or__3943__auto____9510) {
          return or__3943__auto____9510
        }else {
          var or__3943__auto____9511 = cljs.core._lookup["_"];
          if(or__3943__auto____9511) {
            return or__3943__auto____9511
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3941__auto____9516 = coll;
    if(and__3941__auto____9516) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3941__auto____9516
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__3769__auto____9517 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9518 = cljs.core._contains_key_QMARK_[goog.typeOf(x__3769__auto____9517)];
      if(or__3943__auto____9518) {
        return or__3943__auto____9518
      }else {
        var or__3943__auto____9519 = cljs.core._contains_key_QMARK_["_"];
        if(or__3943__auto____9519) {
          return or__3943__auto____9519
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3941__auto____9524 = coll;
    if(and__3941__auto____9524) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3941__auto____9524
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__3769__auto____9525 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9526 = cljs.core._assoc[goog.typeOf(x__3769__auto____9525)];
      if(or__3943__auto____9526) {
        return or__3943__auto____9526
      }else {
        var or__3943__auto____9527 = cljs.core._assoc["_"];
        if(or__3943__auto____9527) {
          return or__3943__auto____9527
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3941__auto____9532 = coll;
    if(and__3941__auto____9532) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3941__auto____9532
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__3769__auto____9533 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9534 = cljs.core._dissoc[goog.typeOf(x__3769__auto____9533)];
      if(or__3943__auto____9534) {
        return or__3943__auto____9534
      }else {
        var or__3943__auto____9535 = cljs.core._dissoc["_"];
        if(or__3943__auto____9535) {
          return or__3943__auto____9535
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3941__auto____9540 = coll;
    if(and__3941__auto____9540) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3941__auto____9540
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__3769__auto____9541 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9542 = cljs.core._key[goog.typeOf(x__3769__auto____9541)];
      if(or__3943__auto____9542) {
        return or__3943__auto____9542
      }else {
        var or__3943__auto____9543 = cljs.core._key["_"];
        if(or__3943__auto____9543) {
          return or__3943__auto____9543
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3941__auto____9548 = coll;
    if(and__3941__auto____9548) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3941__auto____9548
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__3769__auto____9549 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9550 = cljs.core._val[goog.typeOf(x__3769__auto____9549)];
      if(or__3943__auto____9550) {
        return or__3943__auto____9550
      }else {
        var or__3943__auto____9551 = cljs.core._val["_"];
        if(or__3943__auto____9551) {
          return or__3943__auto____9551
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3941__auto____9556 = coll;
    if(and__3941__auto____9556) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3941__auto____9556
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__3769__auto____9557 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9558 = cljs.core._disjoin[goog.typeOf(x__3769__auto____9557)];
      if(or__3943__auto____9558) {
        return or__3943__auto____9558
      }else {
        var or__3943__auto____9559 = cljs.core._disjoin["_"];
        if(or__3943__auto____9559) {
          return or__3943__auto____9559
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3941__auto____9564 = coll;
    if(and__3941__auto____9564) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3941__auto____9564
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__3769__auto____9565 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9566 = cljs.core._peek[goog.typeOf(x__3769__auto____9565)];
      if(or__3943__auto____9566) {
        return or__3943__auto____9566
      }else {
        var or__3943__auto____9567 = cljs.core._peek["_"];
        if(or__3943__auto____9567) {
          return or__3943__auto____9567
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3941__auto____9572 = coll;
    if(and__3941__auto____9572) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3941__auto____9572
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__3769__auto____9573 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9574 = cljs.core._pop[goog.typeOf(x__3769__auto____9573)];
      if(or__3943__auto____9574) {
        return or__3943__auto____9574
      }else {
        var or__3943__auto____9575 = cljs.core._pop["_"];
        if(or__3943__auto____9575) {
          return or__3943__auto____9575
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3941__auto____9580 = coll;
    if(and__3941__auto____9580) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3941__auto____9580
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__3769__auto____9581 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9582 = cljs.core._assoc_n[goog.typeOf(x__3769__auto____9581)];
      if(or__3943__auto____9582) {
        return or__3943__auto____9582
      }else {
        var or__3943__auto____9583 = cljs.core._assoc_n["_"];
        if(or__3943__auto____9583) {
          return or__3943__auto____9583
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3941__auto____9588 = o;
    if(and__3941__auto____9588) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3941__auto____9588
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__3769__auto____9589 = o == null ? null : o;
    return function() {
      var or__3943__auto____9590 = cljs.core._deref[goog.typeOf(x__3769__auto____9589)];
      if(or__3943__auto____9590) {
        return or__3943__auto____9590
      }else {
        var or__3943__auto____9591 = cljs.core._deref["_"];
        if(or__3943__auto____9591) {
          return or__3943__auto____9591
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3941__auto____9596 = o;
    if(and__3941__auto____9596) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3941__auto____9596
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__3769__auto____9597 = o == null ? null : o;
    return function() {
      var or__3943__auto____9598 = cljs.core._deref_with_timeout[goog.typeOf(x__3769__auto____9597)];
      if(or__3943__auto____9598) {
        return or__3943__auto____9598
      }else {
        var or__3943__auto____9599 = cljs.core._deref_with_timeout["_"];
        if(or__3943__auto____9599) {
          return or__3943__auto____9599
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3941__auto____9604 = o;
    if(and__3941__auto____9604) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3941__auto____9604
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__3769__auto____9605 = o == null ? null : o;
    return function() {
      var or__3943__auto____9606 = cljs.core._meta[goog.typeOf(x__3769__auto____9605)];
      if(or__3943__auto____9606) {
        return or__3943__auto____9606
      }else {
        var or__3943__auto____9607 = cljs.core._meta["_"];
        if(or__3943__auto____9607) {
          return or__3943__auto____9607
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3941__auto____9612 = o;
    if(and__3941__auto____9612) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3941__auto____9612
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__3769__auto____9613 = o == null ? null : o;
    return function() {
      var or__3943__auto____9614 = cljs.core._with_meta[goog.typeOf(x__3769__auto____9613)];
      if(or__3943__auto____9614) {
        return or__3943__auto____9614
      }else {
        var or__3943__auto____9615 = cljs.core._with_meta["_"];
        if(or__3943__auto____9615) {
          return or__3943__auto____9615
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3941__auto____9624 = coll;
      if(and__3941__auto____9624) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3941__auto____9624
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__3769__auto____9625 = coll == null ? null : coll;
      return function() {
        var or__3943__auto____9626 = cljs.core._reduce[goog.typeOf(x__3769__auto____9625)];
        if(or__3943__auto____9626) {
          return or__3943__auto____9626
        }else {
          var or__3943__auto____9627 = cljs.core._reduce["_"];
          if(or__3943__auto____9627) {
            return or__3943__auto____9627
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3941__auto____9628 = coll;
      if(and__3941__auto____9628) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3941__auto____9628
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__3769__auto____9629 = coll == null ? null : coll;
      return function() {
        var or__3943__auto____9630 = cljs.core._reduce[goog.typeOf(x__3769__auto____9629)];
        if(or__3943__auto____9630) {
          return or__3943__auto____9630
        }else {
          var or__3943__auto____9631 = cljs.core._reduce["_"];
          if(or__3943__auto____9631) {
            return or__3943__auto____9631
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3941__auto____9636 = coll;
    if(and__3941__auto____9636) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3941__auto____9636
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__3769__auto____9637 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9638 = cljs.core._kv_reduce[goog.typeOf(x__3769__auto____9637)];
      if(or__3943__auto____9638) {
        return or__3943__auto____9638
      }else {
        var or__3943__auto____9639 = cljs.core._kv_reduce["_"];
        if(or__3943__auto____9639) {
          return or__3943__auto____9639
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3941__auto____9644 = o;
    if(and__3941__auto____9644) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3941__auto____9644
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__3769__auto____9645 = o == null ? null : o;
    return function() {
      var or__3943__auto____9646 = cljs.core._equiv[goog.typeOf(x__3769__auto____9645)];
      if(or__3943__auto____9646) {
        return or__3943__auto____9646
      }else {
        var or__3943__auto____9647 = cljs.core._equiv["_"];
        if(or__3943__auto____9647) {
          return or__3943__auto____9647
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3941__auto____9652 = o;
    if(and__3941__auto____9652) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3941__auto____9652
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__3769__auto____9653 = o == null ? null : o;
    return function() {
      var or__3943__auto____9654 = cljs.core._hash[goog.typeOf(x__3769__auto____9653)];
      if(or__3943__auto____9654) {
        return or__3943__auto____9654
      }else {
        var or__3943__auto____9655 = cljs.core._hash["_"];
        if(or__3943__auto____9655) {
          return or__3943__auto____9655
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3941__auto____9660 = o;
    if(and__3941__auto____9660) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3941__auto____9660
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__3769__auto____9661 = o == null ? null : o;
    return function() {
      var or__3943__auto____9662 = cljs.core._seq[goog.typeOf(x__3769__auto____9661)];
      if(or__3943__auto____9662) {
        return or__3943__auto____9662
      }else {
        var or__3943__auto____9663 = cljs.core._seq["_"];
        if(or__3943__auto____9663) {
          return or__3943__auto____9663
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3941__auto____9668 = coll;
    if(and__3941__auto____9668) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3941__auto____9668
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__3769__auto____9669 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9670 = cljs.core._rseq[goog.typeOf(x__3769__auto____9669)];
      if(or__3943__auto____9670) {
        return or__3943__auto____9670
      }else {
        var or__3943__auto____9671 = cljs.core._rseq["_"];
        if(or__3943__auto____9671) {
          return or__3943__auto____9671
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3941__auto____9676 = coll;
    if(and__3941__auto____9676) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3941__auto____9676
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__3769__auto____9677 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9678 = cljs.core._sorted_seq[goog.typeOf(x__3769__auto____9677)];
      if(or__3943__auto____9678) {
        return or__3943__auto____9678
      }else {
        var or__3943__auto____9679 = cljs.core._sorted_seq["_"];
        if(or__3943__auto____9679) {
          return or__3943__auto____9679
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3941__auto____9684 = coll;
    if(and__3941__auto____9684) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3941__auto____9684
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__3769__auto____9685 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9686 = cljs.core._sorted_seq_from[goog.typeOf(x__3769__auto____9685)];
      if(or__3943__auto____9686) {
        return or__3943__auto____9686
      }else {
        var or__3943__auto____9687 = cljs.core._sorted_seq_from["_"];
        if(or__3943__auto____9687) {
          return or__3943__auto____9687
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3941__auto____9692 = coll;
    if(and__3941__auto____9692) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3941__auto____9692
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__3769__auto____9693 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9694 = cljs.core._entry_key[goog.typeOf(x__3769__auto____9693)];
      if(or__3943__auto____9694) {
        return or__3943__auto____9694
      }else {
        var or__3943__auto____9695 = cljs.core._entry_key["_"];
        if(or__3943__auto____9695) {
          return or__3943__auto____9695
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3941__auto____9700 = coll;
    if(and__3941__auto____9700) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3941__auto____9700
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__3769__auto____9701 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9702 = cljs.core._comparator[goog.typeOf(x__3769__auto____9701)];
      if(or__3943__auto____9702) {
        return or__3943__auto____9702
      }else {
        var or__3943__auto____9703 = cljs.core._comparator["_"];
        if(or__3943__auto____9703) {
          return or__3943__auto____9703
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3941__auto____9708 = o;
    if(and__3941__auto____9708) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3941__auto____9708
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__3769__auto____9709 = o == null ? null : o;
    return function() {
      var or__3943__auto____9710 = cljs.core._pr_seq[goog.typeOf(x__3769__auto____9709)];
      if(or__3943__auto____9710) {
        return or__3943__auto____9710
      }else {
        var or__3943__auto____9711 = cljs.core._pr_seq["_"];
        if(or__3943__auto____9711) {
          return or__3943__auto____9711
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3941__auto____9716 = d;
    if(and__3941__auto____9716) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3941__auto____9716
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__3769__auto____9717 = d == null ? null : d;
    return function() {
      var or__3943__auto____9718 = cljs.core._realized_QMARK_[goog.typeOf(x__3769__auto____9717)];
      if(or__3943__auto____9718) {
        return or__3943__auto____9718
      }else {
        var or__3943__auto____9719 = cljs.core._realized_QMARK_["_"];
        if(or__3943__auto____9719) {
          return or__3943__auto____9719
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3941__auto____9724 = this$;
    if(and__3941__auto____9724) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3941__auto____9724
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__3769__auto____9725 = this$ == null ? null : this$;
    return function() {
      var or__3943__auto____9726 = cljs.core._notify_watches[goog.typeOf(x__3769__auto____9725)];
      if(or__3943__auto____9726) {
        return or__3943__auto____9726
      }else {
        var or__3943__auto____9727 = cljs.core._notify_watches["_"];
        if(or__3943__auto____9727) {
          return or__3943__auto____9727
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3941__auto____9732 = this$;
    if(and__3941__auto____9732) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3941__auto____9732
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__3769__auto____9733 = this$ == null ? null : this$;
    return function() {
      var or__3943__auto____9734 = cljs.core._add_watch[goog.typeOf(x__3769__auto____9733)];
      if(or__3943__auto____9734) {
        return or__3943__auto____9734
      }else {
        var or__3943__auto____9735 = cljs.core._add_watch["_"];
        if(or__3943__auto____9735) {
          return or__3943__auto____9735
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3941__auto____9740 = this$;
    if(and__3941__auto____9740) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3941__auto____9740
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__3769__auto____9741 = this$ == null ? null : this$;
    return function() {
      var or__3943__auto____9742 = cljs.core._remove_watch[goog.typeOf(x__3769__auto____9741)];
      if(or__3943__auto____9742) {
        return or__3943__auto____9742
      }else {
        var or__3943__auto____9743 = cljs.core._remove_watch["_"];
        if(or__3943__auto____9743) {
          return or__3943__auto____9743
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3941__auto____9748 = coll;
    if(and__3941__auto____9748) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3941__auto____9748
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__3769__auto____9749 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9750 = cljs.core._as_transient[goog.typeOf(x__3769__auto____9749)];
      if(or__3943__auto____9750) {
        return or__3943__auto____9750
      }else {
        var or__3943__auto____9751 = cljs.core._as_transient["_"];
        if(or__3943__auto____9751) {
          return or__3943__auto____9751
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3941__auto____9756 = tcoll;
    if(and__3941__auto____9756) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3941__auto____9756
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__3769__auto____9757 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____9758 = cljs.core._conj_BANG_[goog.typeOf(x__3769__auto____9757)];
      if(or__3943__auto____9758) {
        return or__3943__auto____9758
      }else {
        var or__3943__auto____9759 = cljs.core._conj_BANG_["_"];
        if(or__3943__auto____9759) {
          return or__3943__auto____9759
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3941__auto____9764 = tcoll;
    if(and__3941__auto____9764) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3941__auto____9764
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__3769__auto____9765 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____9766 = cljs.core._persistent_BANG_[goog.typeOf(x__3769__auto____9765)];
      if(or__3943__auto____9766) {
        return or__3943__auto____9766
      }else {
        var or__3943__auto____9767 = cljs.core._persistent_BANG_["_"];
        if(or__3943__auto____9767) {
          return or__3943__auto____9767
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3941__auto____9772 = tcoll;
    if(and__3941__auto____9772) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3941__auto____9772
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__3769__auto____9773 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____9774 = cljs.core._assoc_BANG_[goog.typeOf(x__3769__auto____9773)];
      if(or__3943__auto____9774) {
        return or__3943__auto____9774
      }else {
        var or__3943__auto____9775 = cljs.core._assoc_BANG_["_"];
        if(or__3943__auto____9775) {
          return or__3943__auto____9775
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3941__auto____9780 = tcoll;
    if(and__3941__auto____9780) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3941__auto____9780
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__3769__auto____9781 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____9782 = cljs.core._dissoc_BANG_[goog.typeOf(x__3769__auto____9781)];
      if(or__3943__auto____9782) {
        return or__3943__auto____9782
      }else {
        var or__3943__auto____9783 = cljs.core._dissoc_BANG_["_"];
        if(or__3943__auto____9783) {
          return or__3943__auto____9783
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3941__auto____9788 = tcoll;
    if(and__3941__auto____9788) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3941__auto____9788
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__3769__auto____9789 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____9790 = cljs.core._assoc_n_BANG_[goog.typeOf(x__3769__auto____9789)];
      if(or__3943__auto____9790) {
        return or__3943__auto____9790
      }else {
        var or__3943__auto____9791 = cljs.core._assoc_n_BANG_["_"];
        if(or__3943__auto____9791) {
          return or__3943__auto____9791
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3941__auto____9796 = tcoll;
    if(and__3941__auto____9796) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3941__auto____9796
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__3769__auto____9797 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____9798 = cljs.core._pop_BANG_[goog.typeOf(x__3769__auto____9797)];
      if(or__3943__auto____9798) {
        return or__3943__auto____9798
      }else {
        var or__3943__auto____9799 = cljs.core._pop_BANG_["_"];
        if(or__3943__auto____9799) {
          return or__3943__auto____9799
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3941__auto____9804 = tcoll;
    if(and__3941__auto____9804) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3941__auto____9804
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__3769__auto____9805 = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto____9806 = cljs.core._disjoin_BANG_[goog.typeOf(x__3769__auto____9805)];
      if(or__3943__auto____9806) {
        return or__3943__auto____9806
      }else {
        var or__3943__auto____9807 = cljs.core._disjoin_BANG_["_"];
        if(or__3943__auto____9807) {
          return or__3943__auto____9807
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3941__auto____9812 = x;
    if(and__3941__auto____9812) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3941__auto____9812
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__3769__auto____9813 = x == null ? null : x;
    return function() {
      var or__3943__auto____9814 = cljs.core._compare[goog.typeOf(x__3769__auto____9813)];
      if(or__3943__auto____9814) {
        return or__3943__auto____9814
      }else {
        var or__3943__auto____9815 = cljs.core._compare["_"];
        if(or__3943__auto____9815) {
          return or__3943__auto____9815
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3941__auto____9820 = coll;
    if(and__3941__auto____9820) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3941__auto____9820
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__3769__auto____9821 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9822 = cljs.core._drop_first[goog.typeOf(x__3769__auto____9821)];
      if(or__3943__auto____9822) {
        return or__3943__auto____9822
      }else {
        var or__3943__auto____9823 = cljs.core._drop_first["_"];
        if(or__3943__auto____9823) {
          return or__3943__auto____9823
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3941__auto____9828 = coll;
    if(and__3941__auto____9828) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3941__auto____9828
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__3769__auto____9829 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9830 = cljs.core._chunked_first[goog.typeOf(x__3769__auto____9829)];
      if(or__3943__auto____9830) {
        return or__3943__auto____9830
      }else {
        var or__3943__auto____9831 = cljs.core._chunked_first["_"];
        if(or__3943__auto____9831) {
          return or__3943__auto____9831
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3941__auto____9836 = coll;
    if(and__3941__auto____9836) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3941__auto____9836
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__3769__auto____9837 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9838 = cljs.core._chunked_rest[goog.typeOf(x__3769__auto____9837)];
      if(or__3943__auto____9838) {
        return or__3943__auto____9838
      }else {
        var or__3943__auto____9839 = cljs.core._chunked_rest["_"];
        if(or__3943__auto____9839) {
          return or__3943__auto____9839
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3941__auto____9844 = coll;
    if(and__3941__auto____9844) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3941__auto____9844
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__3769__auto____9845 = coll == null ? null : coll;
    return function() {
      var or__3943__auto____9846 = cljs.core._chunked_next[goog.typeOf(x__3769__auto____9845)];
      if(or__3943__auto____9846) {
        return or__3943__auto____9846
      }else {
        var or__3943__auto____9847 = cljs.core._chunked_next["_"];
        if(or__3943__auto____9847) {
          return or__3943__auto____9847
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3943__auto____9849 = x === y;
    if(or__3943__auto____9849) {
      return or__3943__auto____9849
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__9850__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__9851 = y;
            var G__9852 = cljs.core.first.call(null, more);
            var G__9853 = cljs.core.next.call(null, more);
            x = G__9851;
            y = G__9852;
            more = G__9853;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9850 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9850__delegate.call(this, x, y, more)
    };
    G__9850.cljs$lang$maxFixedArity = 2;
    G__9850.cljs$lang$applyTo = function(arglist__9854) {
      var x = cljs.core.first(arglist__9854);
      var y = cljs.core.first(cljs.core.next(arglist__9854));
      var more = cljs.core.rest(cljs.core.next(arglist__9854));
      return G__9850__delegate(x, y, more)
    };
    G__9850.cljs$lang$arity$variadic = G__9850__delegate;
    return G__9850
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__9855 = null;
  var G__9855__2 = function(o, k) {
    return null
  };
  var G__9855__3 = function(o, k, not_found) {
    return not_found
  };
  G__9855 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9855__2.call(this, o, k);
      case 3:
        return G__9855__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9855
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__9856 = null;
  var G__9856__2 = function(_, f) {
    return f.call(null)
  };
  var G__9856__3 = function(_, f, start) {
    return start
  };
  G__9856 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__9856__2.call(this, _, f);
      case 3:
        return G__9856__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9856
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__9857 = null;
  var G__9857__2 = function(_, n) {
    return null
  };
  var G__9857__3 = function(_, n, not_found) {
    return not_found
  };
  G__9857 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9857__2.call(this, _, n);
      case 3:
        return G__9857__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9857
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3941__auto____9858 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3941__auto____9858) {
    return o.toString() === other.toString()
  }else {
    return and__3941__auto____9858
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__9871 = cljs.core._count.call(null, cicoll);
    if(cnt__9871 === 0) {
      return f.call(null)
    }else {
      var val__9872 = cljs.core._nth.call(null, cicoll, 0);
      var n__9873 = 1;
      while(true) {
        if(n__9873 < cnt__9871) {
          var nval__9874 = f.call(null, val__9872, cljs.core._nth.call(null, cicoll, n__9873));
          if(cljs.core.reduced_QMARK_.call(null, nval__9874)) {
            return cljs.core.deref.call(null, nval__9874)
          }else {
            var G__9883 = nval__9874;
            var G__9884 = n__9873 + 1;
            val__9872 = G__9883;
            n__9873 = G__9884;
            continue
          }
        }else {
          return val__9872
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__9875 = cljs.core._count.call(null, cicoll);
    var val__9876 = val;
    var n__9877 = 0;
    while(true) {
      if(n__9877 < cnt__9875) {
        var nval__9878 = f.call(null, val__9876, cljs.core._nth.call(null, cicoll, n__9877));
        if(cljs.core.reduced_QMARK_.call(null, nval__9878)) {
          return cljs.core.deref.call(null, nval__9878)
        }else {
          var G__9885 = nval__9878;
          var G__9886 = n__9877 + 1;
          val__9876 = G__9885;
          n__9877 = G__9886;
          continue
        }
      }else {
        return val__9876
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__9879 = cljs.core._count.call(null, cicoll);
    var val__9880 = val;
    var n__9881 = idx;
    while(true) {
      if(n__9881 < cnt__9879) {
        var nval__9882 = f.call(null, val__9880, cljs.core._nth.call(null, cicoll, n__9881));
        if(cljs.core.reduced_QMARK_.call(null, nval__9882)) {
          return cljs.core.deref.call(null, nval__9882)
        }else {
          var G__9887 = nval__9882;
          var G__9888 = n__9881 + 1;
          val__9880 = G__9887;
          n__9881 = G__9888;
          continue
        }
      }else {
        return val__9880
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__9901 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__9902 = arr[0];
      var n__9903 = 1;
      while(true) {
        if(n__9903 < cnt__9901) {
          var nval__9904 = f.call(null, val__9902, arr[n__9903]);
          if(cljs.core.reduced_QMARK_.call(null, nval__9904)) {
            return cljs.core.deref.call(null, nval__9904)
          }else {
            var G__9913 = nval__9904;
            var G__9914 = n__9903 + 1;
            val__9902 = G__9913;
            n__9903 = G__9914;
            continue
          }
        }else {
          return val__9902
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__9905 = arr.length;
    var val__9906 = val;
    var n__9907 = 0;
    while(true) {
      if(n__9907 < cnt__9905) {
        var nval__9908 = f.call(null, val__9906, arr[n__9907]);
        if(cljs.core.reduced_QMARK_.call(null, nval__9908)) {
          return cljs.core.deref.call(null, nval__9908)
        }else {
          var G__9915 = nval__9908;
          var G__9916 = n__9907 + 1;
          val__9906 = G__9915;
          n__9907 = G__9916;
          continue
        }
      }else {
        return val__9906
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__9909 = arr.length;
    var val__9910 = val;
    var n__9911 = idx;
    while(true) {
      if(n__9911 < cnt__9909) {
        var nval__9912 = f.call(null, val__9910, arr[n__9911]);
        if(cljs.core.reduced_QMARK_.call(null, nval__9912)) {
          return cljs.core.deref.call(null, nval__9912)
        }else {
          var G__9917 = nval__9912;
          var G__9918 = n__9911 + 1;
          val__9910 = G__9917;
          n__9911 = G__9918;
          continue
        }
      }else {
        return val__9910
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9919 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__9920 = this;
  if(this__9920.i + 1 < this__9920.a.length) {
    return new cljs.core.IndexedSeq(this__9920.a, this__9920.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9921 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9922 = this;
  var c__9923 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__9923 > 0) {
    return new cljs.core.RSeq(coll, c__9923 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__9924 = this;
  var this__9925 = this;
  return cljs.core.pr_str.call(null, this__9925)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9926 = this;
  if(cljs.core.counted_QMARK_.call(null, this__9926.a)) {
    return cljs.core.ci_reduce.call(null, this__9926.a, f, this__9926.a[this__9926.i], this__9926.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__9926.a[this__9926.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9927 = this;
  if(cljs.core.counted_QMARK_.call(null, this__9927.a)) {
    return cljs.core.ci_reduce.call(null, this__9927.a, f, start, this__9927.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9928 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__9929 = this;
  return this__9929.a.length - this__9929.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__9930 = this;
  return this__9930.a[this__9930.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__9931 = this;
  if(this__9931.i + 1 < this__9931.a.length) {
    return new cljs.core.IndexedSeq(this__9931.a, this__9931.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9932 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9933 = this;
  var i__9934 = n + this__9933.i;
  if(i__9934 < this__9933.a.length) {
    return this__9933.a[i__9934]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9935 = this;
  var i__9936 = n + this__9935.i;
  if(i__9936 < this__9935.a.length) {
    return this__9935.a[i__9936]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__9937 = null;
  var G__9937__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__9937__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__9937 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__9937__2.call(this, array, f);
      case 3:
        return G__9937__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9937
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__9938 = null;
  var G__9938__2 = function(array, k) {
    return array[k]
  };
  var G__9938__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__9938 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9938__2.call(this, array, k);
      case 3:
        return G__9938__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9938
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__9939 = null;
  var G__9939__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__9939__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__9939 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9939__2.call(this, array, n);
      case 3:
        return G__9939__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9939
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9940 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9941 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__9942 = this;
  var this__9943 = this;
  return cljs.core.pr_str.call(null, this__9943)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9944 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9945 = this;
  return this__9945.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9946 = this;
  return cljs.core._nth.call(null, this__9946.ci, this__9946.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9947 = this;
  if(this__9947.i > 0) {
    return new cljs.core.RSeq(this__9947.ci, this__9947.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9948 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__9949 = this;
  return new cljs.core.RSeq(this__9949.ci, this__9949.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9950 = this;
  return this__9950.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__9954__9955 = coll;
      if(G__9954__9955) {
        if(function() {
          var or__3943__auto____9956 = G__9954__9955.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3943__auto____9956) {
            return or__3943__auto____9956
          }else {
            return G__9954__9955.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__9954__9955.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__9954__9955)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__9954__9955)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__9961__9962 = coll;
      if(G__9961__9962) {
        if(function() {
          var or__3943__auto____9963 = G__9961__9962.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____9963) {
            return or__3943__auto____9963
          }else {
            return G__9961__9962.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__9961__9962.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9961__9962)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9961__9962)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__9964 = cljs.core.seq.call(null, coll);
      if(s__9964 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__9964)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__9969__9970 = coll;
      if(G__9969__9970) {
        if(function() {
          var or__3943__auto____9971 = G__9969__9970.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____9971) {
            return or__3943__auto____9971
          }else {
            return G__9969__9970.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__9969__9970.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9969__9970)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9969__9970)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__9972 = cljs.core.seq.call(null, coll);
      if(!(s__9972 == null)) {
        return cljs.core._rest.call(null, s__9972)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__9976__9977 = coll;
      if(G__9976__9977) {
        if(function() {
          var or__3943__auto____9978 = G__9976__9977.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3943__auto____9978) {
            return or__3943__auto____9978
          }else {
            return G__9976__9977.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__9976__9977.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__9976__9977)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__9976__9977)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__9980 = cljs.core.next.call(null, s);
    if(!(sn__9980 == null)) {
      var G__9981 = sn__9980;
      s = G__9981;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__9982__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__9983 = conj.call(null, coll, x);
          var G__9984 = cljs.core.first.call(null, xs);
          var G__9985 = cljs.core.next.call(null, xs);
          coll = G__9983;
          x = G__9984;
          xs = G__9985;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__9982 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9982__delegate.call(this, coll, x, xs)
    };
    G__9982.cljs$lang$maxFixedArity = 2;
    G__9982.cljs$lang$applyTo = function(arglist__9986) {
      var coll = cljs.core.first(arglist__9986);
      var x = cljs.core.first(cljs.core.next(arglist__9986));
      var xs = cljs.core.rest(cljs.core.next(arglist__9986));
      return G__9982__delegate(coll, x, xs)
    };
    G__9982.cljs$lang$arity$variadic = G__9982__delegate;
    return G__9982
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__9989 = cljs.core.seq.call(null, coll);
  var acc__9990 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__9989)) {
      return acc__9990 + cljs.core._count.call(null, s__9989)
    }else {
      var G__9991 = cljs.core.next.call(null, s__9989);
      var G__9992 = acc__9990 + 1;
      s__9989 = G__9991;
      acc__9990 = G__9992;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__9999__10000 = coll;
        if(G__9999__10000) {
          if(function() {
            var or__3943__auto____10001 = G__9999__10000.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto____10001) {
              return or__3943__auto____10001
            }else {
              return G__9999__10000.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__9999__10000.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9999__10000)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9999__10000)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__10002__10003 = coll;
        if(G__10002__10003) {
          if(function() {
            var or__3943__auto____10004 = G__10002__10003.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto____10004) {
              return or__3943__auto____10004
            }else {
              return G__10002__10003.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__10002__10003.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__10002__10003)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__10002__10003)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__10007__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__10006 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__10008 = ret__10006;
          var G__10009 = cljs.core.first.call(null, kvs);
          var G__10010 = cljs.core.second.call(null, kvs);
          var G__10011 = cljs.core.nnext.call(null, kvs);
          coll = G__10008;
          k = G__10009;
          v = G__10010;
          kvs = G__10011;
          continue
        }else {
          return ret__10006
        }
        break
      }
    };
    var G__10007 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10007__delegate.call(this, coll, k, v, kvs)
    };
    G__10007.cljs$lang$maxFixedArity = 3;
    G__10007.cljs$lang$applyTo = function(arglist__10012) {
      var coll = cljs.core.first(arglist__10012);
      var k = cljs.core.first(cljs.core.next(arglist__10012));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10012)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10012)));
      return G__10007__delegate(coll, k, v, kvs)
    };
    G__10007.cljs$lang$arity$variadic = G__10007__delegate;
    return G__10007
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__10015__delegate = function(coll, k, ks) {
      while(true) {
        var ret__10014 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__10016 = ret__10014;
          var G__10017 = cljs.core.first.call(null, ks);
          var G__10018 = cljs.core.next.call(null, ks);
          coll = G__10016;
          k = G__10017;
          ks = G__10018;
          continue
        }else {
          return ret__10014
        }
        break
      }
    };
    var G__10015 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10015__delegate.call(this, coll, k, ks)
    };
    G__10015.cljs$lang$maxFixedArity = 2;
    G__10015.cljs$lang$applyTo = function(arglist__10019) {
      var coll = cljs.core.first(arglist__10019);
      var k = cljs.core.first(cljs.core.next(arglist__10019));
      var ks = cljs.core.rest(cljs.core.next(arglist__10019));
      return G__10015__delegate(coll, k, ks)
    };
    G__10015.cljs$lang$arity$variadic = G__10015__delegate;
    return G__10015
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__10023__10024 = o;
    if(G__10023__10024) {
      if(function() {
        var or__3943__auto____10025 = G__10023__10024.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3943__auto____10025) {
          return or__3943__auto____10025
        }else {
          return G__10023__10024.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__10023__10024.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10023__10024)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10023__10024)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__10028__delegate = function(coll, k, ks) {
      while(true) {
        var ret__10027 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__10029 = ret__10027;
          var G__10030 = cljs.core.first.call(null, ks);
          var G__10031 = cljs.core.next.call(null, ks);
          coll = G__10029;
          k = G__10030;
          ks = G__10031;
          continue
        }else {
          return ret__10027
        }
        break
      }
    };
    var G__10028 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10028__delegate.call(this, coll, k, ks)
    };
    G__10028.cljs$lang$maxFixedArity = 2;
    G__10028.cljs$lang$applyTo = function(arglist__10032) {
      var coll = cljs.core.first(arglist__10032);
      var k = cljs.core.first(cljs.core.next(arglist__10032));
      var ks = cljs.core.rest(cljs.core.next(arglist__10032));
      return G__10028__delegate(coll, k, ks)
    };
    G__10028.cljs$lang$arity$variadic = G__10028__delegate;
    return G__10028
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__10034 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__10034;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__10034
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__10036 = cljs.core.string_hash_cache[k];
  if(!(h__10036 == null)) {
    return h__10036
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3941__auto____10038 = goog.isString(o);
      if(and__3941__auto____10038) {
        return check_cache
      }else {
        return and__3941__auto____10038
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__10042__10043 = x;
    if(G__10042__10043) {
      if(function() {
        var or__3943__auto____10044 = G__10042__10043.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3943__auto____10044) {
          return or__3943__auto____10044
        }else {
          return G__10042__10043.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__10042__10043.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__10042__10043)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__10042__10043)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__10048__10049 = x;
    if(G__10048__10049) {
      if(function() {
        var or__3943__auto____10050 = G__10048__10049.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3943__auto____10050) {
          return or__3943__auto____10050
        }else {
          return G__10048__10049.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__10048__10049.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__10048__10049)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__10048__10049)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__10054__10055 = x;
  if(G__10054__10055) {
    if(function() {
      var or__3943__auto____10056 = G__10054__10055.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3943__auto____10056) {
        return or__3943__auto____10056
      }else {
        return G__10054__10055.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__10054__10055.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__10054__10055)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__10054__10055)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__10060__10061 = x;
  if(G__10060__10061) {
    if(function() {
      var or__3943__auto____10062 = G__10060__10061.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3943__auto____10062) {
        return or__3943__auto____10062
      }else {
        return G__10060__10061.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__10060__10061.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__10060__10061)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__10060__10061)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__10066__10067 = x;
  if(G__10066__10067) {
    if(function() {
      var or__3943__auto____10068 = G__10066__10067.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3943__auto____10068) {
        return or__3943__auto____10068
      }else {
        return G__10066__10067.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__10066__10067.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__10066__10067)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__10066__10067)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__10072__10073 = x;
  if(G__10072__10073) {
    if(function() {
      var or__3943__auto____10074 = G__10072__10073.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3943__auto____10074) {
        return or__3943__auto____10074
      }else {
        return G__10072__10073.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__10072__10073.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__10072__10073)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__10072__10073)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__10078__10079 = x;
  if(G__10078__10079) {
    if(function() {
      var or__3943__auto____10080 = G__10078__10079.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3943__auto____10080) {
        return or__3943__auto____10080
      }else {
        return G__10078__10079.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__10078__10079.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__10078__10079)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__10078__10079)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__10084__10085 = x;
    if(G__10084__10085) {
      if(function() {
        var or__3943__auto____10086 = G__10084__10085.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3943__auto____10086) {
          return or__3943__auto____10086
        }else {
          return G__10084__10085.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__10084__10085.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__10084__10085)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__10084__10085)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__10090__10091 = x;
  if(G__10090__10091) {
    if(function() {
      var or__3943__auto____10092 = G__10090__10091.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3943__auto____10092) {
        return or__3943__auto____10092
      }else {
        return G__10090__10091.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__10090__10091.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__10090__10091)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__10090__10091)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__10096__10097 = x;
  if(G__10096__10097) {
    if(cljs.core.truth_(function() {
      var or__3943__auto____10098 = null;
      if(cljs.core.truth_(or__3943__auto____10098)) {
        return or__3943__auto____10098
      }else {
        return G__10096__10097.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__10096__10097.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__10096__10097)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__10096__10097)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__10099__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__10099 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10099__delegate.call(this, keyvals)
    };
    G__10099.cljs$lang$maxFixedArity = 0;
    G__10099.cljs$lang$applyTo = function(arglist__10100) {
      var keyvals = cljs.core.seq(arglist__10100);
      return G__10099__delegate(keyvals)
    };
    G__10099.cljs$lang$arity$variadic = G__10099__delegate;
    return G__10099
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__10102 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__10102.push(key)
  });
  return keys__10102
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__10106 = i;
  var j__10107 = j;
  var len__10108 = len;
  while(true) {
    if(len__10108 === 0) {
      return to
    }else {
      to[j__10107] = from[i__10106];
      var G__10109 = i__10106 + 1;
      var G__10110 = j__10107 + 1;
      var G__10111 = len__10108 - 1;
      i__10106 = G__10109;
      j__10107 = G__10110;
      len__10108 = G__10111;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__10115 = i + (len - 1);
  var j__10116 = j + (len - 1);
  var len__10117 = len;
  while(true) {
    if(len__10117 === 0) {
      return to
    }else {
      to[j__10116] = from[i__10115];
      var G__10118 = i__10115 - 1;
      var G__10119 = j__10116 - 1;
      var G__10120 = len__10117 - 1;
      i__10115 = G__10118;
      j__10116 = G__10119;
      len__10117 = G__10120;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__10124__10125 = s;
    if(G__10124__10125) {
      if(function() {
        var or__3943__auto____10126 = G__10124__10125.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3943__auto____10126) {
          return or__3943__auto____10126
        }else {
          return G__10124__10125.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__10124__10125.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__10124__10125)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__10124__10125)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__10130__10131 = s;
  if(G__10130__10131) {
    if(function() {
      var or__3943__auto____10132 = G__10130__10131.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3943__auto____10132) {
        return or__3943__auto____10132
      }else {
        return G__10130__10131.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__10130__10131.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__10130__10131)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__10130__10131)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3941__auto____10135 = goog.isString(x);
  if(and__3941__auto____10135) {
    return!function() {
      var or__3943__auto____10136 = x.charAt(0) === "\ufdd0";
      if(or__3943__auto____10136) {
        return or__3943__auto____10136
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3941__auto____10135
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3941__auto____10138 = goog.isString(x);
  if(and__3941__auto____10138) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3941__auto____10138
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3941__auto____10140 = goog.isString(x);
  if(and__3941__auto____10140) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3941__auto____10140
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3943__auto____10145 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3943__auto____10145) {
    return or__3943__auto____10145
  }else {
    var G__10146__10147 = f;
    if(G__10146__10147) {
      if(function() {
        var or__3943__auto____10148 = G__10146__10147.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3943__auto____10148) {
          return or__3943__auto____10148
        }else {
          return G__10146__10147.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__10146__10147.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__10146__10147)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__10146__10147)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3941__auto____10150 = cljs.core.number_QMARK_.call(null, n);
  if(and__3941__auto____10150) {
    return n == n.toFixed()
  }else {
    return and__3941__auto____10150
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3941__auto____10153 = coll;
    if(cljs.core.truth_(and__3941__auto____10153)) {
      var and__3941__auto____10154 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3941__auto____10154) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3941__auto____10154
      }
    }else {
      return and__3941__auto____10153
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__10163__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__10159 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__10160 = more;
        while(true) {
          var x__10161 = cljs.core.first.call(null, xs__10160);
          var etc__10162 = cljs.core.next.call(null, xs__10160);
          if(cljs.core.truth_(xs__10160)) {
            if(cljs.core.contains_QMARK_.call(null, s__10159, x__10161)) {
              return false
            }else {
              var G__10164 = cljs.core.conj.call(null, s__10159, x__10161);
              var G__10165 = etc__10162;
              s__10159 = G__10164;
              xs__10160 = G__10165;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__10163 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10163__delegate.call(this, x, y, more)
    };
    G__10163.cljs$lang$maxFixedArity = 2;
    G__10163.cljs$lang$applyTo = function(arglist__10166) {
      var x = cljs.core.first(arglist__10166);
      var y = cljs.core.first(cljs.core.next(arglist__10166));
      var more = cljs.core.rest(cljs.core.next(arglist__10166));
      return G__10163__delegate(x, y, more)
    };
    G__10163.cljs$lang$arity$variadic = G__10163__delegate;
    return G__10163
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__10170__10171 = x;
            if(G__10170__10171) {
              if(cljs.core.truth_(function() {
                var or__3943__auto____10172 = null;
                if(cljs.core.truth_(or__3943__auto____10172)) {
                  return or__3943__auto____10172
                }else {
                  return G__10170__10171.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__10170__10171.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__10170__10171)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__10170__10171)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__10177 = cljs.core.count.call(null, xs);
    var yl__10178 = cljs.core.count.call(null, ys);
    if(xl__10177 < yl__10178) {
      return-1
    }else {
      if(xl__10177 > yl__10178) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__10177, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__10179 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3941__auto____10180 = d__10179 === 0;
        if(and__3941__auto____10180) {
          return n + 1 < len
        }else {
          return and__3941__auto____10180
        }
      }()) {
        var G__10181 = xs;
        var G__10182 = ys;
        var G__10183 = len;
        var G__10184 = n + 1;
        xs = G__10181;
        ys = G__10182;
        len = G__10183;
        n = G__10184;
        continue
      }else {
        return d__10179
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__10186 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__10186)) {
        return r__10186
      }else {
        if(cljs.core.truth_(r__10186)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__10188 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__10188, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__10188)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto____10194 = cljs.core.seq.call(null, coll);
    if(temp__4090__auto____10194) {
      var s__10195 = temp__4090__auto____10194;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__10195), cljs.core.next.call(null, s__10195))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__10196 = val;
    var coll__10197 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__10197) {
        var nval__10198 = f.call(null, val__10196, cljs.core.first.call(null, coll__10197));
        if(cljs.core.reduced_QMARK_.call(null, nval__10198)) {
          return cljs.core.deref.call(null, nval__10198)
        }else {
          var G__10199 = nval__10198;
          var G__10200 = cljs.core.next.call(null, coll__10197);
          val__10196 = G__10199;
          coll__10197 = G__10200;
          continue
        }
      }else {
        return val__10196
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__10202 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__10202);
  return cljs.core.vec.call(null, a__10202)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__10209__10210 = coll;
      if(G__10209__10210) {
        if(function() {
          var or__3943__auto____10211 = G__10209__10210.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto____10211) {
            return or__3943__auto____10211
          }else {
            return G__10209__10210.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__10209__10210.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__10209__10210)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__10209__10210)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__10212__10213 = coll;
      if(G__10212__10213) {
        if(function() {
          var or__3943__auto____10214 = G__10212__10213.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto____10214) {
            return or__3943__auto____10214
          }else {
            return G__10212__10213.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__10212__10213.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__10212__10213)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__10212__10213)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__10215 = this;
  return this__10215.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__10216__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__10216 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10216__delegate.call(this, x, y, more)
    };
    G__10216.cljs$lang$maxFixedArity = 2;
    G__10216.cljs$lang$applyTo = function(arglist__10217) {
      var x = cljs.core.first(arglist__10217);
      var y = cljs.core.first(cljs.core.next(arglist__10217));
      var more = cljs.core.rest(cljs.core.next(arglist__10217));
      return G__10216__delegate(x, y, more)
    };
    G__10216.cljs$lang$arity$variadic = G__10216__delegate;
    return G__10216
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__10218__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__10218 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10218__delegate.call(this, x, y, more)
    };
    G__10218.cljs$lang$maxFixedArity = 2;
    G__10218.cljs$lang$applyTo = function(arglist__10219) {
      var x = cljs.core.first(arglist__10219);
      var y = cljs.core.first(cljs.core.next(arglist__10219));
      var more = cljs.core.rest(cljs.core.next(arglist__10219));
      return G__10218__delegate(x, y, more)
    };
    G__10218.cljs$lang$arity$variadic = G__10218__delegate;
    return G__10218
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__10220__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__10220 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10220__delegate.call(this, x, y, more)
    };
    G__10220.cljs$lang$maxFixedArity = 2;
    G__10220.cljs$lang$applyTo = function(arglist__10221) {
      var x = cljs.core.first(arglist__10221);
      var y = cljs.core.first(cljs.core.next(arglist__10221));
      var more = cljs.core.rest(cljs.core.next(arglist__10221));
      return G__10220__delegate(x, y, more)
    };
    G__10220.cljs$lang$arity$variadic = G__10220__delegate;
    return G__10220
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__10222__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__10222 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10222__delegate.call(this, x, y, more)
    };
    G__10222.cljs$lang$maxFixedArity = 2;
    G__10222.cljs$lang$applyTo = function(arglist__10223) {
      var x = cljs.core.first(arglist__10223);
      var y = cljs.core.first(cljs.core.next(arglist__10223));
      var more = cljs.core.rest(cljs.core.next(arglist__10223));
      return G__10222__delegate(x, y, more)
    };
    G__10222.cljs$lang$arity$variadic = G__10222__delegate;
    return G__10222
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__10224__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__10225 = y;
            var G__10226 = cljs.core.first.call(null, more);
            var G__10227 = cljs.core.next.call(null, more);
            x = G__10225;
            y = G__10226;
            more = G__10227;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__10224 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10224__delegate.call(this, x, y, more)
    };
    G__10224.cljs$lang$maxFixedArity = 2;
    G__10224.cljs$lang$applyTo = function(arglist__10228) {
      var x = cljs.core.first(arglist__10228);
      var y = cljs.core.first(cljs.core.next(arglist__10228));
      var more = cljs.core.rest(cljs.core.next(arglist__10228));
      return G__10224__delegate(x, y, more)
    };
    G__10224.cljs$lang$arity$variadic = G__10224__delegate;
    return G__10224
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__10229__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__10230 = y;
            var G__10231 = cljs.core.first.call(null, more);
            var G__10232 = cljs.core.next.call(null, more);
            x = G__10230;
            y = G__10231;
            more = G__10232;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__10229 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10229__delegate.call(this, x, y, more)
    };
    G__10229.cljs$lang$maxFixedArity = 2;
    G__10229.cljs$lang$applyTo = function(arglist__10233) {
      var x = cljs.core.first(arglist__10233);
      var y = cljs.core.first(cljs.core.next(arglist__10233));
      var more = cljs.core.rest(cljs.core.next(arglist__10233));
      return G__10229__delegate(x, y, more)
    };
    G__10229.cljs$lang$arity$variadic = G__10229__delegate;
    return G__10229
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__10234__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__10235 = y;
            var G__10236 = cljs.core.first.call(null, more);
            var G__10237 = cljs.core.next.call(null, more);
            x = G__10235;
            y = G__10236;
            more = G__10237;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__10234 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10234__delegate.call(this, x, y, more)
    };
    G__10234.cljs$lang$maxFixedArity = 2;
    G__10234.cljs$lang$applyTo = function(arglist__10238) {
      var x = cljs.core.first(arglist__10238);
      var y = cljs.core.first(cljs.core.next(arglist__10238));
      var more = cljs.core.rest(cljs.core.next(arglist__10238));
      return G__10234__delegate(x, y, more)
    };
    G__10234.cljs$lang$arity$variadic = G__10234__delegate;
    return G__10234
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__10239__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__10240 = y;
            var G__10241 = cljs.core.first.call(null, more);
            var G__10242 = cljs.core.next.call(null, more);
            x = G__10240;
            y = G__10241;
            more = G__10242;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__10239 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10239__delegate.call(this, x, y, more)
    };
    G__10239.cljs$lang$maxFixedArity = 2;
    G__10239.cljs$lang$applyTo = function(arglist__10243) {
      var x = cljs.core.first(arglist__10243);
      var y = cljs.core.first(cljs.core.next(arglist__10243));
      var more = cljs.core.rest(cljs.core.next(arglist__10243));
      return G__10239__delegate(x, y, more)
    };
    G__10239.cljs$lang$arity$variadic = G__10239__delegate;
    return G__10239
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__10244__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__10244 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10244__delegate.call(this, x, y, more)
    };
    G__10244.cljs$lang$maxFixedArity = 2;
    G__10244.cljs$lang$applyTo = function(arglist__10245) {
      var x = cljs.core.first(arglist__10245);
      var y = cljs.core.first(cljs.core.next(arglist__10245));
      var more = cljs.core.rest(cljs.core.next(arglist__10245));
      return G__10244__delegate(x, y, more)
    };
    G__10244.cljs$lang$arity$variadic = G__10244__delegate;
    return G__10244
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__10246__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__10246 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10246__delegate.call(this, x, y, more)
    };
    G__10246.cljs$lang$maxFixedArity = 2;
    G__10246.cljs$lang$applyTo = function(arglist__10247) {
      var x = cljs.core.first(arglist__10247);
      var y = cljs.core.first(cljs.core.next(arglist__10247));
      var more = cljs.core.rest(cljs.core.next(arglist__10247));
      return G__10246__delegate(x, y, more)
    };
    G__10246.cljs$lang$arity$variadic = G__10246__delegate;
    return G__10246
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__10249 = n % d;
  return cljs.core.fix.call(null, (n - rem__10249) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__10251 = cljs.core.quot.call(null, n, d);
  return n - d * q__10251
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__10254 = v - (v >> 1 & 1431655765);
  var v__10255 = (v__10254 & 858993459) + (v__10254 >> 2 & 858993459);
  return(v__10255 + (v__10255 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__10256__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__10257 = y;
            var G__10258 = cljs.core.first.call(null, more);
            var G__10259 = cljs.core.next.call(null, more);
            x = G__10257;
            y = G__10258;
            more = G__10259;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__10256 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10256__delegate.call(this, x, y, more)
    };
    G__10256.cljs$lang$maxFixedArity = 2;
    G__10256.cljs$lang$applyTo = function(arglist__10260) {
      var x = cljs.core.first(arglist__10260);
      var y = cljs.core.first(cljs.core.next(arglist__10260));
      var more = cljs.core.rest(cljs.core.next(arglist__10260));
      return G__10256__delegate(x, y, more)
    };
    G__10256.cljs$lang$arity$variadic = G__10256__delegate;
    return G__10256
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__10264 = n;
  var xs__10265 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3941__auto____10266 = xs__10265;
      if(and__3941__auto____10266) {
        return n__10264 > 0
      }else {
        return and__3941__auto____10266
      }
    }())) {
      var G__10267 = n__10264 - 1;
      var G__10268 = cljs.core.next.call(null, xs__10265);
      n__10264 = G__10267;
      xs__10265 = G__10268;
      continue
    }else {
      return xs__10265
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__10269__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__10270 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__10271 = cljs.core.next.call(null, more);
            sb = G__10270;
            more = G__10271;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__10269 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10269__delegate.call(this, x, ys)
    };
    G__10269.cljs$lang$maxFixedArity = 1;
    G__10269.cljs$lang$applyTo = function(arglist__10272) {
      var x = cljs.core.first(arglist__10272);
      var ys = cljs.core.rest(arglist__10272);
      return G__10269__delegate(x, ys)
    };
    G__10269.cljs$lang$arity$variadic = G__10269__delegate;
    return G__10269
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__10273__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__10274 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__10275 = cljs.core.next.call(null, more);
            sb = G__10274;
            more = G__10275;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__10273 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10273__delegate.call(this, x, ys)
    };
    G__10273.cljs$lang$maxFixedArity = 1;
    G__10273.cljs$lang$applyTo = function(arglist__10276) {
      var x = cljs.core.first(arglist__10276);
      var ys = cljs.core.rest(arglist__10276);
      return G__10273__delegate(x, ys)
    };
    G__10273.cljs$lang$arity$variadic = G__10273__delegate;
    return G__10273
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__10277) {
    var fmt = cljs.core.first(arglist__10277);
    var args = cljs.core.rest(arglist__10277);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__10280 = cljs.core.seq.call(null, x);
    var ys__10281 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__10280 == null) {
        return ys__10281 == null
      }else {
        if(ys__10281 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__10280), cljs.core.first.call(null, ys__10281))) {
            var G__10282 = cljs.core.next.call(null, xs__10280);
            var G__10283 = cljs.core.next.call(null, ys__10281);
            xs__10280 = G__10282;
            ys__10281 = G__10283;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__10284_SHARP_, p2__10285_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__10284_SHARP_, cljs.core.hash.call(null, p2__10285_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__10289 = 0;
  var s__10290 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__10290) {
      var e__10291 = cljs.core.first.call(null, s__10290);
      var G__10292 = (h__10289 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__10291)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__10291)))) % 4503599627370496;
      var G__10293 = cljs.core.next.call(null, s__10290);
      h__10289 = G__10292;
      s__10290 = G__10293;
      continue
    }else {
      return h__10289
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__10297 = 0;
  var s__10298 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__10298) {
      var e__10299 = cljs.core.first.call(null, s__10298);
      var G__10300 = (h__10297 + cljs.core.hash.call(null, e__10299)) % 4503599627370496;
      var G__10301 = cljs.core.next.call(null, s__10298);
      h__10297 = G__10300;
      s__10298 = G__10301;
      continue
    }else {
      return h__10297
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__10322__10323 = cljs.core.seq.call(null, fn_map);
  if(G__10322__10323) {
    var G__10325__10327 = cljs.core.first.call(null, G__10322__10323);
    var vec__10326__10328 = G__10325__10327;
    var key_name__10329 = cljs.core.nth.call(null, vec__10326__10328, 0, null);
    var f__10330 = cljs.core.nth.call(null, vec__10326__10328, 1, null);
    var G__10322__10331 = G__10322__10323;
    var G__10325__10332 = G__10325__10327;
    var G__10322__10333 = G__10322__10331;
    while(true) {
      var vec__10334__10335 = G__10325__10332;
      var key_name__10336 = cljs.core.nth.call(null, vec__10334__10335, 0, null);
      var f__10337 = cljs.core.nth.call(null, vec__10334__10335, 1, null);
      var G__10322__10338 = G__10322__10333;
      var str_name__10339 = cljs.core.name.call(null, key_name__10336);
      obj[str_name__10339] = f__10337;
      var temp__4092__auto____10340 = cljs.core.next.call(null, G__10322__10338);
      if(temp__4092__auto____10340) {
        var G__10322__10341 = temp__4092__auto____10340;
        var G__10342 = cljs.core.first.call(null, G__10322__10341);
        var G__10343 = G__10322__10341;
        G__10325__10332 = G__10342;
        G__10322__10333 = G__10343;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10344 = this;
  var h__3598__auto____10345 = this__10344.__hash;
  if(!(h__3598__auto____10345 == null)) {
    return h__3598__auto____10345
  }else {
    var h__3598__auto____10346 = cljs.core.hash_coll.call(null, coll);
    this__10344.__hash = h__3598__auto____10346;
    return h__3598__auto____10346
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__10347 = this;
  if(this__10347.count === 1) {
    return null
  }else {
    return this__10347.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10348 = this;
  return new cljs.core.List(this__10348.meta, o, coll, this__10348.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__10349 = this;
  var this__10350 = this;
  return cljs.core.pr_str.call(null, this__10350)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10351 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10352 = this;
  return this__10352.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10353 = this;
  return this__10353.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10354 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10355 = this;
  return this__10355.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10356 = this;
  if(this__10356.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__10356.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10357 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10358 = this;
  return new cljs.core.List(meta, this__10358.first, this__10358.rest, this__10358.count, this__10358.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10359 = this;
  return this__10359.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10360 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10361 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__10362 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10363 = this;
  return new cljs.core.List(this__10363.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__10364 = this;
  var this__10365 = this;
  return cljs.core.pr_str.call(null, this__10365)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10366 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10367 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10368 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10369 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10370 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10371 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10372 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10373 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10374 = this;
  return this__10374.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10375 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__10379__10380 = coll;
  if(G__10379__10380) {
    if(function() {
      var or__3943__auto____10381 = G__10379__10380.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3943__auto____10381) {
        return or__3943__auto____10381
      }else {
        return G__10379__10380.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__10379__10380.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__10379__10380)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__10379__10380)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__10382__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__10382 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10382__delegate.call(this, x, y, z, items)
    };
    G__10382.cljs$lang$maxFixedArity = 3;
    G__10382.cljs$lang$applyTo = function(arglist__10383) {
      var x = cljs.core.first(arglist__10383);
      var y = cljs.core.first(cljs.core.next(arglist__10383));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10383)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10383)));
      return G__10382__delegate(x, y, z, items)
    };
    G__10382.cljs$lang$arity$variadic = G__10382__delegate;
    return G__10382
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10384 = this;
  var h__3598__auto____10385 = this__10384.__hash;
  if(!(h__3598__auto____10385 == null)) {
    return h__3598__auto____10385
  }else {
    var h__3598__auto____10386 = cljs.core.hash_coll.call(null, coll);
    this__10384.__hash = h__3598__auto____10386;
    return h__3598__auto____10386
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__10387 = this;
  if(this__10387.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__10387.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10388 = this;
  return new cljs.core.Cons(null, o, coll, this__10388.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__10389 = this;
  var this__10390 = this;
  return cljs.core.pr_str.call(null, this__10390)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10391 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10392 = this;
  return this__10392.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10393 = this;
  if(this__10393.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__10393.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10394 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10395 = this;
  return new cljs.core.Cons(meta, this__10395.first, this__10395.rest, this__10395.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10396 = this;
  return this__10396.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10397 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10397.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3943__auto____10402 = coll == null;
    if(or__3943__auto____10402) {
      return or__3943__auto____10402
    }else {
      var G__10403__10404 = coll;
      if(G__10403__10404) {
        if(function() {
          var or__3943__auto____10405 = G__10403__10404.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____10405) {
            return or__3943__auto____10405
          }else {
            return G__10403__10404.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__10403__10404.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__10403__10404)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__10403__10404)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__10409__10410 = x;
  if(G__10409__10410) {
    if(function() {
      var or__3943__auto____10411 = G__10409__10410.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3943__auto____10411) {
        return or__3943__auto____10411
      }else {
        return G__10409__10410.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__10409__10410.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__10409__10410)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__10409__10410)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__10412 = null;
  var G__10412__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__10412__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__10412 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__10412__2.call(this, string, f);
      case 3:
        return G__10412__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10412
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__10413 = null;
  var G__10413__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__10413__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__10413 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10413__2.call(this, string, k);
      case 3:
        return G__10413__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10413
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__10414 = null;
  var G__10414__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__10414__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__10414 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10414__2.call(this, string, n);
      case 3:
        return G__10414__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10414
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__10426 = null;
  var G__10426__2 = function(this_sym10417, coll) {
    var this__10419 = this;
    var this_sym10417__10420 = this;
    var ___10421 = this_sym10417__10420;
    if(coll == null) {
      return null
    }else {
      var strobj__10422 = coll.strobj;
      if(strobj__10422 == null) {
        return cljs.core._lookup.call(null, coll, this__10419.k, null)
      }else {
        return strobj__10422[this__10419.k]
      }
    }
  };
  var G__10426__3 = function(this_sym10418, coll, not_found) {
    var this__10419 = this;
    var this_sym10418__10423 = this;
    var ___10424 = this_sym10418__10423;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__10419.k, not_found)
    }
  };
  G__10426 = function(this_sym10418, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10426__2.call(this, this_sym10418, coll);
      case 3:
        return G__10426__3.call(this, this_sym10418, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10426
}();
cljs.core.Keyword.prototype.apply = function(this_sym10415, args10416) {
  var this__10425 = this;
  return this_sym10415.call.apply(this_sym10415, [this_sym10415].concat(args10416.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__10435 = null;
  var G__10435__2 = function(this_sym10429, coll) {
    var this_sym10429__10431 = this;
    var this__10432 = this_sym10429__10431;
    return cljs.core._lookup.call(null, coll, this__10432.toString(), null)
  };
  var G__10435__3 = function(this_sym10430, coll, not_found) {
    var this_sym10430__10433 = this;
    var this__10434 = this_sym10430__10433;
    return cljs.core._lookup.call(null, coll, this__10434.toString(), not_found)
  };
  G__10435 = function(this_sym10430, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10435__2.call(this, this_sym10430, coll);
      case 3:
        return G__10435__3.call(this, this_sym10430, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10435
}();
String.prototype.apply = function(this_sym10427, args10428) {
  return this_sym10427.call.apply(this_sym10427, [this_sym10427].concat(args10428.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__10437 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__10437
  }else {
    lazy_seq.x = x__10437.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10438 = this;
  var h__3598__auto____10439 = this__10438.__hash;
  if(!(h__3598__auto____10439 == null)) {
    return h__3598__auto____10439
  }else {
    var h__3598__auto____10440 = cljs.core.hash_coll.call(null, coll);
    this__10438.__hash = h__3598__auto____10440;
    return h__3598__auto____10440
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__10441 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10442 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__10443 = this;
  var this__10444 = this;
  return cljs.core.pr_str.call(null, this__10444)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10445 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10446 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10447 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10448 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10449 = this;
  return new cljs.core.LazySeq(meta, this__10449.realized, this__10449.x, this__10449.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10450 = this;
  return this__10450.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10451 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10451.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__10452 = this;
  return this__10452.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__10453 = this;
  var ___10454 = this;
  this__10453.buf[this__10453.end] = o;
  return this__10453.end = this__10453.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__10455 = this;
  var ___10456 = this;
  var ret__10457 = new cljs.core.ArrayChunk(this__10455.buf, 0, this__10455.end);
  this__10455.buf = null;
  return ret__10457
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__10458 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__10458.arr[this__10458.off], this__10458.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__10459 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__10459.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__10460 = this;
  if(this__10460.off === this__10460.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__10460.arr, this__10460.off + 1, this__10460.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__10461 = this;
  return this__10461.arr[this__10461.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__10462 = this;
  if(function() {
    var and__3941__auto____10463 = i >= 0;
    if(and__3941__auto____10463) {
      return i < this__10462.end - this__10462.off
    }else {
      return and__3941__auto____10463
    }
  }()) {
    return this__10462.arr[this__10462.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__10464 = this;
  return this__10464.end - this__10464.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__10465 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10466 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10467 = this;
  return cljs.core._nth.call(null, this__10467.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10468 = this;
  if(cljs.core._count.call(null, this__10468.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__10468.chunk), this__10468.more, this__10468.meta)
  }else {
    if(this__10468.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__10468.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__10469 = this;
  if(this__10469.more == null) {
    return null
  }else {
    return this__10469.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10470 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__10471 = this;
  return new cljs.core.ChunkedCons(this__10471.chunk, this__10471.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10472 = this;
  return this__10472.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__10473 = this;
  return this__10473.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__10474 = this;
  if(this__10474.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__10474.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__10478__10479 = s;
    if(G__10478__10479) {
      if(cljs.core.truth_(function() {
        var or__3943__auto____10480 = null;
        if(cljs.core.truth_(or__3943__auto____10480)) {
          return or__3943__auto____10480
        }else {
          return G__10478__10479.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__10478__10479.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__10478__10479)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__10478__10479)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__10483 = [];
  var s__10484 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__10484)) {
      ary__10483.push(cljs.core.first.call(null, s__10484));
      var G__10485 = cljs.core.next.call(null, s__10484);
      s__10484 = G__10485;
      continue
    }else {
      return ary__10483
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__10489 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__10490 = 0;
  var xs__10491 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__10491) {
      ret__10489[i__10490] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__10491));
      var G__10492 = i__10490 + 1;
      var G__10493 = cljs.core.next.call(null, xs__10491);
      i__10490 = G__10492;
      xs__10491 = G__10493;
      continue
    }else {
    }
    break
  }
  return ret__10489
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__10501 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__10502 = cljs.core.seq.call(null, init_val_or_seq);
      var i__10503 = 0;
      var s__10504 = s__10502;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto____10505 = s__10504;
          if(and__3941__auto____10505) {
            return i__10503 < size
          }else {
            return and__3941__auto____10505
          }
        }())) {
          a__10501[i__10503] = cljs.core.first.call(null, s__10504);
          var G__10508 = i__10503 + 1;
          var G__10509 = cljs.core.next.call(null, s__10504);
          i__10503 = G__10508;
          s__10504 = G__10509;
          continue
        }else {
          return a__10501
        }
        break
      }
    }else {
      var n__3933__auto____10506 = size;
      var i__10507 = 0;
      while(true) {
        if(i__10507 < n__3933__auto____10506) {
          a__10501[i__10507] = init_val_or_seq;
          var G__10510 = i__10507 + 1;
          i__10507 = G__10510;
          continue
        }else {
        }
        break
      }
      return a__10501
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__10518 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__10519 = cljs.core.seq.call(null, init_val_or_seq);
      var i__10520 = 0;
      var s__10521 = s__10519;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto____10522 = s__10521;
          if(and__3941__auto____10522) {
            return i__10520 < size
          }else {
            return and__3941__auto____10522
          }
        }())) {
          a__10518[i__10520] = cljs.core.first.call(null, s__10521);
          var G__10525 = i__10520 + 1;
          var G__10526 = cljs.core.next.call(null, s__10521);
          i__10520 = G__10525;
          s__10521 = G__10526;
          continue
        }else {
          return a__10518
        }
        break
      }
    }else {
      var n__3933__auto____10523 = size;
      var i__10524 = 0;
      while(true) {
        if(i__10524 < n__3933__auto____10523) {
          a__10518[i__10524] = init_val_or_seq;
          var G__10527 = i__10524 + 1;
          i__10524 = G__10527;
          continue
        }else {
        }
        break
      }
      return a__10518
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__10535 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__10536 = cljs.core.seq.call(null, init_val_or_seq);
      var i__10537 = 0;
      var s__10538 = s__10536;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto____10539 = s__10538;
          if(and__3941__auto____10539) {
            return i__10537 < size
          }else {
            return and__3941__auto____10539
          }
        }())) {
          a__10535[i__10537] = cljs.core.first.call(null, s__10538);
          var G__10542 = i__10537 + 1;
          var G__10543 = cljs.core.next.call(null, s__10538);
          i__10537 = G__10542;
          s__10538 = G__10543;
          continue
        }else {
          return a__10535
        }
        break
      }
    }else {
      var n__3933__auto____10540 = size;
      var i__10541 = 0;
      while(true) {
        if(i__10541 < n__3933__auto____10540) {
          a__10535[i__10541] = init_val_or_seq;
          var G__10544 = i__10541 + 1;
          i__10541 = G__10544;
          continue
        }else {
        }
        break
      }
      return a__10535
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__10549 = s;
    var i__10550 = n;
    var sum__10551 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto____10552 = i__10550 > 0;
        if(and__3941__auto____10552) {
          return cljs.core.seq.call(null, s__10549)
        }else {
          return and__3941__auto____10552
        }
      }())) {
        var G__10553 = cljs.core.next.call(null, s__10549);
        var G__10554 = i__10550 - 1;
        var G__10555 = sum__10551 + 1;
        s__10549 = G__10553;
        i__10550 = G__10554;
        sum__10551 = G__10555;
        continue
      }else {
        return sum__10551
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__10560 = cljs.core.seq.call(null, x);
      if(s__10560) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__10560)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__10560), concat.call(null, cljs.core.chunk_rest.call(null, s__10560), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__10560), concat.call(null, cljs.core.rest.call(null, s__10560), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__10564__delegate = function(x, y, zs) {
      var cat__10563 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__10562 = cljs.core.seq.call(null, xys);
          if(xys__10562) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__10562)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__10562), cat.call(null, cljs.core.chunk_rest.call(null, xys__10562), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__10562), cat.call(null, cljs.core.rest.call(null, xys__10562), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__10563.call(null, concat.call(null, x, y), zs)
    };
    var G__10564 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10564__delegate.call(this, x, y, zs)
    };
    G__10564.cljs$lang$maxFixedArity = 2;
    G__10564.cljs$lang$applyTo = function(arglist__10565) {
      var x = cljs.core.first(arglist__10565);
      var y = cljs.core.first(cljs.core.next(arglist__10565));
      var zs = cljs.core.rest(cljs.core.next(arglist__10565));
      return G__10564__delegate(x, y, zs)
    };
    G__10564.cljs$lang$arity$variadic = G__10564__delegate;
    return G__10564
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__10566__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__10566 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__10566__delegate.call(this, a, b, c, d, more)
    };
    G__10566.cljs$lang$maxFixedArity = 4;
    G__10566.cljs$lang$applyTo = function(arglist__10567) {
      var a = cljs.core.first(arglist__10567);
      var b = cljs.core.first(cljs.core.next(arglist__10567));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10567)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10567))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10567))));
      return G__10566__delegate(a, b, c, d, more)
    };
    G__10566.cljs$lang$arity$variadic = G__10566__delegate;
    return G__10566
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__10609 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__10610 = cljs.core._first.call(null, args__10609);
    var args__10611 = cljs.core._rest.call(null, args__10609);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__10610)
      }else {
        return f.call(null, a__10610)
      }
    }else {
      var b__10612 = cljs.core._first.call(null, args__10611);
      var args__10613 = cljs.core._rest.call(null, args__10611);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__10610, b__10612)
        }else {
          return f.call(null, a__10610, b__10612)
        }
      }else {
        var c__10614 = cljs.core._first.call(null, args__10613);
        var args__10615 = cljs.core._rest.call(null, args__10613);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__10610, b__10612, c__10614)
          }else {
            return f.call(null, a__10610, b__10612, c__10614)
          }
        }else {
          var d__10616 = cljs.core._first.call(null, args__10615);
          var args__10617 = cljs.core._rest.call(null, args__10615);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__10610, b__10612, c__10614, d__10616)
            }else {
              return f.call(null, a__10610, b__10612, c__10614, d__10616)
            }
          }else {
            var e__10618 = cljs.core._first.call(null, args__10617);
            var args__10619 = cljs.core._rest.call(null, args__10617);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__10610, b__10612, c__10614, d__10616, e__10618)
              }else {
                return f.call(null, a__10610, b__10612, c__10614, d__10616, e__10618)
              }
            }else {
              var f__10620 = cljs.core._first.call(null, args__10619);
              var args__10621 = cljs.core._rest.call(null, args__10619);
              if(argc === 6) {
                if(f__10620.cljs$lang$arity$6) {
                  return f__10620.cljs$lang$arity$6(a__10610, b__10612, c__10614, d__10616, e__10618, f__10620)
                }else {
                  return f__10620.call(null, a__10610, b__10612, c__10614, d__10616, e__10618, f__10620)
                }
              }else {
                var g__10622 = cljs.core._first.call(null, args__10621);
                var args__10623 = cljs.core._rest.call(null, args__10621);
                if(argc === 7) {
                  if(f__10620.cljs$lang$arity$7) {
                    return f__10620.cljs$lang$arity$7(a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622)
                  }else {
                    return f__10620.call(null, a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622)
                  }
                }else {
                  var h__10624 = cljs.core._first.call(null, args__10623);
                  var args__10625 = cljs.core._rest.call(null, args__10623);
                  if(argc === 8) {
                    if(f__10620.cljs$lang$arity$8) {
                      return f__10620.cljs$lang$arity$8(a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624)
                    }else {
                      return f__10620.call(null, a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624)
                    }
                  }else {
                    var i__10626 = cljs.core._first.call(null, args__10625);
                    var args__10627 = cljs.core._rest.call(null, args__10625);
                    if(argc === 9) {
                      if(f__10620.cljs$lang$arity$9) {
                        return f__10620.cljs$lang$arity$9(a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626)
                      }else {
                        return f__10620.call(null, a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626)
                      }
                    }else {
                      var j__10628 = cljs.core._first.call(null, args__10627);
                      var args__10629 = cljs.core._rest.call(null, args__10627);
                      if(argc === 10) {
                        if(f__10620.cljs$lang$arity$10) {
                          return f__10620.cljs$lang$arity$10(a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628)
                        }else {
                          return f__10620.call(null, a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628)
                        }
                      }else {
                        var k__10630 = cljs.core._first.call(null, args__10629);
                        var args__10631 = cljs.core._rest.call(null, args__10629);
                        if(argc === 11) {
                          if(f__10620.cljs$lang$arity$11) {
                            return f__10620.cljs$lang$arity$11(a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630)
                          }else {
                            return f__10620.call(null, a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630)
                          }
                        }else {
                          var l__10632 = cljs.core._first.call(null, args__10631);
                          var args__10633 = cljs.core._rest.call(null, args__10631);
                          if(argc === 12) {
                            if(f__10620.cljs$lang$arity$12) {
                              return f__10620.cljs$lang$arity$12(a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632)
                            }else {
                              return f__10620.call(null, a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632)
                            }
                          }else {
                            var m__10634 = cljs.core._first.call(null, args__10633);
                            var args__10635 = cljs.core._rest.call(null, args__10633);
                            if(argc === 13) {
                              if(f__10620.cljs$lang$arity$13) {
                                return f__10620.cljs$lang$arity$13(a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634)
                              }else {
                                return f__10620.call(null, a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634)
                              }
                            }else {
                              var n__10636 = cljs.core._first.call(null, args__10635);
                              var args__10637 = cljs.core._rest.call(null, args__10635);
                              if(argc === 14) {
                                if(f__10620.cljs$lang$arity$14) {
                                  return f__10620.cljs$lang$arity$14(a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634, n__10636)
                                }else {
                                  return f__10620.call(null, a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634, n__10636)
                                }
                              }else {
                                var o__10638 = cljs.core._first.call(null, args__10637);
                                var args__10639 = cljs.core._rest.call(null, args__10637);
                                if(argc === 15) {
                                  if(f__10620.cljs$lang$arity$15) {
                                    return f__10620.cljs$lang$arity$15(a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634, n__10636, o__10638)
                                  }else {
                                    return f__10620.call(null, a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634, n__10636, o__10638)
                                  }
                                }else {
                                  var p__10640 = cljs.core._first.call(null, args__10639);
                                  var args__10641 = cljs.core._rest.call(null, args__10639);
                                  if(argc === 16) {
                                    if(f__10620.cljs$lang$arity$16) {
                                      return f__10620.cljs$lang$arity$16(a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634, n__10636, o__10638, p__10640)
                                    }else {
                                      return f__10620.call(null, a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634, n__10636, o__10638, p__10640)
                                    }
                                  }else {
                                    var q__10642 = cljs.core._first.call(null, args__10641);
                                    var args__10643 = cljs.core._rest.call(null, args__10641);
                                    if(argc === 17) {
                                      if(f__10620.cljs$lang$arity$17) {
                                        return f__10620.cljs$lang$arity$17(a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634, n__10636, o__10638, p__10640, q__10642)
                                      }else {
                                        return f__10620.call(null, a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634, n__10636, o__10638, p__10640, q__10642)
                                      }
                                    }else {
                                      var r__10644 = cljs.core._first.call(null, args__10643);
                                      var args__10645 = cljs.core._rest.call(null, args__10643);
                                      if(argc === 18) {
                                        if(f__10620.cljs$lang$arity$18) {
                                          return f__10620.cljs$lang$arity$18(a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634, n__10636, o__10638, p__10640, q__10642, r__10644)
                                        }else {
                                          return f__10620.call(null, a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634, n__10636, o__10638, p__10640, q__10642, r__10644)
                                        }
                                      }else {
                                        var s__10646 = cljs.core._first.call(null, args__10645);
                                        var args__10647 = cljs.core._rest.call(null, args__10645);
                                        if(argc === 19) {
                                          if(f__10620.cljs$lang$arity$19) {
                                            return f__10620.cljs$lang$arity$19(a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634, n__10636, o__10638, p__10640, q__10642, r__10644, s__10646)
                                          }else {
                                            return f__10620.call(null, a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634, n__10636, o__10638, p__10640, q__10642, r__10644, s__10646)
                                          }
                                        }else {
                                          var t__10648 = cljs.core._first.call(null, args__10647);
                                          var args__10649 = cljs.core._rest.call(null, args__10647);
                                          if(argc === 20) {
                                            if(f__10620.cljs$lang$arity$20) {
                                              return f__10620.cljs$lang$arity$20(a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634, n__10636, o__10638, p__10640, q__10642, r__10644, s__10646, t__10648)
                                            }else {
                                              return f__10620.call(null, a__10610, b__10612, c__10614, d__10616, e__10618, f__10620, g__10622, h__10624, i__10626, j__10628, k__10630, l__10632, m__10634, n__10636, o__10638, p__10640, q__10642, r__10644, s__10646, t__10648)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__10664 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__10665 = cljs.core.bounded_count.call(null, args, fixed_arity__10664 + 1);
      if(bc__10665 <= fixed_arity__10664) {
        return cljs.core.apply_to.call(null, f, bc__10665, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__10666 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__10667 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__10668 = cljs.core.bounded_count.call(null, arglist__10666, fixed_arity__10667 + 1);
      if(bc__10668 <= fixed_arity__10667) {
        return cljs.core.apply_to.call(null, f, bc__10668, arglist__10666)
      }else {
        return f.cljs$lang$applyTo(arglist__10666)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__10666))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__10669 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__10670 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__10671 = cljs.core.bounded_count.call(null, arglist__10669, fixed_arity__10670 + 1);
      if(bc__10671 <= fixed_arity__10670) {
        return cljs.core.apply_to.call(null, f, bc__10671, arglist__10669)
      }else {
        return f.cljs$lang$applyTo(arglist__10669)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__10669))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__10672 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__10673 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__10674 = cljs.core.bounded_count.call(null, arglist__10672, fixed_arity__10673 + 1);
      if(bc__10674 <= fixed_arity__10673) {
        return cljs.core.apply_to.call(null, f, bc__10674, arglist__10672)
      }else {
        return f.cljs$lang$applyTo(arglist__10672)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__10672))
    }
  };
  var apply__6 = function() {
    var G__10678__delegate = function(f, a, b, c, d, args) {
      var arglist__10675 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__10676 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__10677 = cljs.core.bounded_count.call(null, arglist__10675, fixed_arity__10676 + 1);
        if(bc__10677 <= fixed_arity__10676) {
          return cljs.core.apply_to.call(null, f, bc__10677, arglist__10675)
        }else {
          return f.cljs$lang$applyTo(arglist__10675)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__10675))
      }
    };
    var G__10678 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__10678__delegate.call(this, f, a, b, c, d, args)
    };
    G__10678.cljs$lang$maxFixedArity = 5;
    G__10678.cljs$lang$applyTo = function(arglist__10679) {
      var f = cljs.core.first(arglist__10679);
      var a = cljs.core.first(cljs.core.next(arglist__10679));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10679)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10679))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10679)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10679)))));
      return G__10678__delegate(f, a, b, c, d, args)
    };
    G__10678.cljs$lang$arity$variadic = G__10678__delegate;
    return G__10678
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__10680) {
    var obj = cljs.core.first(arglist__10680);
    var f = cljs.core.first(cljs.core.next(arglist__10680));
    var args = cljs.core.rest(cljs.core.next(arglist__10680));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__10681__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__10681 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10681__delegate.call(this, x, y, more)
    };
    G__10681.cljs$lang$maxFixedArity = 2;
    G__10681.cljs$lang$applyTo = function(arglist__10682) {
      var x = cljs.core.first(arglist__10682);
      var y = cljs.core.first(cljs.core.next(arglist__10682));
      var more = cljs.core.rest(cljs.core.next(arglist__10682));
      return G__10681__delegate(x, y, more)
    };
    G__10681.cljs$lang$arity$variadic = G__10681__delegate;
    return G__10681
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__10683 = pred;
        var G__10684 = cljs.core.next.call(null, coll);
        pred = G__10683;
        coll = G__10684;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3943__auto____10686 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3943__auto____10686)) {
        return or__3943__auto____10686
      }else {
        var G__10687 = pred;
        var G__10688 = cljs.core.next.call(null, coll);
        pred = G__10687;
        coll = G__10688;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__10689 = null;
    var G__10689__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__10689__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__10689__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__10689__3 = function() {
      var G__10690__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__10690 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__10690__delegate.call(this, x, y, zs)
      };
      G__10690.cljs$lang$maxFixedArity = 2;
      G__10690.cljs$lang$applyTo = function(arglist__10691) {
        var x = cljs.core.first(arglist__10691);
        var y = cljs.core.first(cljs.core.next(arglist__10691));
        var zs = cljs.core.rest(cljs.core.next(arglist__10691));
        return G__10690__delegate(x, y, zs)
      };
      G__10690.cljs$lang$arity$variadic = G__10690__delegate;
      return G__10690
    }();
    G__10689 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__10689__0.call(this);
        case 1:
          return G__10689__1.call(this, x);
        case 2:
          return G__10689__2.call(this, x, y);
        default:
          return G__10689__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__10689.cljs$lang$maxFixedArity = 2;
    G__10689.cljs$lang$applyTo = G__10689__3.cljs$lang$applyTo;
    return G__10689
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__10692__delegate = function(args) {
      return x
    };
    var G__10692 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10692__delegate.call(this, args)
    };
    G__10692.cljs$lang$maxFixedArity = 0;
    G__10692.cljs$lang$applyTo = function(arglist__10693) {
      var args = cljs.core.seq(arglist__10693);
      return G__10692__delegate(args)
    };
    G__10692.cljs$lang$arity$variadic = G__10692__delegate;
    return G__10692
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__10700 = null;
      var G__10700__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__10700__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__10700__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__10700__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__10700__4 = function() {
        var G__10701__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__10701 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10701__delegate.call(this, x, y, z, args)
        };
        G__10701.cljs$lang$maxFixedArity = 3;
        G__10701.cljs$lang$applyTo = function(arglist__10702) {
          var x = cljs.core.first(arglist__10702);
          var y = cljs.core.first(cljs.core.next(arglist__10702));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10702)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10702)));
          return G__10701__delegate(x, y, z, args)
        };
        G__10701.cljs$lang$arity$variadic = G__10701__delegate;
        return G__10701
      }();
      G__10700 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10700__0.call(this);
          case 1:
            return G__10700__1.call(this, x);
          case 2:
            return G__10700__2.call(this, x, y);
          case 3:
            return G__10700__3.call(this, x, y, z);
          default:
            return G__10700__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10700.cljs$lang$maxFixedArity = 3;
      G__10700.cljs$lang$applyTo = G__10700__4.cljs$lang$applyTo;
      return G__10700
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__10703 = null;
      var G__10703__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__10703__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__10703__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__10703__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__10703__4 = function() {
        var G__10704__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__10704 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10704__delegate.call(this, x, y, z, args)
        };
        G__10704.cljs$lang$maxFixedArity = 3;
        G__10704.cljs$lang$applyTo = function(arglist__10705) {
          var x = cljs.core.first(arglist__10705);
          var y = cljs.core.first(cljs.core.next(arglist__10705));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10705)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10705)));
          return G__10704__delegate(x, y, z, args)
        };
        G__10704.cljs$lang$arity$variadic = G__10704__delegate;
        return G__10704
      }();
      G__10703 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10703__0.call(this);
          case 1:
            return G__10703__1.call(this, x);
          case 2:
            return G__10703__2.call(this, x, y);
          case 3:
            return G__10703__3.call(this, x, y, z);
          default:
            return G__10703__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10703.cljs$lang$maxFixedArity = 3;
      G__10703.cljs$lang$applyTo = G__10703__4.cljs$lang$applyTo;
      return G__10703
    }()
  };
  var comp__4 = function() {
    var G__10706__delegate = function(f1, f2, f3, fs) {
      var fs__10697 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__10707__delegate = function(args) {
          var ret__10698 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__10697), args);
          var fs__10699 = cljs.core.next.call(null, fs__10697);
          while(true) {
            if(fs__10699) {
              var G__10708 = cljs.core.first.call(null, fs__10699).call(null, ret__10698);
              var G__10709 = cljs.core.next.call(null, fs__10699);
              ret__10698 = G__10708;
              fs__10699 = G__10709;
              continue
            }else {
              return ret__10698
            }
            break
          }
        };
        var G__10707 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__10707__delegate.call(this, args)
        };
        G__10707.cljs$lang$maxFixedArity = 0;
        G__10707.cljs$lang$applyTo = function(arglist__10710) {
          var args = cljs.core.seq(arglist__10710);
          return G__10707__delegate(args)
        };
        G__10707.cljs$lang$arity$variadic = G__10707__delegate;
        return G__10707
      }()
    };
    var G__10706 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10706__delegate.call(this, f1, f2, f3, fs)
    };
    G__10706.cljs$lang$maxFixedArity = 3;
    G__10706.cljs$lang$applyTo = function(arglist__10711) {
      var f1 = cljs.core.first(arglist__10711);
      var f2 = cljs.core.first(cljs.core.next(arglist__10711));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10711)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10711)));
      return G__10706__delegate(f1, f2, f3, fs)
    };
    G__10706.cljs$lang$arity$variadic = G__10706__delegate;
    return G__10706
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__10712__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__10712 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__10712__delegate.call(this, args)
      };
      G__10712.cljs$lang$maxFixedArity = 0;
      G__10712.cljs$lang$applyTo = function(arglist__10713) {
        var args = cljs.core.seq(arglist__10713);
        return G__10712__delegate(args)
      };
      G__10712.cljs$lang$arity$variadic = G__10712__delegate;
      return G__10712
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__10714__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__10714 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__10714__delegate.call(this, args)
      };
      G__10714.cljs$lang$maxFixedArity = 0;
      G__10714.cljs$lang$applyTo = function(arglist__10715) {
        var args = cljs.core.seq(arglist__10715);
        return G__10714__delegate(args)
      };
      G__10714.cljs$lang$arity$variadic = G__10714__delegate;
      return G__10714
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__10716__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__10716 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__10716__delegate.call(this, args)
      };
      G__10716.cljs$lang$maxFixedArity = 0;
      G__10716.cljs$lang$applyTo = function(arglist__10717) {
        var args = cljs.core.seq(arglist__10717);
        return G__10716__delegate(args)
      };
      G__10716.cljs$lang$arity$variadic = G__10716__delegate;
      return G__10716
    }()
  };
  var partial__5 = function() {
    var G__10718__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__10719__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__10719 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__10719__delegate.call(this, args)
        };
        G__10719.cljs$lang$maxFixedArity = 0;
        G__10719.cljs$lang$applyTo = function(arglist__10720) {
          var args = cljs.core.seq(arglist__10720);
          return G__10719__delegate(args)
        };
        G__10719.cljs$lang$arity$variadic = G__10719__delegate;
        return G__10719
      }()
    };
    var G__10718 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__10718__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__10718.cljs$lang$maxFixedArity = 4;
    G__10718.cljs$lang$applyTo = function(arglist__10721) {
      var f = cljs.core.first(arglist__10721);
      var arg1 = cljs.core.first(cljs.core.next(arglist__10721));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10721)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10721))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10721))));
      return G__10718__delegate(f, arg1, arg2, arg3, more)
    };
    G__10718.cljs$lang$arity$variadic = G__10718__delegate;
    return G__10718
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__10722 = null;
      var G__10722__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__10722__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__10722__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__10722__4 = function() {
        var G__10723__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__10723 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10723__delegate.call(this, a, b, c, ds)
        };
        G__10723.cljs$lang$maxFixedArity = 3;
        G__10723.cljs$lang$applyTo = function(arglist__10724) {
          var a = cljs.core.first(arglist__10724);
          var b = cljs.core.first(cljs.core.next(arglist__10724));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10724)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10724)));
          return G__10723__delegate(a, b, c, ds)
        };
        G__10723.cljs$lang$arity$variadic = G__10723__delegate;
        return G__10723
      }();
      G__10722 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__10722__1.call(this, a);
          case 2:
            return G__10722__2.call(this, a, b);
          case 3:
            return G__10722__3.call(this, a, b, c);
          default:
            return G__10722__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10722.cljs$lang$maxFixedArity = 3;
      G__10722.cljs$lang$applyTo = G__10722__4.cljs$lang$applyTo;
      return G__10722
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__10725 = null;
      var G__10725__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__10725__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__10725__4 = function() {
        var G__10726__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__10726 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10726__delegate.call(this, a, b, c, ds)
        };
        G__10726.cljs$lang$maxFixedArity = 3;
        G__10726.cljs$lang$applyTo = function(arglist__10727) {
          var a = cljs.core.first(arglist__10727);
          var b = cljs.core.first(cljs.core.next(arglist__10727));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10727)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10727)));
          return G__10726__delegate(a, b, c, ds)
        };
        G__10726.cljs$lang$arity$variadic = G__10726__delegate;
        return G__10726
      }();
      G__10725 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__10725__2.call(this, a, b);
          case 3:
            return G__10725__3.call(this, a, b, c);
          default:
            return G__10725__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10725.cljs$lang$maxFixedArity = 3;
      G__10725.cljs$lang$applyTo = G__10725__4.cljs$lang$applyTo;
      return G__10725
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__10728 = null;
      var G__10728__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__10728__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__10728__4 = function() {
        var G__10729__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__10729 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10729__delegate.call(this, a, b, c, ds)
        };
        G__10729.cljs$lang$maxFixedArity = 3;
        G__10729.cljs$lang$applyTo = function(arglist__10730) {
          var a = cljs.core.first(arglist__10730);
          var b = cljs.core.first(cljs.core.next(arglist__10730));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10730)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10730)));
          return G__10729__delegate(a, b, c, ds)
        };
        G__10729.cljs$lang$arity$variadic = G__10729__delegate;
        return G__10729
      }();
      G__10728 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__10728__2.call(this, a, b);
          case 3:
            return G__10728__3.call(this, a, b, c);
          default:
            return G__10728__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10728.cljs$lang$maxFixedArity = 3;
      G__10728.cljs$lang$applyTo = G__10728__4.cljs$lang$applyTo;
      return G__10728
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__10746 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____10754 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____10754) {
        var s__10755 = temp__4092__auto____10754;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__10755)) {
          var c__10756 = cljs.core.chunk_first.call(null, s__10755);
          var size__10757 = cljs.core.count.call(null, c__10756);
          var b__10758 = cljs.core.chunk_buffer.call(null, size__10757);
          var n__3933__auto____10759 = size__10757;
          var i__10760 = 0;
          while(true) {
            if(i__10760 < n__3933__auto____10759) {
              cljs.core.chunk_append.call(null, b__10758, f.call(null, idx + i__10760, cljs.core._nth.call(null, c__10756, i__10760)));
              var G__10761 = i__10760 + 1;
              i__10760 = G__10761;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10758), mapi.call(null, idx + size__10757, cljs.core.chunk_rest.call(null, s__10755)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__10755)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__10755)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__10746.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____10771 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____10771) {
      var s__10772 = temp__4092__auto____10771;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__10772)) {
        var c__10773 = cljs.core.chunk_first.call(null, s__10772);
        var size__10774 = cljs.core.count.call(null, c__10773);
        var b__10775 = cljs.core.chunk_buffer.call(null, size__10774);
        var n__3933__auto____10776 = size__10774;
        var i__10777 = 0;
        while(true) {
          if(i__10777 < n__3933__auto____10776) {
            var x__10778 = f.call(null, cljs.core._nth.call(null, c__10773, i__10777));
            if(x__10778 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__10775, x__10778)
            }
            var G__10780 = i__10777 + 1;
            i__10777 = G__10780;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10775), keep.call(null, f, cljs.core.chunk_rest.call(null, s__10772)))
      }else {
        var x__10779 = f.call(null, cljs.core.first.call(null, s__10772));
        if(x__10779 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__10772))
        }else {
          return cljs.core.cons.call(null, x__10779, keep.call(null, f, cljs.core.rest.call(null, s__10772)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__10806 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____10816 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____10816) {
        var s__10817 = temp__4092__auto____10816;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__10817)) {
          var c__10818 = cljs.core.chunk_first.call(null, s__10817);
          var size__10819 = cljs.core.count.call(null, c__10818);
          var b__10820 = cljs.core.chunk_buffer.call(null, size__10819);
          var n__3933__auto____10821 = size__10819;
          var i__10822 = 0;
          while(true) {
            if(i__10822 < n__3933__auto____10821) {
              var x__10823 = f.call(null, idx + i__10822, cljs.core._nth.call(null, c__10818, i__10822));
              if(x__10823 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__10820, x__10823)
              }
              var G__10825 = i__10822 + 1;
              i__10822 = G__10825;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10820), keepi.call(null, idx + size__10819, cljs.core.chunk_rest.call(null, s__10817)))
        }else {
          var x__10824 = f.call(null, idx, cljs.core.first.call(null, s__10817));
          if(x__10824 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__10817))
          }else {
            return cljs.core.cons.call(null, x__10824, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__10817)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__10806.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____10911 = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto____10911)) {
            return p.call(null, y)
          }else {
            return and__3941__auto____10911
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____10912 = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto____10912)) {
            var and__3941__auto____10913 = p.call(null, y);
            if(cljs.core.truth_(and__3941__auto____10913)) {
              return p.call(null, z)
            }else {
              return and__3941__auto____10913
            }
          }else {
            return and__3941__auto____10912
          }
        }())
      };
      var ep1__4 = function() {
        var G__10982__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto____10914 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto____10914)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3941__auto____10914
            }
          }())
        };
        var G__10982 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10982__delegate.call(this, x, y, z, args)
        };
        G__10982.cljs$lang$maxFixedArity = 3;
        G__10982.cljs$lang$applyTo = function(arglist__10983) {
          var x = cljs.core.first(arglist__10983);
          var y = cljs.core.first(cljs.core.next(arglist__10983));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10983)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10983)));
          return G__10982__delegate(x, y, z, args)
        };
        G__10982.cljs$lang$arity$variadic = G__10982__delegate;
        return G__10982
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____10926 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____10926)) {
            return p2.call(null, x)
          }else {
            return and__3941__auto____10926
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____10927 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____10927)) {
            var and__3941__auto____10928 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____10928)) {
              var and__3941__auto____10929 = p2.call(null, x);
              if(cljs.core.truth_(and__3941__auto____10929)) {
                return p2.call(null, y)
              }else {
                return and__3941__auto____10929
              }
            }else {
              return and__3941__auto____10928
            }
          }else {
            return and__3941__auto____10927
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____10930 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____10930)) {
            var and__3941__auto____10931 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____10931)) {
              var and__3941__auto____10932 = p1.call(null, z);
              if(cljs.core.truth_(and__3941__auto____10932)) {
                var and__3941__auto____10933 = p2.call(null, x);
                if(cljs.core.truth_(and__3941__auto____10933)) {
                  var and__3941__auto____10934 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____10934)) {
                    return p2.call(null, z)
                  }else {
                    return and__3941__auto____10934
                  }
                }else {
                  return and__3941__auto____10933
                }
              }else {
                return and__3941__auto____10932
              }
            }else {
              return and__3941__auto____10931
            }
          }else {
            return and__3941__auto____10930
          }
        }())
      };
      var ep2__4 = function() {
        var G__10984__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto____10935 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto____10935)) {
              return cljs.core.every_QMARK_.call(null, function(p1__10781_SHARP_) {
                var and__3941__auto____10936 = p1.call(null, p1__10781_SHARP_);
                if(cljs.core.truth_(and__3941__auto____10936)) {
                  return p2.call(null, p1__10781_SHARP_)
                }else {
                  return and__3941__auto____10936
                }
              }, args)
            }else {
              return and__3941__auto____10935
            }
          }())
        };
        var G__10984 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10984__delegate.call(this, x, y, z, args)
        };
        G__10984.cljs$lang$maxFixedArity = 3;
        G__10984.cljs$lang$applyTo = function(arglist__10985) {
          var x = cljs.core.first(arglist__10985);
          var y = cljs.core.first(cljs.core.next(arglist__10985));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10985)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10985)));
          return G__10984__delegate(x, y, z, args)
        };
        G__10984.cljs$lang$arity$variadic = G__10984__delegate;
        return G__10984
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____10955 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____10955)) {
            var and__3941__auto____10956 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____10956)) {
              return p3.call(null, x)
            }else {
              return and__3941__auto____10956
            }
          }else {
            return and__3941__auto____10955
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____10957 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____10957)) {
            var and__3941__auto____10958 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____10958)) {
              var and__3941__auto____10959 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____10959)) {
                var and__3941__auto____10960 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____10960)) {
                  var and__3941__auto____10961 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____10961)) {
                    return p3.call(null, y)
                  }else {
                    return and__3941__auto____10961
                  }
                }else {
                  return and__3941__auto____10960
                }
              }else {
                return and__3941__auto____10959
              }
            }else {
              return and__3941__auto____10958
            }
          }else {
            return and__3941__auto____10957
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____10962 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____10962)) {
            var and__3941__auto____10963 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____10963)) {
              var and__3941__auto____10964 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____10964)) {
                var and__3941__auto____10965 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____10965)) {
                  var and__3941__auto____10966 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____10966)) {
                    var and__3941__auto____10967 = p3.call(null, y);
                    if(cljs.core.truth_(and__3941__auto____10967)) {
                      var and__3941__auto____10968 = p1.call(null, z);
                      if(cljs.core.truth_(and__3941__auto____10968)) {
                        var and__3941__auto____10969 = p2.call(null, z);
                        if(cljs.core.truth_(and__3941__auto____10969)) {
                          return p3.call(null, z)
                        }else {
                          return and__3941__auto____10969
                        }
                      }else {
                        return and__3941__auto____10968
                      }
                    }else {
                      return and__3941__auto____10967
                    }
                  }else {
                    return and__3941__auto____10966
                  }
                }else {
                  return and__3941__auto____10965
                }
              }else {
                return and__3941__auto____10964
              }
            }else {
              return and__3941__auto____10963
            }
          }else {
            return and__3941__auto____10962
          }
        }())
      };
      var ep3__4 = function() {
        var G__10986__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto____10970 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto____10970)) {
              return cljs.core.every_QMARK_.call(null, function(p1__10782_SHARP_) {
                var and__3941__auto____10971 = p1.call(null, p1__10782_SHARP_);
                if(cljs.core.truth_(and__3941__auto____10971)) {
                  var and__3941__auto____10972 = p2.call(null, p1__10782_SHARP_);
                  if(cljs.core.truth_(and__3941__auto____10972)) {
                    return p3.call(null, p1__10782_SHARP_)
                  }else {
                    return and__3941__auto____10972
                  }
                }else {
                  return and__3941__auto____10971
                }
              }, args)
            }else {
              return and__3941__auto____10970
            }
          }())
        };
        var G__10986 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10986__delegate.call(this, x, y, z, args)
        };
        G__10986.cljs$lang$maxFixedArity = 3;
        G__10986.cljs$lang$applyTo = function(arglist__10987) {
          var x = cljs.core.first(arglist__10987);
          var y = cljs.core.first(cljs.core.next(arglist__10987));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10987)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10987)));
          return G__10986__delegate(x, y, z, args)
        };
        G__10986.cljs$lang$arity$variadic = G__10986__delegate;
        return G__10986
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__10988__delegate = function(p1, p2, p3, ps) {
      var ps__10973 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__10783_SHARP_) {
            return p1__10783_SHARP_.call(null, x)
          }, ps__10973)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__10784_SHARP_) {
            var and__3941__auto____10978 = p1__10784_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto____10978)) {
              return p1__10784_SHARP_.call(null, y)
            }else {
              return and__3941__auto____10978
            }
          }, ps__10973)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__10785_SHARP_) {
            var and__3941__auto____10979 = p1__10785_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto____10979)) {
              var and__3941__auto____10980 = p1__10785_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3941__auto____10980)) {
                return p1__10785_SHARP_.call(null, z)
              }else {
                return and__3941__auto____10980
              }
            }else {
              return and__3941__auto____10979
            }
          }, ps__10973)
        };
        var epn__4 = function() {
          var G__10989__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3941__auto____10981 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3941__auto____10981)) {
                return cljs.core.every_QMARK_.call(null, function(p1__10786_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__10786_SHARP_, args)
                }, ps__10973)
              }else {
                return and__3941__auto____10981
              }
            }())
          };
          var G__10989 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10989__delegate.call(this, x, y, z, args)
          };
          G__10989.cljs$lang$maxFixedArity = 3;
          G__10989.cljs$lang$applyTo = function(arglist__10990) {
            var x = cljs.core.first(arglist__10990);
            var y = cljs.core.first(cljs.core.next(arglist__10990));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10990)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10990)));
            return G__10989__delegate(x, y, z, args)
          };
          G__10989.cljs$lang$arity$variadic = G__10989__delegate;
          return G__10989
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__10988 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10988__delegate.call(this, p1, p2, p3, ps)
    };
    G__10988.cljs$lang$maxFixedArity = 3;
    G__10988.cljs$lang$applyTo = function(arglist__10991) {
      var p1 = cljs.core.first(arglist__10991);
      var p2 = cljs.core.first(cljs.core.next(arglist__10991));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10991)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10991)));
      return G__10988__delegate(p1, p2, p3, ps)
    };
    G__10988.cljs$lang$arity$variadic = G__10988__delegate;
    return G__10988
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3943__auto____11072 = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto____11072)) {
          return or__3943__auto____11072
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3943__auto____11073 = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto____11073)) {
          return or__3943__auto____11073
        }else {
          var or__3943__auto____11074 = p.call(null, y);
          if(cljs.core.truth_(or__3943__auto____11074)) {
            return or__3943__auto____11074
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__11143__delegate = function(x, y, z, args) {
          var or__3943__auto____11075 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto____11075)) {
            return or__3943__auto____11075
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__11143 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11143__delegate.call(this, x, y, z, args)
        };
        G__11143.cljs$lang$maxFixedArity = 3;
        G__11143.cljs$lang$applyTo = function(arglist__11144) {
          var x = cljs.core.first(arglist__11144);
          var y = cljs.core.first(cljs.core.next(arglist__11144));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11144)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11144)));
          return G__11143__delegate(x, y, z, args)
        };
        G__11143.cljs$lang$arity$variadic = G__11143__delegate;
        return G__11143
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3943__auto____11087 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____11087)) {
          return or__3943__auto____11087
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3943__auto____11088 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____11088)) {
          return or__3943__auto____11088
        }else {
          var or__3943__auto____11089 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____11089)) {
            return or__3943__auto____11089
          }else {
            var or__3943__auto____11090 = p2.call(null, x);
            if(cljs.core.truth_(or__3943__auto____11090)) {
              return or__3943__auto____11090
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3943__auto____11091 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____11091)) {
          return or__3943__auto____11091
        }else {
          var or__3943__auto____11092 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____11092)) {
            return or__3943__auto____11092
          }else {
            var or__3943__auto____11093 = p1.call(null, z);
            if(cljs.core.truth_(or__3943__auto____11093)) {
              return or__3943__auto____11093
            }else {
              var or__3943__auto____11094 = p2.call(null, x);
              if(cljs.core.truth_(or__3943__auto____11094)) {
                return or__3943__auto____11094
              }else {
                var or__3943__auto____11095 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____11095)) {
                  return or__3943__auto____11095
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__11145__delegate = function(x, y, z, args) {
          var or__3943__auto____11096 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto____11096)) {
            return or__3943__auto____11096
          }else {
            return cljs.core.some.call(null, function(p1__10826_SHARP_) {
              var or__3943__auto____11097 = p1.call(null, p1__10826_SHARP_);
              if(cljs.core.truth_(or__3943__auto____11097)) {
                return or__3943__auto____11097
              }else {
                return p2.call(null, p1__10826_SHARP_)
              }
            }, args)
          }
        };
        var G__11145 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11145__delegate.call(this, x, y, z, args)
        };
        G__11145.cljs$lang$maxFixedArity = 3;
        G__11145.cljs$lang$applyTo = function(arglist__11146) {
          var x = cljs.core.first(arglist__11146);
          var y = cljs.core.first(cljs.core.next(arglist__11146));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11146)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11146)));
          return G__11145__delegate(x, y, z, args)
        };
        G__11145.cljs$lang$arity$variadic = G__11145__delegate;
        return G__11145
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3943__auto____11116 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____11116)) {
          return or__3943__auto____11116
        }else {
          var or__3943__auto____11117 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____11117)) {
            return or__3943__auto____11117
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3943__auto____11118 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____11118)) {
          return or__3943__auto____11118
        }else {
          var or__3943__auto____11119 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____11119)) {
            return or__3943__auto____11119
          }else {
            var or__3943__auto____11120 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____11120)) {
              return or__3943__auto____11120
            }else {
              var or__3943__auto____11121 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____11121)) {
                return or__3943__auto____11121
              }else {
                var or__3943__auto____11122 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____11122)) {
                  return or__3943__auto____11122
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3943__auto____11123 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____11123)) {
          return or__3943__auto____11123
        }else {
          var or__3943__auto____11124 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____11124)) {
            return or__3943__auto____11124
          }else {
            var or__3943__auto____11125 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____11125)) {
              return or__3943__auto____11125
            }else {
              var or__3943__auto____11126 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____11126)) {
                return or__3943__auto____11126
              }else {
                var or__3943__auto____11127 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____11127)) {
                  return or__3943__auto____11127
                }else {
                  var or__3943__auto____11128 = p3.call(null, y);
                  if(cljs.core.truth_(or__3943__auto____11128)) {
                    return or__3943__auto____11128
                  }else {
                    var or__3943__auto____11129 = p1.call(null, z);
                    if(cljs.core.truth_(or__3943__auto____11129)) {
                      return or__3943__auto____11129
                    }else {
                      var or__3943__auto____11130 = p2.call(null, z);
                      if(cljs.core.truth_(or__3943__auto____11130)) {
                        return or__3943__auto____11130
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__11147__delegate = function(x, y, z, args) {
          var or__3943__auto____11131 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto____11131)) {
            return or__3943__auto____11131
          }else {
            return cljs.core.some.call(null, function(p1__10827_SHARP_) {
              var or__3943__auto____11132 = p1.call(null, p1__10827_SHARP_);
              if(cljs.core.truth_(or__3943__auto____11132)) {
                return or__3943__auto____11132
              }else {
                var or__3943__auto____11133 = p2.call(null, p1__10827_SHARP_);
                if(cljs.core.truth_(or__3943__auto____11133)) {
                  return or__3943__auto____11133
                }else {
                  return p3.call(null, p1__10827_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__11147 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11147__delegate.call(this, x, y, z, args)
        };
        G__11147.cljs$lang$maxFixedArity = 3;
        G__11147.cljs$lang$applyTo = function(arglist__11148) {
          var x = cljs.core.first(arglist__11148);
          var y = cljs.core.first(cljs.core.next(arglist__11148));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11148)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11148)));
          return G__11147__delegate(x, y, z, args)
        };
        G__11147.cljs$lang$arity$variadic = G__11147__delegate;
        return G__11147
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__11149__delegate = function(p1, p2, p3, ps) {
      var ps__11134 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__10828_SHARP_) {
            return p1__10828_SHARP_.call(null, x)
          }, ps__11134)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__10829_SHARP_) {
            var or__3943__auto____11139 = p1__10829_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto____11139)) {
              return or__3943__auto____11139
            }else {
              return p1__10829_SHARP_.call(null, y)
            }
          }, ps__11134)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__10830_SHARP_) {
            var or__3943__auto____11140 = p1__10830_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto____11140)) {
              return or__3943__auto____11140
            }else {
              var or__3943__auto____11141 = p1__10830_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3943__auto____11141)) {
                return or__3943__auto____11141
              }else {
                return p1__10830_SHARP_.call(null, z)
              }
            }
          }, ps__11134)
        };
        var spn__4 = function() {
          var G__11150__delegate = function(x, y, z, args) {
            var or__3943__auto____11142 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3943__auto____11142)) {
              return or__3943__auto____11142
            }else {
              return cljs.core.some.call(null, function(p1__10831_SHARP_) {
                return cljs.core.some.call(null, p1__10831_SHARP_, args)
              }, ps__11134)
            }
          };
          var G__11150 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__11150__delegate.call(this, x, y, z, args)
          };
          G__11150.cljs$lang$maxFixedArity = 3;
          G__11150.cljs$lang$applyTo = function(arglist__11151) {
            var x = cljs.core.first(arglist__11151);
            var y = cljs.core.first(cljs.core.next(arglist__11151));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11151)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11151)));
            return G__11150__delegate(x, y, z, args)
          };
          G__11150.cljs$lang$arity$variadic = G__11150__delegate;
          return G__11150
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__11149 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11149__delegate.call(this, p1, p2, p3, ps)
    };
    G__11149.cljs$lang$maxFixedArity = 3;
    G__11149.cljs$lang$applyTo = function(arglist__11152) {
      var p1 = cljs.core.first(arglist__11152);
      var p2 = cljs.core.first(cljs.core.next(arglist__11152));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11152)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11152)));
      return G__11149__delegate(p1, p2, p3, ps)
    };
    G__11149.cljs$lang$arity$variadic = G__11149__delegate;
    return G__11149
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____11171 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____11171) {
        var s__11172 = temp__4092__auto____11171;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__11172)) {
          var c__11173 = cljs.core.chunk_first.call(null, s__11172);
          var size__11174 = cljs.core.count.call(null, c__11173);
          var b__11175 = cljs.core.chunk_buffer.call(null, size__11174);
          var n__3933__auto____11176 = size__11174;
          var i__11177 = 0;
          while(true) {
            if(i__11177 < n__3933__auto____11176) {
              cljs.core.chunk_append.call(null, b__11175, f.call(null, cljs.core._nth.call(null, c__11173, i__11177)));
              var G__11189 = i__11177 + 1;
              i__11177 = G__11189;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11175), map.call(null, f, cljs.core.chunk_rest.call(null, s__11172)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__11172)), map.call(null, f, cljs.core.rest.call(null, s__11172)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__11178 = cljs.core.seq.call(null, c1);
      var s2__11179 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto____11180 = s1__11178;
        if(and__3941__auto____11180) {
          return s2__11179
        }else {
          return and__3941__auto____11180
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__11178), cljs.core.first.call(null, s2__11179)), map.call(null, f, cljs.core.rest.call(null, s1__11178), cljs.core.rest.call(null, s2__11179)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__11181 = cljs.core.seq.call(null, c1);
      var s2__11182 = cljs.core.seq.call(null, c2);
      var s3__11183 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3941__auto____11184 = s1__11181;
        if(and__3941__auto____11184) {
          var and__3941__auto____11185 = s2__11182;
          if(and__3941__auto____11185) {
            return s3__11183
          }else {
            return and__3941__auto____11185
          }
        }else {
          return and__3941__auto____11184
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__11181), cljs.core.first.call(null, s2__11182), cljs.core.first.call(null, s3__11183)), map.call(null, f, cljs.core.rest.call(null, s1__11181), cljs.core.rest.call(null, s2__11182), cljs.core.rest.call(null, s3__11183)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__11190__delegate = function(f, c1, c2, c3, colls) {
      var step__11188 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__11187 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__11187)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__11187), step.call(null, map.call(null, cljs.core.rest, ss__11187)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__10992_SHARP_) {
        return cljs.core.apply.call(null, f, p1__10992_SHARP_)
      }, step__11188.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__11190 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__11190__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__11190.cljs$lang$maxFixedArity = 4;
    G__11190.cljs$lang$applyTo = function(arglist__11191) {
      var f = cljs.core.first(arglist__11191);
      var c1 = cljs.core.first(cljs.core.next(arglist__11191));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11191)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11191))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11191))));
      return G__11190__delegate(f, c1, c2, c3, colls)
    };
    G__11190.cljs$lang$arity$variadic = G__11190__delegate;
    return G__11190
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__4092__auto____11194 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____11194) {
        var s__11195 = temp__4092__auto____11194;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__11195), take.call(null, n - 1, cljs.core.rest.call(null, s__11195)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__11201 = function(n, coll) {
    while(true) {
      var s__11199 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3941__auto____11200 = n > 0;
        if(and__3941__auto____11200) {
          return s__11199
        }else {
          return and__3941__auto____11200
        }
      }())) {
        var G__11202 = n - 1;
        var G__11203 = cljs.core.rest.call(null, s__11199);
        n = G__11202;
        coll = G__11203;
        continue
      }else {
        return s__11199
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__11201.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__11206 = cljs.core.seq.call(null, coll);
  var lead__11207 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__11207) {
      var G__11208 = cljs.core.next.call(null, s__11206);
      var G__11209 = cljs.core.next.call(null, lead__11207);
      s__11206 = G__11208;
      lead__11207 = G__11209;
      continue
    }else {
      return s__11206
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__11215 = function(pred, coll) {
    while(true) {
      var s__11213 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3941__auto____11214 = s__11213;
        if(and__3941__auto____11214) {
          return pred.call(null, cljs.core.first.call(null, s__11213))
        }else {
          return and__3941__auto____11214
        }
      }())) {
        var G__11216 = pred;
        var G__11217 = cljs.core.rest.call(null, s__11213);
        pred = G__11216;
        coll = G__11217;
        continue
      }else {
        return s__11213
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__11215.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____11220 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____11220) {
      var s__11221 = temp__4092__auto____11220;
      return cljs.core.concat.call(null, s__11221, cycle.call(null, s__11221))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__11226 = cljs.core.seq.call(null, c1);
      var s2__11227 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto____11228 = s1__11226;
        if(and__3941__auto____11228) {
          return s2__11227
        }else {
          return and__3941__auto____11228
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__11226), cljs.core.cons.call(null, cljs.core.first.call(null, s2__11227), interleave.call(null, cljs.core.rest.call(null, s1__11226), cljs.core.rest.call(null, s2__11227))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__11230__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__11229 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__11229)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__11229), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__11229)))
        }else {
          return null
        }
      }, null)
    };
    var G__11230 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11230__delegate.call(this, c1, c2, colls)
    };
    G__11230.cljs$lang$maxFixedArity = 2;
    G__11230.cljs$lang$applyTo = function(arglist__11231) {
      var c1 = cljs.core.first(arglist__11231);
      var c2 = cljs.core.first(cljs.core.next(arglist__11231));
      var colls = cljs.core.rest(cljs.core.next(arglist__11231));
      return G__11230__delegate(c1, c2, colls)
    };
    G__11230.cljs$lang$arity$variadic = G__11230__delegate;
    return G__11230
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__11241 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto____11239 = cljs.core.seq.call(null, coll);
      if(temp__4090__auto____11239) {
        var coll__11240 = temp__4090__auto____11239;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__11240), cat.call(null, cljs.core.rest.call(null, coll__11240), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__11241.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__11242__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__11242 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11242__delegate.call(this, f, coll, colls)
    };
    G__11242.cljs$lang$maxFixedArity = 2;
    G__11242.cljs$lang$applyTo = function(arglist__11243) {
      var f = cljs.core.first(arglist__11243);
      var coll = cljs.core.first(cljs.core.next(arglist__11243));
      var colls = cljs.core.rest(cljs.core.next(arglist__11243));
      return G__11242__delegate(f, coll, colls)
    };
    G__11242.cljs$lang$arity$variadic = G__11242__delegate;
    return G__11242
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____11253 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____11253) {
      var s__11254 = temp__4092__auto____11253;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__11254)) {
        var c__11255 = cljs.core.chunk_first.call(null, s__11254);
        var size__11256 = cljs.core.count.call(null, c__11255);
        var b__11257 = cljs.core.chunk_buffer.call(null, size__11256);
        var n__3933__auto____11258 = size__11256;
        var i__11259 = 0;
        while(true) {
          if(i__11259 < n__3933__auto____11258) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__11255, i__11259)))) {
              cljs.core.chunk_append.call(null, b__11257, cljs.core._nth.call(null, c__11255, i__11259))
            }else {
            }
            var G__11262 = i__11259 + 1;
            i__11259 = G__11262;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11257), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__11254)))
      }else {
        var f__11260 = cljs.core.first.call(null, s__11254);
        var r__11261 = cljs.core.rest.call(null, s__11254);
        if(cljs.core.truth_(pred.call(null, f__11260))) {
          return cljs.core.cons.call(null, f__11260, filter.call(null, pred, r__11261))
        }else {
          return filter.call(null, pred, r__11261)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__11265 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__11265.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__11263_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__11263_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__11269__11270 = to;
    if(G__11269__11270) {
      if(function() {
        var or__3943__auto____11271 = G__11269__11270.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3943__auto____11271) {
          return or__3943__auto____11271
        }else {
          return G__11269__11270.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__11269__11270.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__11269__11270)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__11269__11270)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__11272__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__11272 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__11272__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__11272.cljs$lang$maxFixedArity = 4;
    G__11272.cljs$lang$applyTo = function(arglist__11273) {
      var f = cljs.core.first(arglist__11273);
      var c1 = cljs.core.first(cljs.core.next(arglist__11273));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11273)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11273))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11273))));
      return G__11272__delegate(f, c1, c2, c3, colls)
    };
    G__11272.cljs$lang$arity$variadic = G__11272__delegate;
    return G__11272
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____11280 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____11280) {
        var s__11281 = temp__4092__auto____11280;
        var p__11282 = cljs.core.take.call(null, n, s__11281);
        if(n === cljs.core.count.call(null, p__11282)) {
          return cljs.core.cons.call(null, p__11282, partition.call(null, n, step, cljs.core.drop.call(null, step, s__11281)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____11283 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____11283) {
        var s__11284 = temp__4092__auto____11283;
        var p__11285 = cljs.core.take.call(null, n, s__11284);
        if(n === cljs.core.count.call(null, p__11285)) {
          return cljs.core.cons.call(null, p__11285, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__11284)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__11285, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__11290 = cljs.core.lookup_sentinel;
    var m__11291 = m;
    var ks__11292 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__11292) {
        var m__11293 = cljs.core._lookup.call(null, m__11291, cljs.core.first.call(null, ks__11292), sentinel__11290);
        if(sentinel__11290 === m__11293) {
          return not_found
        }else {
          var G__11294 = sentinel__11290;
          var G__11295 = m__11293;
          var G__11296 = cljs.core.next.call(null, ks__11292);
          sentinel__11290 = G__11294;
          m__11291 = G__11295;
          ks__11292 = G__11296;
          continue
        }
      }else {
        return m__11291
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__11297, v) {
  var vec__11302__11303 = p__11297;
  var k__11304 = cljs.core.nth.call(null, vec__11302__11303, 0, null);
  var ks__11305 = cljs.core.nthnext.call(null, vec__11302__11303, 1);
  if(cljs.core.truth_(ks__11305)) {
    return cljs.core.assoc.call(null, m, k__11304, assoc_in.call(null, cljs.core._lookup.call(null, m, k__11304, null), ks__11305, v))
  }else {
    return cljs.core.assoc.call(null, m, k__11304, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__11306, f, args) {
    var vec__11311__11312 = p__11306;
    var k__11313 = cljs.core.nth.call(null, vec__11311__11312, 0, null);
    var ks__11314 = cljs.core.nthnext.call(null, vec__11311__11312, 1);
    if(cljs.core.truth_(ks__11314)) {
      return cljs.core.assoc.call(null, m, k__11313, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__11313, null), ks__11314, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__11313, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__11313, null), args))
    }
  };
  var update_in = function(m, p__11306, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__11306, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__11315) {
    var m = cljs.core.first(arglist__11315);
    var p__11306 = cljs.core.first(cljs.core.next(arglist__11315));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11315)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11315)));
    return update_in__delegate(m, p__11306, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11318 = this;
  var h__3598__auto____11319 = this__11318.__hash;
  if(!(h__3598__auto____11319 == null)) {
    return h__3598__auto____11319
  }else {
    var h__3598__auto____11320 = cljs.core.hash_coll.call(null, coll);
    this__11318.__hash = h__3598__auto____11320;
    return h__3598__auto____11320
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11321 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11322 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11323 = this;
  var new_array__11324 = this__11323.array.slice();
  new_array__11324[k] = v;
  return new cljs.core.Vector(this__11323.meta, new_array__11324, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__11355 = null;
  var G__11355__2 = function(this_sym11325, k) {
    var this__11327 = this;
    var this_sym11325__11328 = this;
    var coll__11329 = this_sym11325__11328;
    return coll__11329.cljs$core$ILookup$_lookup$arity$2(coll__11329, k)
  };
  var G__11355__3 = function(this_sym11326, k, not_found) {
    var this__11327 = this;
    var this_sym11326__11330 = this;
    var coll__11331 = this_sym11326__11330;
    return coll__11331.cljs$core$ILookup$_lookup$arity$3(coll__11331, k, not_found)
  };
  G__11355 = function(this_sym11326, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11355__2.call(this, this_sym11326, k);
      case 3:
        return G__11355__3.call(this, this_sym11326, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11355
}();
cljs.core.Vector.prototype.apply = function(this_sym11316, args11317) {
  var this__11332 = this;
  return this_sym11316.call.apply(this_sym11316, [this_sym11316].concat(args11317.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11333 = this;
  var new_array__11334 = this__11333.array.slice();
  new_array__11334.push(o);
  return new cljs.core.Vector(this__11333.meta, new_array__11334, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__11335 = this;
  var this__11336 = this;
  return cljs.core.pr_str.call(null, this__11336)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__11337 = this;
  return cljs.core.ci_reduce.call(null, this__11337.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__11338 = this;
  return cljs.core.ci_reduce.call(null, this__11338.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11339 = this;
  if(this__11339.array.length > 0) {
    var vector_seq__11340 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__11339.array.length) {
          return cljs.core.cons.call(null, this__11339.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__11340.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11341 = this;
  return this__11341.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__11342 = this;
  var count__11343 = this__11342.array.length;
  if(count__11343 > 0) {
    return this__11342.array[count__11343 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__11344 = this;
  if(this__11344.array.length > 0) {
    var new_array__11345 = this__11344.array.slice();
    new_array__11345.pop();
    return new cljs.core.Vector(this__11344.meta, new_array__11345, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__11346 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11347 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11348 = this;
  return new cljs.core.Vector(meta, this__11348.array, this__11348.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11349 = this;
  return this__11349.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__11350 = this;
  if(function() {
    var and__3941__auto____11351 = 0 <= n;
    if(and__3941__auto____11351) {
      return n < this__11350.array.length
    }else {
      return and__3941__auto____11351
    }
  }()) {
    return this__11350.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__11352 = this;
  if(function() {
    var and__3941__auto____11353 = 0 <= n;
    if(and__3941__auto____11353) {
      return n < this__11352.array.length
    }else {
      return and__3941__auto____11353
    }
  }()) {
    return this__11352.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11354 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__11354.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__3716__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__11357 = pv.cnt;
  if(cnt__11357 < 32) {
    return 0
  }else {
    return cnt__11357 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__11363 = level;
  var ret__11364 = node;
  while(true) {
    if(ll__11363 === 0) {
      return ret__11364
    }else {
      var embed__11365 = ret__11364;
      var r__11366 = cljs.core.pv_fresh_node.call(null, edit);
      var ___11367 = cljs.core.pv_aset.call(null, r__11366, 0, embed__11365);
      var G__11368 = ll__11363 - 5;
      var G__11369 = r__11366;
      ll__11363 = G__11368;
      ret__11364 = G__11369;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__11375 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__11376 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__11375, subidx__11376, tailnode);
    return ret__11375
  }else {
    var child__11377 = cljs.core.pv_aget.call(null, parent, subidx__11376);
    if(!(child__11377 == null)) {
      var node_to_insert__11378 = push_tail.call(null, pv, level - 5, child__11377, tailnode);
      cljs.core.pv_aset.call(null, ret__11375, subidx__11376, node_to_insert__11378);
      return ret__11375
    }else {
      var node_to_insert__11379 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__11375, subidx__11376, node_to_insert__11379);
      return ret__11375
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3941__auto____11383 = 0 <= i;
    if(and__3941__auto____11383) {
      return i < pv.cnt
    }else {
      return and__3941__auto____11383
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__11384 = pv.root;
      var level__11385 = pv.shift;
      while(true) {
        if(level__11385 > 0) {
          var G__11386 = cljs.core.pv_aget.call(null, node__11384, i >>> level__11385 & 31);
          var G__11387 = level__11385 - 5;
          node__11384 = G__11386;
          level__11385 = G__11387;
          continue
        }else {
          return node__11384.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__11390 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__11390, i & 31, val);
    return ret__11390
  }else {
    var subidx__11391 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__11390, subidx__11391, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__11391), i, val));
    return ret__11390
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__11397 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__11398 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__11397));
    if(function() {
      var and__3941__auto____11399 = new_child__11398 == null;
      if(and__3941__auto____11399) {
        return subidx__11397 === 0
      }else {
        return and__3941__auto____11399
      }
    }()) {
      return null
    }else {
      var ret__11400 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__11400, subidx__11397, new_child__11398);
      return ret__11400
    }
  }else {
    if(subidx__11397 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__11401 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__11401, subidx__11397, null);
        return ret__11401
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__11404 = this;
  return new cljs.core.TransientVector(this__11404.cnt, this__11404.shift, cljs.core.tv_editable_root.call(null, this__11404.root), cljs.core.tv_editable_tail.call(null, this__11404.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11405 = this;
  var h__3598__auto____11406 = this__11405.__hash;
  if(!(h__3598__auto____11406 == null)) {
    return h__3598__auto____11406
  }else {
    var h__3598__auto____11407 = cljs.core.hash_coll.call(null, coll);
    this__11405.__hash = h__3598__auto____11407;
    return h__3598__auto____11407
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11408 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11409 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11410 = this;
  if(function() {
    var and__3941__auto____11411 = 0 <= k;
    if(and__3941__auto____11411) {
      return k < this__11410.cnt
    }else {
      return and__3941__auto____11411
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__11412 = this__11410.tail.slice();
      new_tail__11412[k & 31] = v;
      return new cljs.core.PersistentVector(this__11410.meta, this__11410.cnt, this__11410.shift, this__11410.root, new_tail__11412, null)
    }else {
      return new cljs.core.PersistentVector(this__11410.meta, this__11410.cnt, this__11410.shift, cljs.core.do_assoc.call(null, coll, this__11410.shift, this__11410.root, k, v), this__11410.tail, null)
    }
  }else {
    if(k === this__11410.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__11410.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__11460 = null;
  var G__11460__2 = function(this_sym11413, k) {
    var this__11415 = this;
    var this_sym11413__11416 = this;
    var coll__11417 = this_sym11413__11416;
    return coll__11417.cljs$core$ILookup$_lookup$arity$2(coll__11417, k)
  };
  var G__11460__3 = function(this_sym11414, k, not_found) {
    var this__11415 = this;
    var this_sym11414__11418 = this;
    var coll__11419 = this_sym11414__11418;
    return coll__11419.cljs$core$ILookup$_lookup$arity$3(coll__11419, k, not_found)
  };
  G__11460 = function(this_sym11414, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11460__2.call(this, this_sym11414, k);
      case 3:
        return G__11460__3.call(this, this_sym11414, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11460
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym11402, args11403) {
  var this__11420 = this;
  return this_sym11402.call.apply(this_sym11402, [this_sym11402].concat(args11403.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__11421 = this;
  var step_init__11422 = [0, init];
  var i__11423 = 0;
  while(true) {
    if(i__11423 < this__11421.cnt) {
      var arr__11424 = cljs.core.array_for.call(null, v, i__11423);
      var len__11425 = arr__11424.length;
      var init__11429 = function() {
        var j__11426 = 0;
        var init__11427 = step_init__11422[1];
        while(true) {
          if(j__11426 < len__11425) {
            var init__11428 = f.call(null, init__11427, j__11426 + i__11423, arr__11424[j__11426]);
            if(cljs.core.reduced_QMARK_.call(null, init__11428)) {
              return init__11428
            }else {
              var G__11461 = j__11426 + 1;
              var G__11462 = init__11428;
              j__11426 = G__11461;
              init__11427 = G__11462;
              continue
            }
          }else {
            step_init__11422[0] = len__11425;
            step_init__11422[1] = init__11427;
            return init__11427
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__11429)) {
        return cljs.core.deref.call(null, init__11429)
      }else {
        var G__11463 = i__11423 + step_init__11422[0];
        i__11423 = G__11463;
        continue
      }
    }else {
      return step_init__11422[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11430 = this;
  if(this__11430.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__11431 = this__11430.tail.slice();
    new_tail__11431.push(o);
    return new cljs.core.PersistentVector(this__11430.meta, this__11430.cnt + 1, this__11430.shift, this__11430.root, new_tail__11431, null)
  }else {
    var root_overflow_QMARK___11432 = this__11430.cnt >>> 5 > 1 << this__11430.shift;
    var new_shift__11433 = root_overflow_QMARK___11432 ? this__11430.shift + 5 : this__11430.shift;
    var new_root__11435 = root_overflow_QMARK___11432 ? function() {
      var n_r__11434 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__11434, 0, this__11430.root);
      cljs.core.pv_aset.call(null, n_r__11434, 1, cljs.core.new_path.call(null, null, this__11430.shift, new cljs.core.VectorNode(null, this__11430.tail)));
      return n_r__11434
    }() : cljs.core.push_tail.call(null, coll, this__11430.shift, this__11430.root, new cljs.core.VectorNode(null, this__11430.tail));
    return new cljs.core.PersistentVector(this__11430.meta, this__11430.cnt + 1, new_shift__11433, new_root__11435, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__11436 = this;
  if(this__11436.cnt > 0) {
    return new cljs.core.RSeq(coll, this__11436.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__11437 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__11438 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__11439 = this;
  var this__11440 = this;
  return cljs.core.pr_str.call(null, this__11440)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__11441 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__11442 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11443 = this;
  if(this__11443.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11444 = this;
  return this__11444.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__11445 = this;
  if(this__11445.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__11445.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__11446 = this;
  if(this__11446.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__11446.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__11446.meta)
    }else {
      if(1 < this__11446.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__11446.meta, this__11446.cnt - 1, this__11446.shift, this__11446.root, this__11446.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__11447 = cljs.core.array_for.call(null, coll, this__11446.cnt - 2);
          var nr__11448 = cljs.core.pop_tail.call(null, coll, this__11446.shift, this__11446.root);
          var new_root__11449 = nr__11448 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__11448;
          var cnt_1__11450 = this__11446.cnt - 1;
          if(function() {
            var and__3941__auto____11451 = 5 < this__11446.shift;
            if(and__3941__auto____11451) {
              return cljs.core.pv_aget.call(null, new_root__11449, 1) == null
            }else {
              return and__3941__auto____11451
            }
          }()) {
            return new cljs.core.PersistentVector(this__11446.meta, cnt_1__11450, this__11446.shift - 5, cljs.core.pv_aget.call(null, new_root__11449, 0), new_tail__11447, null)
          }else {
            return new cljs.core.PersistentVector(this__11446.meta, cnt_1__11450, this__11446.shift, new_root__11449, new_tail__11447, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__11452 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11453 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11454 = this;
  return new cljs.core.PersistentVector(meta, this__11454.cnt, this__11454.shift, this__11454.root, this__11454.tail, this__11454.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11455 = this;
  return this__11455.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__11456 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__11457 = this;
  if(function() {
    var and__3941__auto____11458 = 0 <= n;
    if(and__3941__auto____11458) {
      return n < this__11457.cnt
    }else {
      return and__3941__auto____11458
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11459 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__11459.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__11464 = xs.length;
  var xs__11465 = no_clone === true ? xs : xs.slice();
  if(l__11464 < 32) {
    return new cljs.core.PersistentVector(null, l__11464, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__11465, null)
  }else {
    var node__11466 = xs__11465.slice(0, 32);
    var v__11467 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__11466, null);
    var i__11468 = 32;
    var out__11469 = cljs.core._as_transient.call(null, v__11467);
    while(true) {
      if(i__11468 < l__11464) {
        var G__11470 = i__11468 + 1;
        var G__11471 = cljs.core.conj_BANG_.call(null, out__11469, xs__11465[i__11468]);
        i__11468 = G__11470;
        out__11469 = G__11471;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__11469)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__11472) {
    var args = cljs.core.seq(arglist__11472);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__11473 = this;
  if(this__11473.off + 1 < this__11473.node.length) {
    var s__11474 = cljs.core.chunked_seq.call(null, this__11473.vec, this__11473.node, this__11473.i, this__11473.off + 1);
    if(s__11474 == null) {
      return null
    }else {
      return s__11474
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11475 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11476 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11477 = this;
  return this__11477.node[this__11477.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11478 = this;
  if(this__11478.off + 1 < this__11478.node.length) {
    var s__11479 = cljs.core.chunked_seq.call(null, this__11478.vec, this__11478.node, this__11478.i, this__11478.off + 1);
    if(s__11479 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__11479
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__11480 = this;
  var l__11481 = this__11480.node.length;
  var s__11482 = this__11480.i + l__11481 < cljs.core._count.call(null, this__11480.vec) ? cljs.core.chunked_seq.call(null, this__11480.vec, this__11480.i + l__11481, 0) : null;
  if(s__11482 == null) {
    return null
  }else {
    return s__11482
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11483 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__11484 = this;
  return cljs.core.chunked_seq.call(null, this__11484.vec, this__11484.node, this__11484.i, this__11484.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__11485 = this;
  return this__11485.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11486 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__11486.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__11487 = this;
  return cljs.core.array_chunk.call(null, this__11487.node, this__11487.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__11488 = this;
  var l__11489 = this__11488.node.length;
  var s__11490 = this__11488.i + l__11489 < cljs.core._count.call(null, this__11488.vec) ? cljs.core.chunked_seq.call(null, this__11488.vec, this__11488.i + l__11489, 0) : null;
  if(s__11490 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__11490
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11493 = this;
  var h__3598__auto____11494 = this__11493.__hash;
  if(!(h__3598__auto____11494 == null)) {
    return h__3598__auto____11494
  }else {
    var h__3598__auto____11495 = cljs.core.hash_coll.call(null, coll);
    this__11493.__hash = h__3598__auto____11495;
    return h__3598__auto____11495
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11496 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11497 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__11498 = this;
  var v_pos__11499 = this__11498.start + key;
  return new cljs.core.Subvec(this__11498.meta, cljs.core._assoc.call(null, this__11498.v, v_pos__11499, val), this__11498.start, this__11498.end > v_pos__11499 + 1 ? this__11498.end : v_pos__11499 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__11525 = null;
  var G__11525__2 = function(this_sym11500, k) {
    var this__11502 = this;
    var this_sym11500__11503 = this;
    var coll__11504 = this_sym11500__11503;
    return coll__11504.cljs$core$ILookup$_lookup$arity$2(coll__11504, k)
  };
  var G__11525__3 = function(this_sym11501, k, not_found) {
    var this__11502 = this;
    var this_sym11501__11505 = this;
    var coll__11506 = this_sym11501__11505;
    return coll__11506.cljs$core$ILookup$_lookup$arity$3(coll__11506, k, not_found)
  };
  G__11525 = function(this_sym11501, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11525__2.call(this, this_sym11501, k);
      case 3:
        return G__11525__3.call(this, this_sym11501, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11525
}();
cljs.core.Subvec.prototype.apply = function(this_sym11491, args11492) {
  var this__11507 = this;
  return this_sym11491.call.apply(this_sym11491, [this_sym11491].concat(args11492.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11508 = this;
  return new cljs.core.Subvec(this__11508.meta, cljs.core._assoc_n.call(null, this__11508.v, this__11508.end, o), this__11508.start, this__11508.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__11509 = this;
  var this__11510 = this;
  return cljs.core.pr_str.call(null, this__11510)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__11511 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__11512 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11513 = this;
  var subvec_seq__11514 = function subvec_seq(i) {
    if(i === this__11513.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__11513.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__11514.call(null, this__11513.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11515 = this;
  return this__11515.end - this__11515.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__11516 = this;
  return cljs.core._nth.call(null, this__11516.v, this__11516.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__11517 = this;
  if(this__11517.start === this__11517.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__11517.meta, this__11517.v, this__11517.start, this__11517.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__11518 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11519 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11520 = this;
  return new cljs.core.Subvec(meta, this__11520.v, this__11520.start, this__11520.end, this__11520.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11521 = this;
  return this__11521.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__11522 = this;
  return cljs.core._nth.call(null, this__11522.v, this__11522.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__11523 = this;
  return cljs.core._nth.call(null, this__11523.v, this__11523.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11524 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__11524.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__11527 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__11527, 0, tl.length);
  return ret__11527
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__11531 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__11532 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__11531, subidx__11532, level === 5 ? tail_node : function() {
    var child__11533 = cljs.core.pv_aget.call(null, ret__11531, subidx__11532);
    if(!(child__11533 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__11533, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__11531
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__11538 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__11539 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__11540 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__11538, subidx__11539));
    if(function() {
      var and__3941__auto____11541 = new_child__11540 == null;
      if(and__3941__auto____11541) {
        return subidx__11539 === 0
      }else {
        return and__3941__auto____11541
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__11538, subidx__11539, new_child__11540);
      return node__11538
    }
  }else {
    if(subidx__11539 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__11538, subidx__11539, null);
        return node__11538
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3941__auto____11546 = 0 <= i;
    if(and__3941__auto____11546) {
      return i < tv.cnt
    }else {
      return and__3941__auto____11546
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__11547 = tv.root;
      var node__11548 = root__11547;
      var level__11549 = tv.shift;
      while(true) {
        if(level__11549 > 0) {
          var G__11550 = cljs.core.tv_ensure_editable.call(null, root__11547.edit, cljs.core.pv_aget.call(null, node__11548, i >>> level__11549 & 31));
          var G__11551 = level__11549 - 5;
          node__11548 = G__11550;
          level__11549 = G__11551;
          continue
        }else {
          return node__11548.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__11591 = null;
  var G__11591__2 = function(this_sym11554, k) {
    var this__11556 = this;
    var this_sym11554__11557 = this;
    var coll__11558 = this_sym11554__11557;
    return coll__11558.cljs$core$ILookup$_lookup$arity$2(coll__11558, k)
  };
  var G__11591__3 = function(this_sym11555, k, not_found) {
    var this__11556 = this;
    var this_sym11555__11559 = this;
    var coll__11560 = this_sym11555__11559;
    return coll__11560.cljs$core$ILookup$_lookup$arity$3(coll__11560, k, not_found)
  };
  G__11591 = function(this_sym11555, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11591__2.call(this, this_sym11555, k);
      case 3:
        return G__11591__3.call(this, this_sym11555, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11591
}();
cljs.core.TransientVector.prototype.apply = function(this_sym11552, args11553) {
  var this__11561 = this;
  return this_sym11552.call.apply(this_sym11552, [this_sym11552].concat(args11553.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11562 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11563 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__11564 = this;
  if(this__11564.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__11565 = this;
  if(function() {
    var and__3941__auto____11566 = 0 <= n;
    if(and__3941__auto____11566) {
      return n < this__11565.cnt
    }else {
      return and__3941__auto____11566
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11567 = this;
  if(this__11567.root.edit) {
    return this__11567.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__11568 = this;
  if(this__11568.root.edit) {
    if(function() {
      var and__3941__auto____11569 = 0 <= n;
      if(and__3941__auto____11569) {
        return n < this__11568.cnt
      }else {
        return and__3941__auto____11569
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__11568.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__11574 = function go(level, node) {
          var node__11572 = cljs.core.tv_ensure_editable.call(null, this__11568.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__11572, n & 31, val);
            return node__11572
          }else {
            var subidx__11573 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__11572, subidx__11573, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__11572, subidx__11573)));
            return node__11572
          }
        }.call(null, this__11568.shift, this__11568.root);
        this__11568.root = new_root__11574;
        return tcoll
      }
    }else {
      if(n === this__11568.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__11568.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__11575 = this;
  if(this__11575.root.edit) {
    if(this__11575.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__11575.cnt) {
        this__11575.cnt = 0;
        return tcoll
      }else {
        if((this__11575.cnt - 1 & 31) > 0) {
          this__11575.cnt = this__11575.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__11576 = cljs.core.editable_array_for.call(null, tcoll, this__11575.cnt - 2);
            var new_root__11578 = function() {
              var nr__11577 = cljs.core.tv_pop_tail.call(null, tcoll, this__11575.shift, this__11575.root);
              if(!(nr__11577 == null)) {
                return nr__11577
              }else {
                return new cljs.core.VectorNode(this__11575.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3941__auto____11579 = 5 < this__11575.shift;
              if(and__3941__auto____11579) {
                return cljs.core.pv_aget.call(null, new_root__11578, 1) == null
              }else {
                return and__3941__auto____11579
              }
            }()) {
              var new_root__11580 = cljs.core.tv_ensure_editable.call(null, this__11575.root.edit, cljs.core.pv_aget.call(null, new_root__11578, 0));
              this__11575.root = new_root__11580;
              this__11575.shift = this__11575.shift - 5;
              this__11575.cnt = this__11575.cnt - 1;
              this__11575.tail = new_tail__11576;
              return tcoll
            }else {
              this__11575.root = new_root__11578;
              this__11575.cnt = this__11575.cnt - 1;
              this__11575.tail = new_tail__11576;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__11581 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__11582 = this;
  if(this__11582.root.edit) {
    if(this__11582.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__11582.tail[this__11582.cnt & 31] = o;
      this__11582.cnt = this__11582.cnt + 1;
      return tcoll
    }else {
      var tail_node__11583 = new cljs.core.VectorNode(this__11582.root.edit, this__11582.tail);
      var new_tail__11584 = cljs.core.make_array.call(null, 32);
      new_tail__11584[0] = o;
      this__11582.tail = new_tail__11584;
      if(this__11582.cnt >>> 5 > 1 << this__11582.shift) {
        var new_root_array__11585 = cljs.core.make_array.call(null, 32);
        var new_shift__11586 = this__11582.shift + 5;
        new_root_array__11585[0] = this__11582.root;
        new_root_array__11585[1] = cljs.core.new_path.call(null, this__11582.root.edit, this__11582.shift, tail_node__11583);
        this__11582.root = new cljs.core.VectorNode(this__11582.root.edit, new_root_array__11585);
        this__11582.shift = new_shift__11586;
        this__11582.cnt = this__11582.cnt + 1;
        return tcoll
      }else {
        var new_root__11587 = cljs.core.tv_push_tail.call(null, tcoll, this__11582.shift, this__11582.root, tail_node__11583);
        this__11582.root = new_root__11587;
        this__11582.cnt = this__11582.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__11588 = this;
  if(this__11588.root.edit) {
    this__11588.root.edit = null;
    var len__11589 = this__11588.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__11590 = cljs.core.make_array.call(null, len__11589);
    cljs.core.array_copy.call(null, this__11588.tail, 0, trimmed_tail__11590, 0, len__11589);
    return new cljs.core.PersistentVector(null, this__11588.cnt, this__11588.shift, this__11588.root, trimmed_tail__11590, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11592 = this;
  var h__3598__auto____11593 = this__11592.__hash;
  if(!(h__3598__auto____11593 == null)) {
    return h__3598__auto____11593
  }else {
    var h__3598__auto____11594 = cljs.core.hash_coll.call(null, coll);
    this__11592.__hash = h__3598__auto____11594;
    return h__3598__auto____11594
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11595 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__11596 = this;
  var this__11597 = this;
  return cljs.core.pr_str.call(null, this__11597)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11598 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11599 = this;
  return cljs.core._first.call(null, this__11599.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11600 = this;
  var temp__4090__auto____11601 = cljs.core.next.call(null, this__11600.front);
  if(temp__4090__auto____11601) {
    var f1__11602 = temp__4090__auto____11601;
    return new cljs.core.PersistentQueueSeq(this__11600.meta, f1__11602, this__11600.rear, null)
  }else {
    if(this__11600.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__11600.meta, this__11600.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11603 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11604 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__11604.front, this__11604.rear, this__11604.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11605 = this;
  return this__11605.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11606 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11606.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11607 = this;
  var h__3598__auto____11608 = this__11607.__hash;
  if(!(h__3598__auto____11608 == null)) {
    return h__3598__auto____11608
  }else {
    var h__3598__auto____11609 = cljs.core.hash_coll.call(null, coll);
    this__11607.__hash = h__3598__auto____11609;
    return h__3598__auto____11609
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11610 = this;
  if(cljs.core.truth_(this__11610.front)) {
    return new cljs.core.PersistentQueue(this__11610.meta, this__11610.count + 1, this__11610.front, cljs.core.conj.call(null, function() {
      var or__3943__auto____11611 = this__11610.rear;
      if(cljs.core.truth_(or__3943__auto____11611)) {
        return or__3943__auto____11611
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__11610.meta, this__11610.count + 1, cljs.core.conj.call(null, this__11610.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__11612 = this;
  var this__11613 = this;
  return cljs.core.pr_str.call(null, this__11613)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11614 = this;
  var rear__11615 = cljs.core.seq.call(null, this__11614.rear);
  if(cljs.core.truth_(function() {
    var or__3943__auto____11616 = this__11614.front;
    if(cljs.core.truth_(or__3943__auto____11616)) {
      return or__3943__auto____11616
    }else {
      return rear__11615
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__11614.front, cljs.core.seq.call(null, rear__11615), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11617 = this;
  return this__11617.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__11618 = this;
  return cljs.core._first.call(null, this__11618.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__11619 = this;
  if(cljs.core.truth_(this__11619.front)) {
    var temp__4090__auto____11620 = cljs.core.next.call(null, this__11619.front);
    if(temp__4090__auto____11620) {
      var f1__11621 = temp__4090__auto____11620;
      return new cljs.core.PersistentQueue(this__11619.meta, this__11619.count - 1, f1__11621, this__11619.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__11619.meta, this__11619.count - 1, cljs.core.seq.call(null, this__11619.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11622 = this;
  return cljs.core.first.call(null, this__11622.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11623 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11624 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11625 = this;
  return new cljs.core.PersistentQueue(meta, this__11625.count, this__11625.front, this__11625.rear, this__11625.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11626 = this;
  return this__11626.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11627 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__11628 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__11631 = array.length;
  var i__11632 = 0;
  while(true) {
    if(i__11632 < len__11631) {
      if(k === array[i__11632]) {
        return i__11632
      }else {
        var G__11633 = i__11632 + incr;
        i__11632 = G__11633;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__11636 = cljs.core.hash.call(null, a);
  var b__11637 = cljs.core.hash.call(null, b);
  if(a__11636 < b__11637) {
    return-1
  }else {
    if(a__11636 > b__11637) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__11645 = m.keys;
  var len__11646 = ks__11645.length;
  var so__11647 = m.strobj;
  var out__11648 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__11649 = 0;
  var out__11650 = cljs.core.transient$.call(null, out__11648);
  while(true) {
    if(i__11649 < len__11646) {
      var k__11651 = ks__11645[i__11649];
      var G__11652 = i__11649 + 1;
      var G__11653 = cljs.core.assoc_BANG_.call(null, out__11650, k__11651, so__11647[k__11651]);
      i__11649 = G__11652;
      out__11650 = G__11653;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__11650, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__11659 = {};
  var l__11660 = ks.length;
  var i__11661 = 0;
  while(true) {
    if(i__11661 < l__11660) {
      var k__11662 = ks[i__11661];
      new_obj__11659[k__11662] = obj[k__11662];
      var G__11663 = i__11661 + 1;
      i__11661 = G__11663;
      continue
    }else {
    }
    break
  }
  return new_obj__11659
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__11666 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11667 = this;
  var h__3598__auto____11668 = this__11667.__hash;
  if(!(h__3598__auto____11668 == null)) {
    return h__3598__auto____11668
  }else {
    var h__3598__auto____11669 = cljs.core.hash_imap.call(null, coll);
    this__11667.__hash = h__3598__auto____11669;
    return h__3598__auto____11669
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11670 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11671 = this;
  if(function() {
    var and__3941__auto____11672 = goog.isString(k);
    if(and__3941__auto____11672) {
      return!(cljs.core.scan_array.call(null, 1, k, this__11671.keys) == null)
    }else {
      return and__3941__auto____11672
    }
  }()) {
    return this__11671.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11673 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3943__auto____11674 = this__11673.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3943__auto____11674) {
        return or__3943__auto____11674
      }else {
        return this__11673.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__11673.keys) == null)) {
        var new_strobj__11675 = cljs.core.obj_clone.call(null, this__11673.strobj, this__11673.keys);
        new_strobj__11675[k] = v;
        return new cljs.core.ObjMap(this__11673.meta, this__11673.keys, new_strobj__11675, this__11673.update_count + 1, null)
      }else {
        var new_strobj__11676 = cljs.core.obj_clone.call(null, this__11673.strobj, this__11673.keys);
        var new_keys__11677 = this__11673.keys.slice();
        new_strobj__11676[k] = v;
        new_keys__11677.push(k);
        return new cljs.core.ObjMap(this__11673.meta, new_keys__11677, new_strobj__11676, this__11673.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__11678 = this;
  if(function() {
    var and__3941__auto____11679 = goog.isString(k);
    if(and__3941__auto____11679) {
      return!(cljs.core.scan_array.call(null, 1, k, this__11678.keys) == null)
    }else {
      return and__3941__auto____11679
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__11701 = null;
  var G__11701__2 = function(this_sym11680, k) {
    var this__11682 = this;
    var this_sym11680__11683 = this;
    var coll__11684 = this_sym11680__11683;
    return coll__11684.cljs$core$ILookup$_lookup$arity$2(coll__11684, k)
  };
  var G__11701__3 = function(this_sym11681, k, not_found) {
    var this__11682 = this;
    var this_sym11681__11685 = this;
    var coll__11686 = this_sym11681__11685;
    return coll__11686.cljs$core$ILookup$_lookup$arity$3(coll__11686, k, not_found)
  };
  G__11701 = function(this_sym11681, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11701__2.call(this, this_sym11681, k);
      case 3:
        return G__11701__3.call(this, this_sym11681, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11701
}();
cljs.core.ObjMap.prototype.apply = function(this_sym11664, args11665) {
  var this__11687 = this;
  return this_sym11664.call.apply(this_sym11664, [this_sym11664].concat(args11665.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__11688 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__11689 = this;
  var this__11690 = this;
  return cljs.core.pr_str.call(null, this__11690)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11691 = this;
  if(this__11691.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__11654_SHARP_) {
      return cljs.core.vector.call(null, p1__11654_SHARP_, this__11691.strobj[p1__11654_SHARP_])
    }, this__11691.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11692 = this;
  return this__11692.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11693 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11694 = this;
  return new cljs.core.ObjMap(meta, this__11694.keys, this__11694.strobj, this__11694.update_count, this__11694.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11695 = this;
  return this__11695.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11696 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__11696.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__11697 = this;
  if(function() {
    var and__3941__auto____11698 = goog.isString(k);
    if(and__3941__auto____11698) {
      return!(cljs.core.scan_array.call(null, 1, k, this__11697.keys) == null)
    }else {
      return and__3941__auto____11698
    }
  }()) {
    var new_keys__11699 = this__11697.keys.slice();
    var new_strobj__11700 = cljs.core.obj_clone.call(null, this__11697.strobj, this__11697.keys);
    new_keys__11699.splice(cljs.core.scan_array.call(null, 1, k, new_keys__11699), 1);
    cljs.core.js_delete.call(null, new_strobj__11700, k);
    return new cljs.core.ObjMap(this__11697.meta, new_keys__11699, new_strobj__11700, this__11697.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11705 = this;
  var h__3598__auto____11706 = this__11705.__hash;
  if(!(h__3598__auto____11706 == null)) {
    return h__3598__auto____11706
  }else {
    var h__3598__auto____11707 = cljs.core.hash_imap.call(null, coll);
    this__11705.__hash = h__3598__auto____11707;
    return h__3598__auto____11707
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11708 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11709 = this;
  var bucket__11710 = this__11709.hashobj[cljs.core.hash.call(null, k)];
  var i__11711 = cljs.core.truth_(bucket__11710) ? cljs.core.scan_array.call(null, 2, k, bucket__11710) : null;
  if(cljs.core.truth_(i__11711)) {
    return bucket__11710[i__11711 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11712 = this;
  var h__11713 = cljs.core.hash.call(null, k);
  var bucket__11714 = this__11712.hashobj[h__11713];
  if(cljs.core.truth_(bucket__11714)) {
    var new_bucket__11715 = bucket__11714.slice();
    var new_hashobj__11716 = goog.object.clone(this__11712.hashobj);
    new_hashobj__11716[h__11713] = new_bucket__11715;
    var temp__4090__auto____11717 = cljs.core.scan_array.call(null, 2, k, new_bucket__11715);
    if(cljs.core.truth_(temp__4090__auto____11717)) {
      var i__11718 = temp__4090__auto____11717;
      new_bucket__11715[i__11718 + 1] = v;
      return new cljs.core.HashMap(this__11712.meta, this__11712.count, new_hashobj__11716, null)
    }else {
      new_bucket__11715.push(k, v);
      return new cljs.core.HashMap(this__11712.meta, this__11712.count + 1, new_hashobj__11716, null)
    }
  }else {
    var new_hashobj__11719 = goog.object.clone(this__11712.hashobj);
    new_hashobj__11719[h__11713] = [k, v];
    return new cljs.core.HashMap(this__11712.meta, this__11712.count + 1, new_hashobj__11719, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__11720 = this;
  var bucket__11721 = this__11720.hashobj[cljs.core.hash.call(null, k)];
  var i__11722 = cljs.core.truth_(bucket__11721) ? cljs.core.scan_array.call(null, 2, k, bucket__11721) : null;
  if(cljs.core.truth_(i__11722)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__11747 = null;
  var G__11747__2 = function(this_sym11723, k) {
    var this__11725 = this;
    var this_sym11723__11726 = this;
    var coll__11727 = this_sym11723__11726;
    return coll__11727.cljs$core$ILookup$_lookup$arity$2(coll__11727, k)
  };
  var G__11747__3 = function(this_sym11724, k, not_found) {
    var this__11725 = this;
    var this_sym11724__11728 = this;
    var coll__11729 = this_sym11724__11728;
    return coll__11729.cljs$core$ILookup$_lookup$arity$3(coll__11729, k, not_found)
  };
  G__11747 = function(this_sym11724, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11747__2.call(this, this_sym11724, k);
      case 3:
        return G__11747__3.call(this, this_sym11724, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11747
}();
cljs.core.HashMap.prototype.apply = function(this_sym11703, args11704) {
  var this__11730 = this;
  return this_sym11703.call.apply(this_sym11703, [this_sym11703].concat(args11704.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__11731 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__11732 = this;
  var this__11733 = this;
  return cljs.core.pr_str.call(null, this__11733)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11734 = this;
  if(this__11734.count > 0) {
    var hashes__11735 = cljs.core.js_keys.call(null, this__11734.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__11702_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__11734.hashobj[p1__11702_SHARP_]))
    }, hashes__11735)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11736 = this;
  return this__11736.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11737 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11738 = this;
  return new cljs.core.HashMap(meta, this__11738.count, this__11738.hashobj, this__11738.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11739 = this;
  return this__11739.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11740 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__11740.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__11741 = this;
  var h__11742 = cljs.core.hash.call(null, k);
  var bucket__11743 = this__11741.hashobj[h__11742];
  var i__11744 = cljs.core.truth_(bucket__11743) ? cljs.core.scan_array.call(null, 2, k, bucket__11743) : null;
  if(cljs.core.not.call(null, i__11744)) {
    return coll
  }else {
    var new_hashobj__11745 = goog.object.clone(this__11741.hashobj);
    if(3 > bucket__11743.length) {
      cljs.core.js_delete.call(null, new_hashobj__11745, h__11742)
    }else {
      var new_bucket__11746 = bucket__11743.slice();
      new_bucket__11746.splice(i__11744, 2);
      new_hashobj__11745[h__11742] = new_bucket__11746
    }
    return new cljs.core.HashMap(this__11741.meta, this__11741.count - 1, new_hashobj__11745, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__11748 = ks.length;
  var i__11749 = 0;
  var out__11750 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__11749 < len__11748) {
      var G__11751 = i__11749 + 1;
      var G__11752 = cljs.core.assoc.call(null, out__11750, ks[i__11749], vs[i__11749]);
      i__11749 = G__11751;
      out__11750 = G__11752;
      continue
    }else {
      return out__11750
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__11756 = m.arr;
  var len__11757 = arr__11756.length;
  var i__11758 = 0;
  while(true) {
    if(len__11757 <= i__11758) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__11756[i__11758], k)) {
        return i__11758
      }else {
        if("\ufdd0'else") {
          var G__11759 = i__11758 + 2;
          i__11758 = G__11759;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__11762 = this;
  return new cljs.core.TransientArrayMap({}, this__11762.arr.length, this__11762.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11763 = this;
  var h__3598__auto____11764 = this__11763.__hash;
  if(!(h__3598__auto____11764 == null)) {
    return h__3598__auto____11764
  }else {
    var h__3598__auto____11765 = cljs.core.hash_imap.call(null, coll);
    this__11763.__hash = h__3598__auto____11765;
    return h__3598__auto____11765
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11766 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11767 = this;
  var idx__11768 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__11768 === -1) {
    return not_found
  }else {
    return this__11767.arr[idx__11768 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11769 = this;
  var idx__11770 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__11770 === -1) {
    if(this__11769.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__11769.meta, this__11769.cnt + 1, function() {
        var G__11771__11772 = this__11769.arr.slice();
        G__11771__11772.push(k);
        G__11771__11772.push(v);
        return G__11771__11772
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__11769.arr[idx__11770 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__11769.meta, this__11769.cnt, function() {
          var G__11773__11774 = this__11769.arr.slice();
          G__11773__11774[idx__11770 + 1] = v;
          return G__11773__11774
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__11775 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__11807 = null;
  var G__11807__2 = function(this_sym11776, k) {
    var this__11778 = this;
    var this_sym11776__11779 = this;
    var coll__11780 = this_sym11776__11779;
    return coll__11780.cljs$core$ILookup$_lookup$arity$2(coll__11780, k)
  };
  var G__11807__3 = function(this_sym11777, k, not_found) {
    var this__11778 = this;
    var this_sym11777__11781 = this;
    var coll__11782 = this_sym11777__11781;
    return coll__11782.cljs$core$ILookup$_lookup$arity$3(coll__11782, k, not_found)
  };
  G__11807 = function(this_sym11777, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11807__2.call(this, this_sym11777, k);
      case 3:
        return G__11807__3.call(this, this_sym11777, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11807
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym11760, args11761) {
  var this__11783 = this;
  return this_sym11760.call.apply(this_sym11760, [this_sym11760].concat(args11761.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__11784 = this;
  var len__11785 = this__11784.arr.length;
  var i__11786 = 0;
  var init__11787 = init;
  while(true) {
    if(i__11786 < len__11785) {
      var init__11788 = f.call(null, init__11787, this__11784.arr[i__11786], this__11784.arr[i__11786 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__11788)) {
        return cljs.core.deref.call(null, init__11788)
      }else {
        var G__11808 = i__11786 + 2;
        var G__11809 = init__11788;
        i__11786 = G__11808;
        init__11787 = G__11809;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__11789 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__11790 = this;
  var this__11791 = this;
  return cljs.core.pr_str.call(null, this__11791)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11792 = this;
  if(this__11792.cnt > 0) {
    var len__11793 = this__11792.arr.length;
    var array_map_seq__11794 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__11793) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__11792.arr[i], this__11792.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__11794.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11795 = this;
  return this__11795.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11796 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11797 = this;
  return new cljs.core.PersistentArrayMap(meta, this__11797.cnt, this__11797.arr, this__11797.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11798 = this;
  return this__11798.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11799 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__11799.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__11800 = this;
  var idx__11801 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__11801 >= 0) {
    var len__11802 = this__11800.arr.length;
    var new_len__11803 = len__11802 - 2;
    if(new_len__11803 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__11804 = cljs.core.make_array.call(null, new_len__11803);
      var s__11805 = 0;
      var d__11806 = 0;
      while(true) {
        if(s__11805 >= len__11802) {
          return new cljs.core.PersistentArrayMap(this__11800.meta, this__11800.cnt - 1, new_arr__11804, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__11800.arr[s__11805])) {
            var G__11810 = s__11805 + 2;
            var G__11811 = d__11806;
            s__11805 = G__11810;
            d__11806 = G__11811;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__11804[d__11806] = this__11800.arr[s__11805];
              new_arr__11804[d__11806 + 1] = this__11800.arr[s__11805 + 1];
              var G__11812 = s__11805 + 2;
              var G__11813 = d__11806 + 2;
              s__11805 = G__11812;
              d__11806 = G__11813;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__11814 = cljs.core.count.call(null, ks);
  var i__11815 = 0;
  var out__11816 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__11815 < len__11814) {
      var G__11817 = i__11815 + 1;
      var G__11818 = cljs.core.assoc_BANG_.call(null, out__11816, ks[i__11815], vs[i__11815]);
      i__11815 = G__11817;
      out__11816 = G__11818;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__11816)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__11819 = this;
  if(cljs.core.truth_(this__11819.editable_QMARK_)) {
    var idx__11820 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__11820 >= 0) {
      this__11819.arr[idx__11820] = this__11819.arr[this__11819.len - 2];
      this__11819.arr[idx__11820 + 1] = this__11819.arr[this__11819.len - 1];
      var G__11821__11822 = this__11819.arr;
      G__11821__11822.pop();
      G__11821__11822.pop();
      G__11821__11822;
      this__11819.len = this__11819.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__11823 = this;
  if(cljs.core.truth_(this__11823.editable_QMARK_)) {
    var idx__11824 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__11824 === -1) {
      if(this__11823.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__11823.len = this__11823.len + 2;
        this__11823.arr.push(key);
        this__11823.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__11823.len, this__11823.arr), key, val)
      }
    }else {
      if(val === this__11823.arr[idx__11824 + 1]) {
        return tcoll
      }else {
        this__11823.arr[idx__11824 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__11825 = this;
  if(cljs.core.truth_(this__11825.editable_QMARK_)) {
    if(function() {
      var G__11826__11827 = o;
      if(G__11826__11827) {
        if(function() {
          var or__3943__auto____11828 = G__11826__11827.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto____11828) {
            return or__3943__auto____11828
          }else {
            return G__11826__11827.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__11826__11827.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__11826__11827)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__11826__11827)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__11829 = cljs.core.seq.call(null, o);
      var tcoll__11830 = tcoll;
      while(true) {
        var temp__4090__auto____11831 = cljs.core.first.call(null, es__11829);
        if(cljs.core.truth_(temp__4090__auto____11831)) {
          var e__11832 = temp__4090__auto____11831;
          var G__11838 = cljs.core.next.call(null, es__11829);
          var G__11839 = tcoll__11830.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__11830, cljs.core.key.call(null, e__11832), cljs.core.val.call(null, e__11832));
          es__11829 = G__11838;
          tcoll__11830 = G__11839;
          continue
        }else {
          return tcoll__11830
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__11833 = this;
  if(cljs.core.truth_(this__11833.editable_QMARK_)) {
    this__11833.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__11833.len, 2), this__11833.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__11834 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__11835 = this;
  if(cljs.core.truth_(this__11835.editable_QMARK_)) {
    var idx__11836 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__11836 === -1) {
      return not_found
    }else {
      return this__11835.arr[idx__11836 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__11837 = this;
  if(cljs.core.truth_(this__11837.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__11837.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__11842 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__11843 = 0;
  while(true) {
    if(i__11843 < len) {
      var G__11844 = cljs.core.assoc_BANG_.call(null, out__11842, arr[i__11843], arr[i__11843 + 1]);
      var G__11845 = i__11843 + 2;
      out__11842 = G__11844;
      i__11843 = G__11845;
      continue
    }else {
      return out__11842
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__3716__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__11850__11851 = arr.slice();
    G__11850__11851[i] = a;
    return G__11850__11851
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__11852__11853 = arr.slice();
    G__11852__11853[i] = a;
    G__11852__11853[j] = b;
    return G__11852__11853
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__11855 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__11855, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__11855, 2 * i, new_arr__11855.length - 2 * i);
  return new_arr__11855
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__11858 = inode.ensure_editable(edit);
    editable__11858.arr[i] = a;
    return editable__11858
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__11859 = inode.ensure_editable(edit);
    editable__11859.arr[i] = a;
    editable__11859.arr[j] = b;
    return editable__11859
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__11866 = arr.length;
  var i__11867 = 0;
  var init__11868 = init;
  while(true) {
    if(i__11867 < len__11866) {
      var init__11871 = function() {
        var k__11869 = arr[i__11867];
        if(!(k__11869 == null)) {
          return f.call(null, init__11868, k__11869, arr[i__11867 + 1])
        }else {
          var node__11870 = arr[i__11867 + 1];
          if(!(node__11870 == null)) {
            return node__11870.kv_reduce(f, init__11868)
          }else {
            return init__11868
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__11871)) {
        return cljs.core.deref.call(null, init__11871)
      }else {
        var G__11872 = i__11867 + 2;
        var G__11873 = init__11871;
        i__11867 = G__11872;
        init__11868 = G__11873;
        continue
      }
    }else {
      return init__11868
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__11874 = this;
  var inode__11875 = this;
  if(this__11874.bitmap === bit) {
    return null
  }else {
    var editable__11876 = inode__11875.ensure_editable(e);
    var earr__11877 = editable__11876.arr;
    var len__11878 = earr__11877.length;
    editable__11876.bitmap = bit ^ editable__11876.bitmap;
    cljs.core.array_copy.call(null, earr__11877, 2 * (i + 1), earr__11877, 2 * i, len__11878 - 2 * (i + 1));
    earr__11877[len__11878 - 2] = null;
    earr__11877[len__11878 - 1] = null;
    return editable__11876
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__11879 = this;
  var inode__11880 = this;
  var bit__11881 = 1 << (hash >>> shift & 31);
  var idx__11882 = cljs.core.bitmap_indexed_node_index.call(null, this__11879.bitmap, bit__11881);
  if((this__11879.bitmap & bit__11881) === 0) {
    var n__11883 = cljs.core.bit_count.call(null, this__11879.bitmap);
    if(2 * n__11883 < this__11879.arr.length) {
      var editable__11884 = inode__11880.ensure_editable(edit);
      var earr__11885 = editable__11884.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__11885, 2 * idx__11882, earr__11885, 2 * (idx__11882 + 1), 2 * (n__11883 - idx__11882));
      earr__11885[2 * idx__11882] = key;
      earr__11885[2 * idx__11882 + 1] = val;
      editable__11884.bitmap = editable__11884.bitmap | bit__11881;
      return editable__11884
    }else {
      if(n__11883 >= 16) {
        var nodes__11886 = cljs.core.make_array.call(null, 32);
        var jdx__11887 = hash >>> shift & 31;
        nodes__11886[jdx__11887] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__11888 = 0;
        var j__11889 = 0;
        while(true) {
          if(i__11888 < 32) {
            if((this__11879.bitmap >>> i__11888 & 1) === 0) {
              var G__11942 = i__11888 + 1;
              var G__11943 = j__11889;
              i__11888 = G__11942;
              j__11889 = G__11943;
              continue
            }else {
              nodes__11886[i__11888] = !(this__11879.arr[j__11889] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__11879.arr[j__11889]), this__11879.arr[j__11889], this__11879.arr[j__11889 + 1], added_leaf_QMARK_) : this__11879.arr[j__11889 + 1];
              var G__11944 = i__11888 + 1;
              var G__11945 = j__11889 + 2;
              i__11888 = G__11944;
              j__11889 = G__11945;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__11883 + 1, nodes__11886)
      }else {
        if("\ufdd0'else") {
          var new_arr__11890 = cljs.core.make_array.call(null, 2 * (n__11883 + 4));
          cljs.core.array_copy.call(null, this__11879.arr, 0, new_arr__11890, 0, 2 * idx__11882);
          new_arr__11890[2 * idx__11882] = key;
          new_arr__11890[2 * idx__11882 + 1] = val;
          cljs.core.array_copy.call(null, this__11879.arr, 2 * idx__11882, new_arr__11890, 2 * (idx__11882 + 1), 2 * (n__11883 - idx__11882));
          added_leaf_QMARK_.val = true;
          var editable__11891 = inode__11880.ensure_editable(edit);
          editable__11891.arr = new_arr__11890;
          editable__11891.bitmap = editable__11891.bitmap | bit__11881;
          return editable__11891
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__11892 = this__11879.arr[2 * idx__11882];
    var val_or_node__11893 = this__11879.arr[2 * idx__11882 + 1];
    if(key_or_nil__11892 == null) {
      var n__11894 = val_or_node__11893.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__11894 === val_or_node__11893) {
        return inode__11880
      }else {
        return cljs.core.edit_and_set.call(null, inode__11880, edit, 2 * idx__11882 + 1, n__11894)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11892)) {
        if(val === val_or_node__11893) {
          return inode__11880
        }else {
          return cljs.core.edit_and_set.call(null, inode__11880, edit, 2 * idx__11882 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__11880, edit, 2 * idx__11882, null, 2 * idx__11882 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__11892, val_or_node__11893, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__11895 = this;
  var inode__11896 = this;
  return cljs.core.create_inode_seq.call(null, this__11895.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__11897 = this;
  var inode__11898 = this;
  var bit__11899 = 1 << (hash >>> shift & 31);
  if((this__11897.bitmap & bit__11899) === 0) {
    return inode__11898
  }else {
    var idx__11900 = cljs.core.bitmap_indexed_node_index.call(null, this__11897.bitmap, bit__11899);
    var key_or_nil__11901 = this__11897.arr[2 * idx__11900];
    var val_or_node__11902 = this__11897.arr[2 * idx__11900 + 1];
    if(key_or_nil__11901 == null) {
      var n__11903 = val_or_node__11902.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__11903 === val_or_node__11902) {
        return inode__11898
      }else {
        if(!(n__11903 == null)) {
          return cljs.core.edit_and_set.call(null, inode__11898, edit, 2 * idx__11900 + 1, n__11903)
        }else {
          if(this__11897.bitmap === bit__11899) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__11898.edit_and_remove_pair(edit, bit__11899, idx__11900)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11901)) {
        removed_leaf_QMARK_[0] = true;
        return inode__11898.edit_and_remove_pair(edit, bit__11899, idx__11900)
      }else {
        if("\ufdd0'else") {
          return inode__11898
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__11904 = this;
  var inode__11905 = this;
  if(e === this__11904.edit) {
    return inode__11905
  }else {
    var n__11906 = cljs.core.bit_count.call(null, this__11904.bitmap);
    var new_arr__11907 = cljs.core.make_array.call(null, n__11906 < 0 ? 4 : 2 * (n__11906 + 1));
    cljs.core.array_copy.call(null, this__11904.arr, 0, new_arr__11907, 0, 2 * n__11906);
    return new cljs.core.BitmapIndexedNode(e, this__11904.bitmap, new_arr__11907)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__11908 = this;
  var inode__11909 = this;
  return cljs.core.inode_kv_reduce.call(null, this__11908.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__11910 = this;
  var inode__11911 = this;
  var bit__11912 = 1 << (hash >>> shift & 31);
  if((this__11910.bitmap & bit__11912) === 0) {
    return not_found
  }else {
    var idx__11913 = cljs.core.bitmap_indexed_node_index.call(null, this__11910.bitmap, bit__11912);
    var key_or_nil__11914 = this__11910.arr[2 * idx__11913];
    var val_or_node__11915 = this__11910.arr[2 * idx__11913 + 1];
    if(key_or_nil__11914 == null) {
      return val_or_node__11915.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11914)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__11914, val_or_node__11915], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__11916 = this;
  var inode__11917 = this;
  var bit__11918 = 1 << (hash >>> shift & 31);
  if((this__11916.bitmap & bit__11918) === 0) {
    return inode__11917
  }else {
    var idx__11919 = cljs.core.bitmap_indexed_node_index.call(null, this__11916.bitmap, bit__11918);
    var key_or_nil__11920 = this__11916.arr[2 * idx__11919];
    var val_or_node__11921 = this__11916.arr[2 * idx__11919 + 1];
    if(key_or_nil__11920 == null) {
      var n__11922 = val_or_node__11921.inode_without(shift + 5, hash, key);
      if(n__11922 === val_or_node__11921) {
        return inode__11917
      }else {
        if(!(n__11922 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__11916.bitmap, cljs.core.clone_and_set.call(null, this__11916.arr, 2 * idx__11919 + 1, n__11922))
        }else {
          if(this__11916.bitmap === bit__11918) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__11916.bitmap ^ bit__11918, cljs.core.remove_pair.call(null, this__11916.arr, idx__11919))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11920)) {
        return new cljs.core.BitmapIndexedNode(null, this__11916.bitmap ^ bit__11918, cljs.core.remove_pair.call(null, this__11916.arr, idx__11919))
      }else {
        if("\ufdd0'else") {
          return inode__11917
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__11923 = this;
  var inode__11924 = this;
  var bit__11925 = 1 << (hash >>> shift & 31);
  var idx__11926 = cljs.core.bitmap_indexed_node_index.call(null, this__11923.bitmap, bit__11925);
  if((this__11923.bitmap & bit__11925) === 0) {
    var n__11927 = cljs.core.bit_count.call(null, this__11923.bitmap);
    if(n__11927 >= 16) {
      var nodes__11928 = cljs.core.make_array.call(null, 32);
      var jdx__11929 = hash >>> shift & 31;
      nodes__11928[jdx__11929] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__11930 = 0;
      var j__11931 = 0;
      while(true) {
        if(i__11930 < 32) {
          if((this__11923.bitmap >>> i__11930 & 1) === 0) {
            var G__11946 = i__11930 + 1;
            var G__11947 = j__11931;
            i__11930 = G__11946;
            j__11931 = G__11947;
            continue
          }else {
            nodes__11928[i__11930] = !(this__11923.arr[j__11931] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__11923.arr[j__11931]), this__11923.arr[j__11931], this__11923.arr[j__11931 + 1], added_leaf_QMARK_) : this__11923.arr[j__11931 + 1];
            var G__11948 = i__11930 + 1;
            var G__11949 = j__11931 + 2;
            i__11930 = G__11948;
            j__11931 = G__11949;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__11927 + 1, nodes__11928)
    }else {
      var new_arr__11932 = cljs.core.make_array.call(null, 2 * (n__11927 + 1));
      cljs.core.array_copy.call(null, this__11923.arr, 0, new_arr__11932, 0, 2 * idx__11926);
      new_arr__11932[2 * idx__11926] = key;
      new_arr__11932[2 * idx__11926 + 1] = val;
      cljs.core.array_copy.call(null, this__11923.arr, 2 * idx__11926, new_arr__11932, 2 * (idx__11926 + 1), 2 * (n__11927 - idx__11926));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__11923.bitmap | bit__11925, new_arr__11932)
    }
  }else {
    var key_or_nil__11933 = this__11923.arr[2 * idx__11926];
    var val_or_node__11934 = this__11923.arr[2 * idx__11926 + 1];
    if(key_or_nil__11933 == null) {
      var n__11935 = val_or_node__11934.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__11935 === val_or_node__11934) {
        return inode__11924
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__11923.bitmap, cljs.core.clone_and_set.call(null, this__11923.arr, 2 * idx__11926 + 1, n__11935))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11933)) {
        if(val === val_or_node__11934) {
          return inode__11924
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__11923.bitmap, cljs.core.clone_and_set.call(null, this__11923.arr, 2 * idx__11926 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__11923.bitmap, cljs.core.clone_and_set.call(null, this__11923.arr, 2 * idx__11926, null, 2 * idx__11926 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__11933, val_or_node__11934, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__11936 = this;
  var inode__11937 = this;
  var bit__11938 = 1 << (hash >>> shift & 31);
  if((this__11936.bitmap & bit__11938) === 0) {
    return not_found
  }else {
    var idx__11939 = cljs.core.bitmap_indexed_node_index.call(null, this__11936.bitmap, bit__11938);
    var key_or_nil__11940 = this__11936.arr[2 * idx__11939];
    var val_or_node__11941 = this__11936.arr[2 * idx__11939 + 1];
    if(key_or_nil__11940 == null) {
      return val_or_node__11941.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11940)) {
        return val_or_node__11941
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__11957 = array_node.arr;
  var len__11958 = 2 * (array_node.cnt - 1);
  var new_arr__11959 = cljs.core.make_array.call(null, len__11958);
  var i__11960 = 0;
  var j__11961 = 1;
  var bitmap__11962 = 0;
  while(true) {
    if(i__11960 < len__11958) {
      if(function() {
        var and__3941__auto____11963 = !(i__11960 === idx);
        if(and__3941__auto____11963) {
          return!(arr__11957[i__11960] == null)
        }else {
          return and__3941__auto____11963
        }
      }()) {
        new_arr__11959[j__11961] = arr__11957[i__11960];
        var G__11964 = i__11960 + 1;
        var G__11965 = j__11961 + 2;
        var G__11966 = bitmap__11962 | 1 << i__11960;
        i__11960 = G__11964;
        j__11961 = G__11965;
        bitmap__11962 = G__11966;
        continue
      }else {
        var G__11967 = i__11960 + 1;
        var G__11968 = j__11961;
        var G__11969 = bitmap__11962;
        i__11960 = G__11967;
        j__11961 = G__11968;
        bitmap__11962 = G__11969;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__11962, new_arr__11959)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__11970 = this;
  var inode__11971 = this;
  var idx__11972 = hash >>> shift & 31;
  var node__11973 = this__11970.arr[idx__11972];
  if(node__11973 == null) {
    var editable__11974 = cljs.core.edit_and_set.call(null, inode__11971, edit, idx__11972, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__11974.cnt = editable__11974.cnt + 1;
    return editable__11974
  }else {
    var n__11975 = node__11973.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__11975 === node__11973) {
      return inode__11971
    }else {
      return cljs.core.edit_and_set.call(null, inode__11971, edit, idx__11972, n__11975)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__11976 = this;
  var inode__11977 = this;
  return cljs.core.create_array_node_seq.call(null, this__11976.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__11978 = this;
  var inode__11979 = this;
  var idx__11980 = hash >>> shift & 31;
  var node__11981 = this__11978.arr[idx__11980];
  if(node__11981 == null) {
    return inode__11979
  }else {
    var n__11982 = node__11981.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__11982 === node__11981) {
      return inode__11979
    }else {
      if(n__11982 == null) {
        if(this__11978.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__11979, edit, idx__11980)
        }else {
          var editable__11983 = cljs.core.edit_and_set.call(null, inode__11979, edit, idx__11980, n__11982);
          editable__11983.cnt = editable__11983.cnt - 1;
          return editable__11983
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__11979, edit, idx__11980, n__11982)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__11984 = this;
  var inode__11985 = this;
  if(e === this__11984.edit) {
    return inode__11985
  }else {
    return new cljs.core.ArrayNode(e, this__11984.cnt, this__11984.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__11986 = this;
  var inode__11987 = this;
  var len__11988 = this__11986.arr.length;
  var i__11989 = 0;
  var init__11990 = init;
  while(true) {
    if(i__11989 < len__11988) {
      var node__11991 = this__11986.arr[i__11989];
      if(!(node__11991 == null)) {
        var init__11992 = node__11991.kv_reduce(f, init__11990);
        if(cljs.core.reduced_QMARK_.call(null, init__11992)) {
          return cljs.core.deref.call(null, init__11992)
        }else {
          var G__12011 = i__11989 + 1;
          var G__12012 = init__11992;
          i__11989 = G__12011;
          init__11990 = G__12012;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__11990
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__11993 = this;
  var inode__11994 = this;
  var idx__11995 = hash >>> shift & 31;
  var node__11996 = this__11993.arr[idx__11995];
  if(!(node__11996 == null)) {
    return node__11996.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__11997 = this;
  var inode__11998 = this;
  var idx__11999 = hash >>> shift & 31;
  var node__12000 = this__11997.arr[idx__11999];
  if(!(node__12000 == null)) {
    var n__12001 = node__12000.inode_without(shift + 5, hash, key);
    if(n__12001 === node__12000) {
      return inode__11998
    }else {
      if(n__12001 == null) {
        if(this__11997.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__11998, null, idx__11999)
        }else {
          return new cljs.core.ArrayNode(null, this__11997.cnt - 1, cljs.core.clone_and_set.call(null, this__11997.arr, idx__11999, n__12001))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__11997.cnt, cljs.core.clone_and_set.call(null, this__11997.arr, idx__11999, n__12001))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__11998
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__12002 = this;
  var inode__12003 = this;
  var idx__12004 = hash >>> shift & 31;
  var node__12005 = this__12002.arr[idx__12004];
  if(node__12005 == null) {
    return new cljs.core.ArrayNode(null, this__12002.cnt + 1, cljs.core.clone_and_set.call(null, this__12002.arr, idx__12004, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__12006 = node__12005.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__12006 === node__12005) {
      return inode__12003
    }else {
      return new cljs.core.ArrayNode(null, this__12002.cnt, cljs.core.clone_and_set.call(null, this__12002.arr, idx__12004, n__12006))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__12007 = this;
  var inode__12008 = this;
  var idx__12009 = hash >>> shift & 31;
  var node__12010 = this__12007.arr[idx__12009];
  if(!(node__12010 == null)) {
    return node__12010.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__12015 = 2 * cnt;
  var i__12016 = 0;
  while(true) {
    if(i__12016 < lim__12015) {
      if(cljs.core.key_test.call(null, key, arr[i__12016])) {
        return i__12016
      }else {
        var G__12017 = i__12016 + 2;
        i__12016 = G__12017;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__12018 = this;
  var inode__12019 = this;
  if(hash === this__12018.collision_hash) {
    var idx__12020 = cljs.core.hash_collision_node_find_index.call(null, this__12018.arr, this__12018.cnt, key);
    if(idx__12020 === -1) {
      if(this__12018.arr.length > 2 * this__12018.cnt) {
        var editable__12021 = cljs.core.edit_and_set.call(null, inode__12019, edit, 2 * this__12018.cnt, key, 2 * this__12018.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__12021.cnt = editable__12021.cnt + 1;
        return editable__12021
      }else {
        var len__12022 = this__12018.arr.length;
        var new_arr__12023 = cljs.core.make_array.call(null, len__12022 + 2);
        cljs.core.array_copy.call(null, this__12018.arr, 0, new_arr__12023, 0, len__12022);
        new_arr__12023[len__12022] = key;
        new_arr__12023[len__12022 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__12019.ensure_editable_array(edit, this__12018.cnt + 1, new_arr__12023)
      }
    }else {
      if(this__12018.arr[idx__12020 + 1] === val) {
        return inode__12019
      }else {
        return cljs.core.edit_and_set.call(null, inode__12019, edit, idx__12020 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__12018.collision_hash >>> shift & 31), [null, inode__12019, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__12024 = this;
  var inode__12025 = this;
  return cljs.core.create_inode_seq.call(null, this__12024.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__12026 = this;
  var inode__12027 = this;
  var idx__12028 = cljs.core.hash_collision_node_find_index.call(null, this__12026.arr, this__12026.cnt, key);
  if(idx__12028 === -1) {
    return inode__12027
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__12026.cnt === 1) {
      return null
    }else {
      var editable__12029 = inode__12027.ensure_editable(edit);
      var earr__12030 = editable__12029.arr;
      earr__12030[idx__12028] = earr__12030[2 * this__12026.cnt - 2];
      earr__12030[idx__12028 + 1] = earr__12030[2 * this__12026.cnt - 1];
      earr__12030[2 * this__12026.cnt - 1] = null;
      earr__12030[2 * this__12026.cnt - 2] = null;
      editable__12029.cnt = editable__12029.cnt - 1;
      return editable__12029
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__12031 = this;
  var inode__12032 = this;
  if(e === this__12031.edit) {
    return inode__12032
  }else {
    var new_arr__12033 = cljs.core.make_array.call(null, 2 * (this__12031.cnt + 1));
    cljs.core.array_copy.call(null, this__12031.arr, 0, new_arr__12033, 0, 2 * this__12031.cnt);
    return new cljs.core.HashCollisionNode(e, this__12031.collision_hash, this__12031.cnt, new_arr__12033)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__12034 = this;
  var inode__12035 = this;
  return cljs.core.inode_kv_reduce.call(null, this__12034.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__12036 = this;
  var inode__12037 = this;
  var idx__12038 = cljs.core.hash_collision_node_find_index.call(null, this__12036.arr, this__12036.cnt, key);
  if(idx__12038 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__12036.arr[idx__12038])) {
      return cljs.core.PersistentVector.fromArray([this__12036.arr[idx__12038], this__12036.arr[idx__12038 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__12039 = this;
  var inode__12040 = this;
  var idx__12041 = cljs.core.hash_collision_node_find_index.call(null, this__12039.arr, this__12039.cnt, key);
  if(idx__12041 === -1) {
    return inode__12040
  }else {
    if(this__12039.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__12039.collision_hash, this__12039.cnt - 1, cljs.core.remove_pair.call(null, this__12039.arr, cljs.core.quot.call(null, idx__12041, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__12042 = this;
  var inode__12043 = this;
  if(hash === this__12042.collision_hash) {
    var idx__12044 = cljs.core.hash_collision_node_find_index.call(null, this__12042.arr, this__12042.cnt, key);
    if(idx__12044 === -1) {
      var len__12045 = this__12042.arr.length;
      var new_arr__12046 = cljs.core.make_array.call(null, len__12045 + 2);
      cljs.core.array_copy.call(null, this__12042.arr, 0, new_arr__12046, 0, len__12045);
      new_arr__12046[len__12045] = key;
      new_arr__12046[len__12045 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__12042.collision_hash, this__12042.cnt + 1, new_arr__12046)
    }else {
      if(cljs.core._EQ_.call(null, this__12042.arr[idx__12044], val)) {
        return inode__12043
      }else {
        return new cljs.core.HashCollisionNode(null, this__12042.collision_hash, this__12042.cnt, cljs.core.clone_and_set.call(null, this__12042.arr, idx__12044 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__12042.collision_hash >>> shift & 31), [null, inode__12043])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__12047 = this;
  var inode__12048 = this;
  var idx__12049 = cljs.core.hash_collision_node_find_index.call(null, this__12047.arr, this__12047.cnt, key);
  if(idx__12049 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__12047.arr[idx__12049])) {
      return this__12047.arr[idx__12049 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__12050 = this;
  var inode__12051 = this;
  if(e === this__12050.edit) {
    this__12050.arr = array;
    this__12050.cnt = count;
    return inode__12051
  }else {
    return new cljs.core.HashCollisionNode(this__12050.edit, this__12050.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__12056 = cljs.core.hash.call(null, key1);
    if(key1hash__12056 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__12056, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___12057 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__12056, key1, val1, added_leaf_QMARK___12057).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___12057)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__12058 = cljs.core.hash.call(null, key1);
    if(key1hash__12058 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__12058, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___12059 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__12058, key1, val1, added_leaf_QMARK___12059).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___12059)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12060 = this;
  var h__3598__auto____12061 = this__12060.__hash;
  if(!(h__3598__auto____12061 == null)) {
    return h__3598__auto____12061
  }else {
    var h__3598__auto____12062 = cljs.core.hash_coll.call(null, coll);
    this__12060.__hash = h__3598__auto____12062;
    return h__3598__auto____12062
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12063 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__12064 = this;
  var this__12065 = this;
  return cljs.core.pr_str.call(null, this__12065)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__12066 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12067 = this;
  if(this__12067.s == null) {
    return cljs.core.PersistentVector.fromArray([this__12067.nodes[this__12067.i], this__12067.nodes[this__12067.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__12067.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12068 = this;
  if(this__12068.s == null) {
    return cljs.core.create_inode_seq.call(null, this__12068.nodes, this__12068.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__12068.nodes, this__12068.i, cljs.core.next.call(null, this__12068.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12069 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12070 = this;
  return new cljs.core.NodeSeq(meta, this__12070.nodes, this__12070.i, this__12070.s, this__12070.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12071 = this;
  return this__12071.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12072 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__12072.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__12079 = nodes.length;
      var j__12080 = i;
      while(true) {
        if(j__12080 < len__12079) {
          if(!(nodes[j__12080] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__12080, null, null)
          }else {
            var temp__4090__auto____12081 = nodes[j__12080 + 1];
            if(cljs.core.truth_(temp__4090__auto____12081)) {
              var node__12082 = temp__4090__auto____12081;
              var temp__4090__auto____12083 = node__12082.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____12083)) {
                var node_seq__12084 = temp__4090__auto____12083;
                return new cljs.core.NodeSeq(null, nodes, j__12080 + 2, node_seq__12084, null)
              }else {
                var G__12085 = j__12080 + 2;
                j__12080 = G__12085;
                continue
              }
            }else {
              var G__12086 = j__12080 + 2;
              j__12080 = G__12086;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12087 = this;
  var h__3598__auto____12088 = this__12087.__hash;
  if(!(h__3598__auto____12088 == null)) {
    return h__3598__auto____12088
  }else {
    var h__3598__auto____12089 = cljs.core.hash_coll.call(null, coll);
    this__12087.__hash = h__3598__auto____12089;
    return h__3598__auto____12089
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12090 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__12091 = this;
  var this__12092 = this;
  return cljs.core.pr_str.call(null, this__12092)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__12093 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__12094 = this;
  return cljs.core.first.call(null, this__12094.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__12095 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__12095.nodes, this__12095.i, cljs.core.next.call(null, this__12095.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12096 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12097 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__12097.nodes, this__12097.i, this__12097.s, this__12097.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12098 = this;
  return this__12098.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12099 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__12099.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__12106 = nodes.length;
      var j__12107 = i;
      while(true) {
        if(j__12107 < len__12106) {
          var temp__4090__auto____12108 = nodes[j__12107];
          if(cljs.core.truth_(temp__4090__auto____12108)) {
            var nj__12109 = temp__4090__auto____12108;
            var temp__4090__auto____12110 = nj__12109.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____12110)) {
              var ns__12111 = temp__4090__auto____12110;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__12107 + 1, ns__12111, null)
            }else {
              var G__12112 = j__12107 + 1;
              j__12107 = G__12112;
              continue
            }
          }else {
            var G__12113 = j__12107 + 1;
            j__12107 = G__12113;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__12116 = this;
  return new cljs.core.TransientHashMap({}, this__12116.root, this__12116.cnt, this__12116.has_nil_QMARK_, this__12116.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12117 = this;
  var h__3598__auto____12118 = this__12117.__hash;
  if(!(h__3598__auto____12118 == null)) {
    return h__3598__auto____12118
  }else {
    var h__3598__auto____12119 = cljs.core.hash_imap.call(null, coll);
    this__12117.__hash = h__3598__auto____12119;
    return h__3598__auto____12119
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__12120 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__12121 = this;
  if(k == null) {
    if(this__12121.has_nil_QMARK_) {
      return this__12121.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__12121.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__12121.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__12122 = this;
  if(k == null) {
    if(function() {
      var and__3941__auto____12123 = this__12122.has_nil_QMARK_;
      if(and__3941__auto____12123) {
        return v === this__12122.nil_val
      }else {
        return and__3941__auto____12123
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__12122.meta, this__12122.has_nil_QMARK_ ? this__12122.cnt : this__12122.cnt + 1, this__12122.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___12124 = new cljs.core.Box(false);
    var new_root__12125 = (this__12122.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__12122.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___12124);
    if(new_root__12125 === this__12122.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__12122.meta, added_leaf_QMARK___12124.val ? this__12122.cnt + 1 : this__12122.cnt, new_root__12125, this__12122.has_nil_QMARK_, this__12122.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__12126 = this;
  if(k == null) {
    return this__12126.has_nil_QMARK_
  }else {
    if(this__12126.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__12126.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__12149 = null;
  var G__12149__2 = function(this_sym12127, k) {
    var this__12129 = this;
    var this_sym12127__12130 = this;
    var coll__12131 = this_sym12127__12130;
    return coll__12131.cljs$core$ILookup$_lookup$arity$2(coll__12131, k)
  };
  var G__12149__3 = function(this_sym12128, k, not_found) {
    var this__12129 = this;
    var this_sym12128__12132 = this;
    var coll__12133 = this_sym12128__12132;
    return coll__12133.cljs$core$ILookup$_lookup$arity$3(coll__12133, k, not_found)
  };
  G__12149 = function(this_sym12128, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12149__2.call(this, this_sym12128, k);
      case 3:
        return G__12149__3.call(this, this_sym12128, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12149
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym12114, args12115) {
  var this__12134 = this;
  return this_sym12114.call.apply(this_sym12114, [this_sym12114].concat(args12115.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__12135 = this;
  var init__12136 = this__12135.has_nil_QMARK_ ? f.call(null, init, null, this__12135.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__12136)) {
    return cljs.core.deref.call(null, init__12136)
  }else {
    if(!(this__12135.root == null)) {
      return this__12135.root.kv_reduce(f, init__12136)
    }else {
      if("\ufdd0'else") {
        return init__12136
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__12137 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__12138 = this;
  var this__12139 = this;
  return cljs.core.pr_str.call(null, this__12139)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12140 = this;
  if(this__12140.cnt > 0) {
    var s__12141 = !(this__12140.root == null) ? this__12140.root.inode_seq() : null;
    if(this__12140.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__12140.nil_val], true), s__12141)
    }else {
      return s__12141
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12142 = this;
  return this__12142.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12143 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12144 = this;
  return new cljs.core.PersistentHashMap(meta, this__12144.cnt, this__12144.root, this__12144.has_nil_QMARK_, this__12144.nil_val, this__12144.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12145 = this;
  return this__12145.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12146 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__12146.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__12147 = this;
  if(k == null) {
    if(this__12147.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__12147.meta, this__12147.cnt - 1, this__12147.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__12147.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__12148 = this__12147.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__12148 === this__12147.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__12147.meta, this__12147.cnt - 1, new_root__12148, this__12147.has_nil_QMARK_, this__12147.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__12150 = ks.length;
  var i__12151 = 0;
  var out__12152 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__12151 < len__12150) {
      var G__12153 = i__12151 + 1;
      var G__12154 = cljs.core.assoc_BANG_.call(null, out__12152, ks[i__12151], vs[i__12151]);
      i__12151 = G__12153;
      out__12152 = G__12154;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__12152)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__12155 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__12156 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__12157 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__12158 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__12159 = this;
  if(k == null) {
    if(this__12159.has_nil_QMARK_) {
      return this__12159.nil_val
    }else {
      return null
    }
  }else {
    if(this__12159.root == null) {
      return null
    }else {
      return this__12159.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__12160 = this;
  if(k == null) {
    if(this__12160.has_nil_QMARK_) {
      return this__12160.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__12160.root == null) {
      return not_found
    }else {
      return this__12160.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12161 = this;
  if(this__12161.edit) {
    return this__12161.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__12162 = this;
  var tcoll__12163 = this;
  if(this__12162.edit) {
    if(function() {
      var G__12164__12165 = o;
      if(G__12164__12165) {
        if(function() {
          var or__3943__auto____12166 = G__12164__12165.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto____12166) {
            return or__3943__auto____12166
          }else {
            return G__12164__12165.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__12164__12165.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__12164__12165)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__12164__12165)
      }
    }()) {
      return tcoll__12163.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__12167 = cljs.core.seq.call(null, o);
      var tcoll__12168 = tcoll__12163;
      while(true) {
        var temp__4090__auto____12169 = cljs.core.first.call(null, es__12167);
        if(cljs.core.truth_(temp__4090__auto____12169)) {
          var e__12170 = temp__4090__auto____12169;
          var G__12181 = cljs.core.next.call(null, es__12167);
          var G__12182 = tcoll__12168.assoc_BANG_(cljs.core.key.call(null, e__12170), cljs.core.val.call(null, e__12170));
          es__12167 = G__12181;
          tcoll__12168 = G__12182;
          continue
        }else {
          return tcoll__12168
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__12171 = this;
  var tcoll__12172 = this;
  if(this__12171.edit) {
    if(k == null) {
      if(this__12171.nil_val === v) {
      }else {
        this__12171.nil_val = v
      }
      if(this__12171.has_nil_QMARK_) {
      }else {
        this__12171.count = this__12171.count + 1;
        this__12171.has_nil_QMARK_ = true
      }
      return tcoll__12172
    }else {
      var added_leaf_QMARK___12173 = new cljs.core.Box(false);
      var node__12174 = (this__12171.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__12171.root).inode_assoc_BANG_(this__12171.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___12173);
      if(node__12174 === this__12171.root) {
      }else {
        this__12171.root = node__12174
      }
      if(added_leaf_QMARK___12173.val) {
        this__12171.count = this__12171.count + 1
      }else {
      }
      return tcoll__12172
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__12175 = this;
  var tcoll__12176 = this;
  if(this__12175.edit) {
    if(k == null) {
      if(this__12175.has_nil_QMARK_) {
        this__12175.has_nil_QMARK_ = false;
        this__12175.nil_val = null;
        this__12175.count = this__12175.count - 1;
        return tcoll__12176
      }else {
        return tcoll__12176
      }
    }else {
      if(this__12175.root == null) {
        return tcoll__12176
      }else {
        var removed_leaf_QMARK___12177 = new cljs.core.Box(false);
        var node__12178 = this__12175.root.inode_without_BANG_(this__12175.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___12177);
        if(node__12178 === this__12175.root) {
        }else {
          this__12175.root = node__12178
        }
        if(cljs.core.truth_(removed_leaf_QMARK___12177[0])) {
          this__12175.count = this__12175.count - 1
        }else {
        }
        return tcoll__12176
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__12179 = this;
  var tcoll__12180 = this;
  if(this__12179.edit) {
    this__12179.edit = null;
    return new cljs.core.PersistentHashMap(null, this__12179.count, this__12179.root, this__12179.has_nil_QMARK_, this__12179.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__12185 = node;
  var stack__12186 = stack;
  while(true) {
    if(!(t__12185 == null)) {
      var G__12187 = ascending_QMARK_ ? t__12185.left : t__12185.right;
      var G__12188 = cljs.core.conj.call(null, stack__12186, t__12185);
      t__12185 = G__12187;
      stack__12186 = G__12188;
      continue
    }else {
      return stack__12186
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12189 = this;
  var h__3598__auto____12190 = this__12189.__hash;
  if(!(h__3598__auto____12190 == null)) {
    return h__3598__auto____12190
  }else {
    var h__3598__auto____12191 = cljs.core.hash_coll.call(null, coll);
    this__12189.__hash = h__3598__auto____12191;
    return h__3598__auto____12191
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12192 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__12193 = this;
  var this__12194 = this;
  return cljs.core.pr_str.call(null, this__12194)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__12195 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12196 = this;
  if(this__12196.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__12196.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__12197 = this;
  return cljs.core.peek.call(null, this__12197.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__12198 = this;
  var t__12199 = cljs.core.first.call(null, this__12198.stack);
  var next_stack__12200 = cljs.core.tree_map_seq_push.call(null, this__12198.ascending_QMARK_ ? t__12199.right : t__12199.left, cljs.core.next.call(null, this__12198.stack), this__12198.ascending_QMARK_);
  if(!(next_stack__12200 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__12200, this__12198.ascending_QMARK_, this__12198.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12201 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12202 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__12202.stack, this__12202.ascending_QMARK_, this__12202.cnt, this__12202.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12203 = this;
  return this__12203.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3941__auto____12205 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3941__auto____12205) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3941__auto____12205
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3941__auto____12207 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3941__auto____12207) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3941__auto____12207
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__12211 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__12211)) {
    return cljs.core.deref.call(null, init__12211)
  }else {
    var init__12212 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__12211) : init__12211;
    if(cljs.core.reduced_QMARK_.call(null, init__12212)) {
      return cljs.core.deref.call(null, init__12212)
    }else {
      var init__12213 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__12212) : init__12212;
      if(cljs.core.reduced_QMARK_.call(null, init__12213)) {
        return cljs.core.deref.call(null, init__12213)
      }else {
        return init__12213
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12216 = this;
  var h__3598__auto____12217 = this__12216.__hash;
  if(!(h__3598__auto____12217 == null)) {
    return h__3598__auto____12217
  }else {
    var h__3598__auto____12218 = cljs.core.hash_coll.call(null, coll);
    this__12216.__hash = h__3598__auto____12218;
    return h__3598__auto____12218
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__12219 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__12220 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__12221 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__12221.key, this__12221.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__12269 = null;
  var G__12269__2 = function(this_sym12222, k) {
    var this__12224 = this;
    var this_sym12222__12225 = this;
    var node__12226 = this_sym12222__12225;
    return node__12226.cljs$core$ILookup$_lookup$arity$2(node__12226, k)
  };
  var G__12269__3 = function(this_sym12223, k, not_found) {
    var this__12224 = this;
    var this_sym12223__12227 = this;
    var node__12228 = this_sym12223__12227;
    return node__12228.cljs$core$ILookup$_lookup$arity$3(node__12228, k, not_found)
  };
  G__12269 = function(this_sym12223, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12269__2.call(this, this_sym12223, k);
      case 3:
        return G__12269__3.call(this, this_sym12223, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12269
}();
cljs.core.BlackNode.prototype.apply = function(this_sym12214, args12215) {
  var this__12229 = this;
  return this_sym12214.call.apply(this_sym12214, [this_sym12214].concat(args12215.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__12230 = this;
  return cljs.core.PersistentVector.fromArray([this__12230.key, this__12230.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__12231 = this;
  return this__12231.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__12232 = this;
  return this__12232.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__12233 = this;
  var node__12234 = this;
  return ins.balance_right(node__12234)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__12235 = this;
  var node__12236 = this;
  return new cljs.core.RedNode(this__12235.key, this__12235.val, this__12235.left, this__12235.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__12237 = this;
  var node__12238 = this;
  return cljs.core.balance_right_del.call(null, this__12237.key, this__12237.val, this__12237.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__12239 = this;
  var node__12240 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__12241 = this;
  var node__12242 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__12242, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__12243 = this;
  var node__12244 = this;
  return cljs.core.balance_left_del.call(null, this__12243.key, this__12243.val, del, this__12243.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__12245 = this;
  var node__12246 = this;
  return ins.balance_left(node__12246)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__12247 = this;
  var node__12248 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__12248, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__12270 = null;
  var G__12270__0 = function() {
    var this__12249 = this;
    var this__12251 = this;
    return cljs.core.pr_str.call(null, this__12251)
  };
  G__12270 = function() {
    switch(arguments.length) {
      case 0:
        return G__12270__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12270
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__12252 = this;
  var node__12253 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__12253, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__12254 = this;
  var node__12255 = this;
  return node__12255
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__12256 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__12257 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__12258 = this;
  return cljs.core.list.call(null, this__12258.key, this__12258.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__12259 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__12260 = this;
  return this__12260.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__12261 = this;
  return cljs.core.PersistentVector.fromArray([this__12261.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__12262 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__12262.key, this__12262.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12263 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__12264 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__12264.key, this__12264.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__12265 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__12266 = this;
  if(n === 0) {
    return this__12266.key
  }else {
    if(n === 1) {
      return this__12266.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__12267 = this;
  if(n === 0) {
    return this__12267.key
  }else {
    if(n === 1) {
      return this__12267.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__12268 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12273 = this;
  var h__3598__auto____12274 = this__12273.__hash;
  if(!(h__3598__auto____12274 == null)) {
    return h__3598__auto____12274
  }else {
    var h__3598__auto____12275 = cljs.core.hash_coll.call(null, coll);
    this__12273.__hash = h__3598__auto____12275;
    return h__3598__auto____12275
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__12276 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__12277 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__12278 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__12278.key, this__12278.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__12326 = null;
  var G__12326__2 = function(this_sym12279, k) {
    var this__12281 = this;
    var this_sym12279__12282 = this;
    var node__12283 = this_sym12279__12282;
    return node__12283.cljs$core$ILookup$_lookup$arity$2(node__12283, k)
  };
  var G__12326__3 = function(this_sym12280, k, not_found) {
    var this__12281 = this;
    var this_sym12280__12284 = this;
    var node__12285 = this_sym12280__12284;
    return node__12285.cljs$core$ILookup$_lookup$arity$3(node__12285, k, not_found)
  };
  G__12326 = function(this_sym12280, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12326__2.call(this, this_sym12280, k);
      case 3:
        return G__12326__3.call(this, this_sym12280, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12326
}();
cljs.core.RedNode.prototype.apply = function(this_sym12271, args12272) {
  var this__12286 = this;
  return this_sym12271.call.apply(this_sym12271, [this_sym12271].concat(args12272.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__12287 = this;
  return cljs.core.PersistentVector.fromArray([this__12287.key, this__12287.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__12288 = this;
  return this__12288.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__12289 = this;
  return this__12289.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__12290 = this;
  var node__12291 = this;
  return new cljs.core.RedNode(this__12290.key, this__12290.val, this__12290.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__12292 = this;
  var node__12293 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__12294 = this;
  var node__12295 = this;
  return new cljs.core.RedNode(this__12294.key, this__12294.val, this__12294.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__12296 = this;
  var node__12297 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__12298 = this;
  var node__12299 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__12299, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__12300 = this;
  var node__12301 = this;
  return new cljs.core.RedNode(this__12300.key, this__12300.val, del, this__12300.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__12302 = this;
  var node__12303 = this;
  return new cljs.core.RedNode(this__12302.key, this__12302.val, ins, this__12302.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__12304 = this;
  var node__12305 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__12304.left)) {
    return new cljs.core.RedNode(this__12304.key, this__12304.val, this__12304.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__12304.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__12304.right)) {
      return new cljs.core.RedNode(this__12304.right.key, this__12304.right.val, new cljs.core.BlackNode(this__12304.key, this__12304.val, this__12304.left, this__12304.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__12304.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__12305, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__12327 = null;
  var G__12327__0 = function() {
    var this__12306 = this;
    var this__12308 = this;
    return cljs.core.pr_str.call(null, this__12308)
  };
  G__12327 = function() {
    switch(arguments.length) {
      case 0:
        return G__12327__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12327
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__12309 = this;
  var node__12310 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__12309.right)) {
    return new cljs.core.RedNode(this__12309.key, this__12309.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__12309.left, null), this__12309.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__12309.left)) {
      return new cljs.core.RedNode(this__12309.left.key, this__12309.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__12309.left.left, null), new cljs.core.BlackNode(this__12309.key, this__12309.val, this__12309.left.right, this__12309.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__12310, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__12311 = this;
  var node__12312 = this;
  return new cljs.core.BlackNode(this__12311.key, this__12311.val, this__12311.left, this__12311.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__12313 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__12314 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__12315 = this;
  return cljs.core.list.call(null, this__12315.key, this__12315.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__12316 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__12317 = this;
  return this__12317.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__12318 = this;
  return cljs.core.PersistentVector.fromArray([this__12318.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__12319 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__12319.key, this__12319.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12320 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__12321 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__12321.key, this__12321.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__12322 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__12323 = this;
  if(n === 0) {
    return this__12323.key
  }else {
    if(n === 1) {
      return this__12323.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__12324 = this;
  if(n === 0) {
    return this__12324.key
  }else {
    if(n === 1) {
      return this__12324.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__12325 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__12331 = comp.call(null, k, tree.key);
    if(c__12331 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__12331 < 0) {
        var ins__12332 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__12332 == null)) {
          return tree.add_left(ins__12332)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__12333 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__12333 == null)) {
            return tree.add_right(ins__12333)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__12336 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__12336)) {
            return new cljs.core.RedNode(app__12336.key, app__12336.val, new cljs.core.RedNode(left.key, left.val, left.left, app__12336.left, null), new cljs.core.RedNode(right.key, right.val, app__12336.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__12336, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__12337 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__12337)) {
              return new cljs.core.RedNode(app__12337.key, app__12337.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__12337.left, null), new cljs.core.BlackNode(right.key, right.val, app__12337.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__12337, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__12343 = comp.call(null, k, tree.key);
    if(c__12343 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__12343 < 0) {
        var del__12344 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3943__auto____12345 = !(del__12344 == null);
          if(or__3943__auto____12345) {
            return or__3943__auto____12345
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__12344, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__12344, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__12346 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3943__auto____12347 = !(del__12346 == null);
            if(or__3943__auto____12347) {
              return or__3943__auto____12347
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__12346)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__12346, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__12350 = tree.key;
  var c__12351 = comp.call(null, k, tk__12350);
  if(c__12351 === 0) {
    return tree.replace(tk__12350, v, tree.left, tree.right)
  }else {
    if(c__12351 < 0) {
      return tree.replace(tk__12350, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__12350, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12354 = this;
  var h__3598__auto____12355 = this__12354.__hash;
  if(!(h__3598__auto____12355 == null)) {
    return h__3598__auto____12355
  }else {
    var h__3598__auto____12356 = cljs.core.hash_imap.call(null, coll);
    this__12354.__hash = h__3598__auto____12356;
    return h__3598__auto____12356
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__12357 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__12358 = this;
  var n__12359 = coll.entry_at(k);
  if(!(n__12359 == null)) {
    return n__12359.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__12360 = this;
  var found__12361 = [null];
  var t__12362 = cljs.core.tree_map_add.call(null, this__12360.comp, this__12360.tree, k, v, found__12361);
  if(t__12362 == null) {
    var found_node__12363 = cljs.core.nth.call(null, found__12361, 0);
    if(cljs.core._EQ_.call(null, v, found_node__12363.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__12360.comp, cljs.core.tree_map_replace.call(null, this__12360.comp, this__12360.tree, k, v), this__12360.cnt, this__12360.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__12360.comp, t__12362.blacken(), this__12360.cnt + 1, this__12360.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__12364 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__12398 = null;
  var G__12398__2 = function(this_sym12365, k) {
    var this__12367 = this;
    var this_sym12365__12368 = this;
    var coll__12369 = this_sym12365__12368;
    return coll__12369.cljs$core$ILookup$_lookup$arity$2(coll__12369, k)
  };
  var G__12398__3 = function(this_sym12366, k, not_found) {
    var this__12367 = this;
    var this_sym12366__12370 = this;
    var coll__12371 = this_sym12366__12370;
    return coll__12371.cljs$core$ILookup$_lookup$arity$3(coll__12371, k, not_found)
  };
  G__12398 = function(this_sym12366, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12398__2.call(this, this_sym12366, k);
      case 3:
        return G__12398__3.call(this, this_sym12366, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12398
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym12352, args12353) {
  var this__12372 = this;
  return this_sym12352.call.apply(this_sym12352, [this_sym12352].concat(args12353.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__12373 = this;
  if(!(this__12373.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__12373.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__12374 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__12375 = this;
  if(this__12375.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__12375.tree, false, this__12375.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__12376 = this;
  var this__12377 = this;
  return cljs.core.pr_str.call(null, this__12377)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__12378 = this;
  var coll__12379 = this;
  var t__12380 = this__12378.tree;
  while(true) {
    if(!(t__12380 == null)) {
      var c__12381 = this__12378.comp.call(null, k, t__12380.key);
      if(c__12381 === 0) {
        return t__12380
      }else {
        if(c__12381 < 0) {
          var G__12399 = t__12380.left;
          t__12380 = G__12399;
          continue
        }else {
          if("\ufdd0'else") {
            var G__12400 = t__12380.right;
            t__12380 = G__12400;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__12382 = this;
  if(this__12382.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__12382.tree, ascending_QMARK_, this__12382.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__12383 = this;
  if(this__12383.cnt > 0) {
    var stack__12384 = null;
    var t__12385 = this__12383.tree;
    while(true) {
      if(!(t__12385 == null)) {
        var c__12386 = this__12383.comp.call(null, k, t__12385.key);
        if(c__12386 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__12384, t__12385), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__12386 < 0) {
              var G__12401 = cljs.core.conj.call(null, stack__12384, t__12385);
              var G__12402 = t__12385.left;
              stack__12384 = G__12401;
              t__12385 = G__12402;
              continue
            }else {
              var G__12403 = stack__12384;
              var G__12404 = t__12385.right;
              stack__12384 = G__12403;
              t__12385 = G__12404;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__12386 > 0) {
                var G__12405 = cljs.core.conj.call(null, stack__12384, t__12385);
                var G__12406 = t__12385.right;
                stack__12384 = G__12405;
                t__12385 = G__12406;
                continue
              }else {
                var G__12407 = stack__12384;
                var G__12408 = t__12385.left;
                stack__12384 = G__12407;
                t__12385 = G__12408;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__12384 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__12384, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__12387 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__12388 = this;
  return this__12388.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12389 = this;
  if(this__12389.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__12389.tree, true, this__12389.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12390 = this;
  return this__12390.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12391 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12392 = this;
  return new cljs.core.PersistentTreeMap(this__12392.comp, this__12392.tree, this__12392.cnt, meta, this__12392.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12393 = this;
  return this__12393.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12394 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__12394.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__12395 = this;
  var found__12396 = [null];
  var t__12397 = cljs.core.tree_map_remove.call(null, this__12395.comp, this__12395.tree, k, found__12396);
  if(t__12397 == null) {
    if(cljs.core.nth.call(null, found__12396, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__12395.comp, null, 0, this__12395.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__12395.comp, t__12397.blacken(), this__12395.cnt - 1, this__12395.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__12411 = cljs.core.seq.call(null, keyvals);
    var out__12412 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__12411) {
        var G__12413 = cljs.core.nnext.call(null, in__12411);
        var G__12414 = cljs.core.assoc_BANG_.call(null, out__12412, cljs.core.first.call(null, in__12411), cljs.core.second.call(null, in__12411));
        in__12411 = G__12413;
        out__12412 = G__12414;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__12412)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__12415) {
    var keyvals = cljs.core.seq(arglist__12415);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__12416) {
    var keyvals = cljs.core.seq(arglist__12416);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__12420 = [];
    var obj__12421 = {};
    var kvs__12422 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__12422) {
        ks__12420.push(cljs.core.first.call(null, kvs__12422));
        obj__12421[cljs.core.first.call(null, kvs__12422)] = cljs.core.second.call(null, kvs__12422);
        var G__12423 = cljs.core.nnext.call(null, kvs__12422);
        kvs__12422 = G__12423;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__12420, obj__12421)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__12424) {
    var keyvals = cljs.core.seq(arglist__12424);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__12427 = cljs.core.seq.call(null, keyvals);
    var out__12428 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__12427) {
        var G__12429 = cljs.core.nnext.call(null, in__12427);
        var G__12430 = cljs.core.assoc.call(null, out__12428, cljs.core.first.call(null, in__12427), cljs.core.second.call(null, in__12427));
        in__12427 = G__12429;
        out__12428 = G__12430;
        continue
      }else {
        return out__12428
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__12431) {
    var keyvals = cljs.core.seq(arglist__12431);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__12434 = cljs.core.seq.call(null, keyvals);
    var out__12435 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__12434) {
        var G__12436 = cljs.core.nnext.call(null, in__12434);
        var G__12437 = cljs.core.assoc.call(null, out__12435, cljs.core.first.call(null, in__12434), cljs.core.second.call(null, in__12434));
        in__12434 = G__12436;
        out__12435 = G__12437;
        continue
      }else {
        return out__12435
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__12438) {
    var comparator = cljs.core.first(arglist__12438);
    var keyvals = cljs.core.rest(arglist__12438);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__12439_SHARP_, p2__12440_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3943__auto____12442 = p1__12439_SHARP_;
          if(cljs.core.truth_(or__3943__auto____12442)) {
            return or__3943__auto____12442
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__12440_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__12443) {
    var maps = cljs.core.seq(arglist__12443);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__12451 = function(m, e) {
        var k__12449 = cljs.core.first.call(null, e);
        var v__12450 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__12449)) {
          return cljs.core.assoc.call(null, m, k__12449, f.call(null, cljs.core._lookup.call(null, m, k__12449, null), v__12450))
        }else {
          return cljs.core.assoc.call(null, m, k__12449, v__12450)
        }
      };
      var merge2__12453 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__12451, function() {
          var or__3943__auto____12452 = m1;
          if(cljs.core.truth_(or__3943__auto____12452)) {
            return or__3943__auto____12452
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__12453, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__12454) {
    var f = cljs.core.first(arglist__12454);
    var maps = cljs.core.rest(arglist__12454);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__12459 = cljs.core.ObjMap.EMPTY;
  var keys__12460 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__12460) {
      var key__12461 = cljs.core.first.call(null, keys__12460);
      var entry__12462 = cljs.core._lookup.call(null, map, key__12461, "\ufdd0'cljs.core/not-found");
      var G__12463 = cljs.core.not_EQ_.call(null, entry__12462, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__12459, key__12461, entry__12462) : ret__12459;
      var G__12464 = cljs.core.next.call(null, keys__12460);
      ret__12459 = G__12463;
      keys__12460 = G__12464;
      continue
    }else {
      return ret__12459
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__12468 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__12468.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12469 = this;
  var h__3598__auto____12470 = this__12469.__hash;
  if(!(h__3598__auto____12470 == null)) {
    return h__3598__auto____12470
  }else {
    var h__3598__auto____12471 = cljs.core.hash_iset.call(null, coll);
    this__12469.__hash = h__3598__auto____12471;
    return h__3598__auto____12471
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__12472 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__12473 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__12473.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__12494 = null;
  var G__12494__2 = function(this_sym12474, k) {
    var this__12476 = this;
    var this_sym12474__12477 = this;
    var coll__12478 = this_sym12474__12477;
    return coll__12478.cljs$core$ILookup$_lookup$arity$2(coll__12478, k)
  };
  var G__12494__3 = function(this_sym12475, k, not_found) {
    var this__12476 = this;
    var this_sym12475__12479 = this;
    var coll__12480 = this_sym12475__12479;
    return coll__12480.cljs$core$ILookup$_lookup$arity$3(coll__12480, k, not_found)
  };
  G__12494 = function(this_sym12475, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12494__2.call(this, this_sym12475, k);
      case 3:
        return G__12494__3.call(this, this_sym12475, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12494
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym12466, args12467) {
  var this__12481 = this;
  return this_sym12466.call.apply(this_sym12466, [this_sym12466].concat(args12467.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12482 = this;
  return new cljs.core.PersistentHashSet(this__12482.meta, cljs.core.assoc.call(null, this__12482.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__12483 = this;
  var this__12484 = this;
  return cljs.core.pr_str.call(null, this__12484)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12485 = this;
  return cljs.core.keys.call(null, this__12485.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__12486 = this;
  return new cljs.core.PersistentHashSet(this__12486.meta, cljs.core.dissoc.call(null, this__12486.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12487 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12488 = this;
  var and__3941__auto____12489 = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto____12489) {
    var and__3941__auto____12490 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____12490) {
      return cljs.core.every_QMARK_.call(null, function(p1__12465_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__12465_SHARP_)
      }, other)
    }else {
      return and__3941__auto____12490
    }
  }else {
    return and__3941__auto____12489
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12491 = this;
  return new cljs.core.PersistentHashSet(meta, this__12491.hash_map, this__12491.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12492 = this;
  return this__12492.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12493 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__12493.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__12495 = cljs.core.count.call(null, items);
  var i__12496 = 0;
  var out__12497 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__12496 < len__12495) {
      var G__12498 = i__12496 + 1;
      var G__12499 = cljs.core.conj_BANG_.call(null, out__12497, items[i__12496]);
      i__12496 = G__12498;
      out__12497 = G__12499;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__12497)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__12517 = null;
  var G__12517__2 = function(this_sym12503, k) {
    var this__12505 = this;
    var this_sym12503__12506 = this;
    var tcoll__12507 = this_sym12503__12506;
    if(cljs.core._lookup.call(null, this__12505.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__12517__3 = function(this_sym12504, k, not_found) {
    var this__12505 = this;
    var this_sym12504__12508 = this;
    var tcoll__12509 = this_sym12504__12508;
    if(cljs.core._lookup.call(null, this__12505.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__12517 = function(this_sym12504, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12517__2.call(this, this_sym12504, k);
      case 3:
        return G__12517__3.call(this, this_sym12504, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12517
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym12501, args12502) {
  var this__12510 = this;
  return this_sym12501.call.apply(this_sym12501, [this_sym12501].concat(args12502.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__12511 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__12512 = this;
  if(cljs.core._lookup.call(null, this__12512.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__12513 = this;
  return cljs.core.count.call(null, this__12513.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__12514 = this;
  this__12514.transient_map = cljs.core.dissoc_BANG_.call(null, this__12514.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__12515 = this;
  this__12515.transient_map = cljs.core.assoc_BANG_.call(null, this__12515.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__12516 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__12516.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__12520 = this;
  var h__3598__auto____12521 = this__12520.__hash;
  if(!(h__3598__auto____12521 == null)) {
    return h__3598__auto____12521
  }else {
    var h__3598__auto____12522 = cljs.core.hash_iset.call(null, coll);
    this__12520.__hash = h__3598__auto____12522;
    return h__3598__auto____12522
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__12523 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__12524 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__12524.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__12550 = null;
  var G__12550__2 = function(this_sym12525, k) {
    var this__12527 = this;
    var this_sym12525__12528 = this;
    var coll__12529 = this_sym12525__12528;
    return coll__12529.cljs$core$ILookup$_lookup$arity$2(coll__12529, k)
  };
  var G__12550__3 = function(this_sym12526, k, not_found) {
    var this__12527 = this;
    var this_sym12526__12530 = this;
    var coll__12531 = this_sym12526__12530;
    return coll__12531.cljs$core$ILookup$_lookup$arity$3(coll__12531, k, not_found)
  };
  G__12550 = function(this_sym12526, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12550__2.call(this, this_sym12526, k);
      case 3:
        return G__12550__3.call(this, this_sym12526, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12550
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym12518, args12519) {
  var this__12532 = this;
  return this_sym12518.call.apply(this_sym12518, [this_sym12518].concat(args12519.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__12533 = this;
  return new cljs.core.PersistentTreeSet(this__12533.meta, cljs.core.assoc.call(null, this__12533.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__12534 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__12534.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__12535 = this;
  var this__12536 = this;
  return cljs.core.pr_str.call(null, this__12536)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__12537 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__12537.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__12538 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__12538.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__12539 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__12540 = this;
  return cljs.core._comparator.call(null, this__12540.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__12541 = this;
  return cljs.core.keys.call(null, this__12541.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__12542 = this;
  return new cljs.core.PersistentTreeSet(this__12542.meta, cljs.core.dissoc.call(null, this__12542.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__12543 = this;
  return cljs.core.count.call(null, this__12543.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__12544 = this;
  var and__3941__auto____12545 = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto____12545) {
    var and__3941__auto____12546 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____12546) {
      return cljs.core.every_QMARK_.call(null, function(p1__12500_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__12500_SHARP_)
      }, other)
    }else {
      return and__3941__auto____12546
    }
  }else {
    return and__3941__auto____12545
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__12547 = this;
  return new cljs.core.PersistentTreeSet(meta, this__12547.tree_map, this__12547.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__12548 = this;
  return this__12548.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__12549 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__12549.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__12555__delegate = function(keys) {
      var in__12553 = cljs.core.seq.call(null, keys);
      var out__12554 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__12553)) {
          var G__12556 = cljs.core.next.call(null, in__12553);
          var G__12557 = cljs.core.conj_BANG_.call(null, out__12554, cljs.core.first.call(null, in__12553));
          in__12553 = G__12556;
          out__12554 = G__12557;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__12554)
        }
        break
      }
    };
    var G__12555 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12555__delegate.call(this, keys)
    };
    G__12555.cljs$lang$maxFixedArity = 0;
    G__12555.cljs$lang$applyTo = function(arglist__12558) {
      var keys = cljs.core.seq(arglist__12558);
      return G__12555__delegate(keys)
    };
    G__12555.cljs$lang$arity$variadic = G__12555__delegate;
    return G__12555
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__12559) {
    var keys = cljs.core.seq(arglist__12559);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__12561) {
    var comparator = cljs.core.first(arglist__12561);
    var keys = cljs.core.rest(arglist__12561);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__12567 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto____12568 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto____12568)) {
        var e__12569 = temp__4090__auto____12568;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__12569))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__12567, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__12560_SHARP_) {
      var temp__4090__auto____12570 = cljs.core.find.call(null, smap, p1__12560_SHARP_);
      if(cljs.core.truth_(temp__4090__auto____12570)) {
        var e__12571 = temp__4090__auto____12570;
        return cljs.core.second.call(null, e__12571)
      }else {
        return p1__12560_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__12601 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__12594, seen) {
        while(true) {
          var vec__12595__12596 = p__12594;
          var f__12597 = cljs.core.nth.call(null, vec__12595__12596, 0, null);
          var xs__12598 = vec__12595__12596;
          var temp__4092__auto____12599 = cljs.core.seq.call(null, xs__12598);
          if(temp__4092__auto____12599) {
            var s__12600 = temp__4092__auto____12599;
            if(cljs.core.contains_QMARK_.call(null, seen, f__12597)) {
              var G__12602 = cljs.core.rest.call(null, s__12600);
              var G__12603 = seen;
              p__12594 = G__12602;
              seen = G__12603;
              continue
            }else {
              return cljs.core.cons.call(null, f__12597, step.call(null, cljs.core.rest.call(null, s__12600), cljs.core.conj.call(null, seen, f__12597)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__12601.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__12606 = cljs.core.PersistentVector.EMPTY;
  var s__12607 = s;
  while(true) {
    if(cljs.core.next.call(null, s__12607)) {
      var G__12608 = cljs.core.conj.call(null, ret__12606, cljs.core.first.call(null, s__12607));
      var G__12609 = cljs.core.next.call(null, s__12607);
      ret__12606 = G__12608;
      s__12607 = G__12609;
      continue
    }else {
      return cljs.core.seq.call(null, ret__12606)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3943__auto____12612 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3943__auto____12612) {
        return or__3943__auto____12612
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__12613 = x.lastIndexOf("/");
      if(i__12613 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__12613 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3943__auto____12616 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3943__auto____12616) {
      return or__3943__auto____12616
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__12617 = x.lastIndexOf("/");
    if(i__12617 > -1) {
      return cljs.core.subs.call(null, x, 2, i__12617)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__12624 = cljs.core.ObjMap.EMPTY;
  var ks__12625 = cljs.core.seq.call(null, keys);
  var vs__12626 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3941__auto____12627 = ks__12625;
      if(and__3941__auto____12627) {
        return vs__12626
      }else {
        return and__3941__auto____12627
      }
    }()) {
      var G__12628 = cljs.core.assoc.call(null, map__12624, cljs.core.first.call(null, ks__12625), cljs.core.first.call(null, vs__12626));
      var G__12629 = cljs.core.next.call(null, ks__12625);
      var G__12630 = cljs.core.next.call(null, vs__12626);
      map__12624 = G__12628;
      ks__12625 = G__12629;
      vs__12626 = G__12630;
      continue
    }else {
      return map__12624
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__12633__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__12618_SHARP_, p2__12619_SHARP_) {
        return max_key.call(null, k, p1__12618_SHARP_, p2__12619_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__12633 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12633__delegate.call(this, k, x, y, more)
    };
    G__12633.cljs$lang$maxFixedArity = 3;
    G__12633.cljs$lang$applyTo = function(arglist__12634) {
      var k = cljs.core.first(arglist__12634);
      var x = cljs.core.first(cljs.core.next(arglist__12634));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12634)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12634)));
      return G__12633__delegate(k, x, y, more)
    };
    G__12633.cljs$lang$arity$variadic = G__12633__delegate;
    return G__12633
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__12635__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__12631_SHARP_, p2__12632_SHARP_) {
        return min_key.call(null, k, p1__12631_SHARP_, p2__12632_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__12635 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12635__delegate.call(this, k, x, y, more)
    };
    G__12635.cljs$lang$maxFixedArity = 3;
    G__12635.cljs$lang$applyTo = function(arglist__12636) {
      var k = cljs.core.first(arglist__12636);
      var x = cljs.core.first(cljs.core.next(arglist__12636));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12636)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12636)));
      return G__12635__delegate(k, x, y, more)
    };
    G__12635.cljs$lang$arity$variadic = G__12635__delegate;
    return G__12635
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____12639 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____12639) {
        var s__12640 = temp__4092__auto____12639;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__12640), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__12640)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____12643 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____12643) {
      var s__12644 = temp__4092__auto____12643;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__12644)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__12644), take_while.call(null, pred, cljs.core.rest.call(null, s__12644)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__12646 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__12646.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__12658 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__4092__auto____12659 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto____12659)) {
        var vec__12660__12661 = temp__4092__auto____12659;
        var e__12662 = cljs.core.nth.call(null, vec__12660__12661, 0, null);
        var s__12663 = vec__12660__12661;
        if(cljs.core.truth_(include__12658.call(null, e__12662))) {
          return s__12663
        }else {
          return cljs.core.next.call(null, s__12663)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__12658, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto____12664 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto____12664)) {
      var vec__12665__12666 = temp__4092__auto____12664;
      var e__12667 = cljs.core.nth.call(null, vec__12665__12666, 0, null);
      var s__12668 = vec__12665__12666;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__12667)) ? s__12668 : cljs.core.next.call(null, s__12668))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__12680 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__4092__auto____12681 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto____12681)) {
        var vec__12682__12683 = temp__4092__auto____12681;
        var e__12684 = cljs.core.nth.call(null, vec__12682__12683, 0, null);
        var s__12685 = vec__12682__12683;
        if(cljs.core.truth_(include__12680.call(null, e__12684))) {
          return s__12685
        }else {
          return cljs.core.next.call(null, s__12685)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__12680, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto____12686 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto____12686)) {
      var vec__12687__12688 = temp__4092__auto____12686;
      var e__12689 = cljs.core.nth.call(null, vec__12687__12688, 0, null);
      var s__12690 = vec__12687__12688;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__12689)) ? s__12690 : cljs.core.next.call(null, s__12690))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__12691 = this;
  var h__3598__auto____12692 = this__12691.__hash;
  if(!(h__3598__auto____12692 == null)) {
    return h__3598__auto____12692
  }else {
    var h__3598__auto____12693 = cljs.core.hash_coll.call(null, rng);
    this__12691.__hash = h__3598__auto____12693;
    return h__3598__auto____12693
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__12694 = this;
  if(this__12694.step > 0) {
    if(this__12694.start + this__12694.step < this__12694.end) {
      return new cljs.core.Range(this__12694.meta, this__12694.start + this__12694.step, this__12694.end, this__12694.step, null)
    }else {
      return null
    }
  }else {
    if(this__12694.start + this__12694.step > this__12694.end) {
      return new cljs.core.Range(this__12694.meta, this__12694.start + this__12694.step, this__12694.end, this__12694.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__12695 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__12696 = this;
  var this__12697 = this;
  return cljs.core.pr_str.call(null, this__12697)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__12698 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__12699 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__12700 = this;
  if(this__12700.step > 0) {
    if(this__12700.start < this__12700.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__12700.start > this__12700.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__12701 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__12701.end - this__12701.start) / this__12701.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__12702 = this;
  return this__12702.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__12703 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__12703.meta, this__12703.start + this__12703.step, this__12703.end, this__12703.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__12704 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__12705 = this;
  return new cljs.core.Range(meta, this__12705.start, this__12705.end, this__12705.step, this__12705.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__12706 = this;
  return this__12706.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__12707 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__12707.start + n * this__12707.step
  }else {
    if(function() {
      var and__3941__auto____12708 = this__12707.start > this__12707.end;
      if(and__3941__auto____12708) {
        return this__12707.step === 0
      }else {
        return and__3941__auto____12708
      }
    }()) {
      return this__12707.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__12709 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__12709.start + n * this__12709.step
  }else {
    if(function() {
      var and__3941__auto____12710 = this__12709.start > this__12709.end;
      if(and__3941__auto____12710) {
        return this__12709.step === 0
      }else {
        return and__3941__auto____12710
      }
    }()) {
      return this__12709.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__12711 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__12711.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____12714 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____12714) {
      var s__12715 = temp__4092__auto____12714;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__12715), take_nth.call(null, n, cljs.core.drop.call(null, n, s__12715)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____12722 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____12722) {
      var s__12723 = temp__4092__auto____12722;
      var fst__12724 = cljs.core.first.call(null, s__12723);
      var fv__12725 = f.call(null, fst__12724);
      var run__12726 = cljs.core.cons.call(null, fst__12724, cljs.core.take_while.call(null, function(p1__12716_SHARP_) {
        return cljs.core._EQ_.call(null, fv__12725, f.call(null, p1__12716_SHARP_))
      }, cljs.core.next.call(null, s__12723)));
      return cljs.core.cons.call(null, run__12726, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__12726), s__12723))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto____12741 = cljs.core.seq.call(null, coll);
      if(temp__4090__auto____12741) {
        var s__12742 = temp__4090__auto____12741;
        return reductions.call(null, f, cljs.core.first.call(null, s__12742), cljs.core.rest.call(null, s__12742))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____12743 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____12743) {
        var s__12744 = temp__4092__auto____12743;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__12744)), cljs.core.rest.call(null, s__12744))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__12747 = null;
      var G__12747__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__12747__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__12747__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__12747__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__12747__4 = function() {
        var G__12748__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__12748 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12748__delegate.call(this, x, y, z, args)
        };
        G__12748.cljs$lang$maxFixedArity = 3;
        G__12748.cljs$lang$applyTo = function(arglist__12749) {
          var x = cljs.core.first(arglist__12749);
          var y = cljs.core.first(cljs.core.next(arglist__12749));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12749)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12749)));
          return G__12748__delegate(x, y, z, args)
        };
        G__12748.cljs$lang$arity$variadic = G__12748__delegate;
        return G__12748
      }();
      G__12747 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12747__0.call(this);
          case 1:
            return G__12747__1.call(this, x);
          case 2:
            return G__12747__2.call(this, x, y);
          case 3:
            return G__12747__3.call(this, x, y, z);
          default:
            return G__12747__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12747.cljs$lang$maxFixedArity = 3;
      G__12747.cljs$lang$applyTo = G__12747__4.cljs$lang$applyTo;
      return G__12747
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__12750 = null;
      var G__12750__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__12750__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__12750__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__12750__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__12750__4 = function() {
        var G__12751__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__12751 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12751__delegate.call(this, x, y, z, args)
        };
        G__12751.cljs$lang$maxFixedArity = 3;
        G__12751.cljs$lang$applyTo = function(arglist__12752) {
          var x = cljs.core.first(arglist__12752);
          var y = cljs.core.first(cljs.core.next(arglist__12752));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12752)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12752)));
          return G__12751__delegate(x, y, z, args)
        };
        G__12751.cljs$lang$arity$variadic = G__12751__delegate;
        return G__12751
      }();
      G__12750 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12750__0.call(this);
          case 1:
            return G__12750__1.call(this, x);
          case 2:
            return G__12750__2.call(this, x, y);
          case 3:
            return G__12750__3.call(this, x, y, z);
          default:
            return G__12750__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12750.cljs$lang$maxFixedArity = 3;
      G__12750.cljs$lang$applyTo = G__12750__4.cljs$lang$applyTo;
      return G__12750
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__12753 = null;
      var G__12753__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__12753__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__12753__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__12753__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__12753__4 = function() {
        var G__12754__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__12754 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12754__delegate.call(this, x, y, z, args)
        };
        G__12754.cljs$lang$maxFixedArity = 3;
        G__12754.cljs$lang$applyTo = function(arglist__12755) {
          var x = cljs.core.first(arglist__12755);
          var y = cljs.core.first(cljs.core.next(arglist__12755));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12755)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12755)));
          return G__12754__delegate(x, y, z, args)
        };
        G__12754.cljs$lang$arity$variadic = G__12754__delegate;
        return G__12754
      }();
      G__12753 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12753__0.call(this);
          case 1:
            return G__12753__1.call(this, x);
          case 2:
            return G__12753__2.call(this, x, y);
          case 3:
            return G__12753__3.call(this, x, y, z);
          default:
            return G__12753__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__12753.cljs$lang$maxFixedArity = 3;
      G__12753.cljs$lang$applyTo = G__12753__4.cljs$lang$applyTo;
      return G__12753
    }()
  };
  var juxt__4 = function() {
    var G__12756__delegate = function(f, g, h, fs) {
      var fs__12746 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__12757 = null;
        var G__12757__0 = function() {
          return cljs.core.reduce.call(null, function(p1__12727_SHARP_, p2__12728_SHARP_) {
            return cljs.core.conj.call(null, p1__12727_SHARP_, p2__12728_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__12746)
        };
        var G__12757__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__12729_SHARP_, p2__12730_SHARP_) {
            return cljs.core.conj.call(null, p1__12729_SHARP_, p2__12730_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__12746)
        };
        var G__12757__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__12731_SHARP_, p2__12732_SHARP_) {
            return cljs.core.conj.call(null, p1__12731_SHARP_, p2__12732_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__12746)
        };
        var G__12757__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__12733_SHARP_, p2__12734_SHARP_) {
            return cljs.core.conj.call(null, p1__12733_SHARP_, p2__12734_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__12746)
        };
        var G__12757__4 = function() {
          var G__12758__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__12735_SHARP_, p2__12736_SHARP_) {
              return cljs.core.conj.call(null, p1__12735_SHARP_, cljs.core.apply.call(null, p2__12736_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__12746)
          };
          var G__12758 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__12758__delegate.call(this, x, y, z, args)
          };
          G__12758.cljs$lang$maxFixedArity = 3;
          G__12758.cljs$lang$applyTo = function(arglist__12759) {
            var x = cljs.core.first(arglist__12759);
            var y = cljs.core.first(cljs.core.next(arglist__12759));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12759)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12759)));
            return G__12758__delegate(x, y, z, args)
          };
          G__12758.cljs$lang$arity$variadic = G__12758__delegate;
          return G__12758
        }();
        G__12757 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__12757__0.call(this);
            case 1:
              return G__12757__1.call(this, x);
            case 2:
              return G__12757__2.call(this, x, y);
            case 3:
              return G__12757__3.call(this, x, y, z);
            default:
              return G__12757__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__12757.cljs$lang$maxFixedArity = 3;
        G__12757.cljs$lang$applyTo = G__12757__4.cljs$lang$applyTo;
        return G__12757
      }()
    };
    var G__12756 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12756__delegate.call(this, f, g, h, fs)
    };
    G__12756.cljs$lang$maxFixedArity = 3;
    G__12756.cljs$lang$applyTo = function(arglist__12760) {
      var f = cljs.core.first(arglist__12760);
      var g = cljs.core.first(cljs.core.next(arglist__12760));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12760)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12760)));
      return G__12756__delegate(f, g, h, fs)
    };
    G__12756.cljs$lang$arity$variadic = G__12756__delegate;
    return G__12756
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__12763 = cljs.core.next.call(null, coll);
        coll = G__12763;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto____12762 = cljs.core.seq.call(null, coll);
        if(and__3941__auto____12762) {
          return n > 0
        }else {
          return and__3941__auto____12762
        }
      }())) {
        var G__12764 = n - 1;
        var G__12765 = cljs.core.next.call(null, coll);
        n = G__12764;
        coll = G__12765;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__12767 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__12767), s)) {
    if(cljs.core.count.call(null, matches__12767) === 1) {
      return cljs.core.first.call(null, matches__12767)
    }else {
      return cljs.core.vec.call(null, matches__12767)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__12769 = re.exec(s);
  if(matches__12769 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__12769) === 1) {
      return cljs.core.first.call(null, matches__12769)
    }else {
      return cljs.core.vec.call(null, matches__12769)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__12774 = cljs.core.re_find.call(null, re, s);
  var match_idx__12775 = s.search(re);
  var match_str__12776 = cljs.core.coll_QMARK_.call(null, match_data__12774) ? cljs.core.first.call(null, match_data__12774) : match_data__12774;
  var post_match__12777 = cljs.core.subs.call(null, s, match_idx__12775 + cljs.core.count.call(null, match_str__12776));
  if(cljs.core.truth_(match_data__12774)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__12774, re_seq.call(null, re, post_match__12777))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__12784__12785 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___12786 = cljs.core.nth.call(null, vec__12784__12785, 0, null);
  var flags__12787 = cljs.core.nth.call(null, vec__12784__12785, 1, null);
  var pattern__12788 = cljs.core.nth.call(null, vec__12784__12785, 2, null);
  return new RegExp(pattern__12788, flags__12787)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__12778_SHARP_) {
    return print_one.call(null, p1__12778_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3941__auto____12798 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3941__auto____12798)) {
            var and__3941__auto____12802 = function() {
              var G__12799__12800 = obj;
              if(G__12799__12800) {
                if(function() {
                  var or__3943__auto____12801 = G__12799__12800.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3943__auto____12801) {
                    return or__3943__auto____12801
                  }else {
                    return G__12799__12800.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__12799__12800.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12799__12800)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12799__12800)
              }
            }();
            if(cljs.core.truth_(and__3941__auto____12802)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3941__auto____12802
            }
          }else {
            return and__3941__auto____12798
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3941__auto____12803 = !(obj == null);
          if(and__3941__auto____12803) {
            return obj.cljs$lang$type
          }else {
            return and__3941__auto____12803
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__12804__12805 = obj;
          if(G__12804__12805) {
            if(function() {
              var or__3943__auto____12806 = G__12804__12805.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3943__auto____12806) {
                return or__3943__auto____12806
              }else {
                return G__12804__12805.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__12804__12805.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__12804__12805)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__12804__12805)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__12826 = new goog.string.StringBuffer;
  var G__12827__12828 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__12827__12828) {
    var string__12829 = cljs.core.first.call(null, G__12827__12828);
    var G__12827__12830 = G__12827__12828;
    while(true) {
      sb__12826.append(string__12829);
      var temp__4092__auto____12831 = cljs.core.next.call(null, G__12827__12830);
      if(temp__4092__auto____12831) {
        var G__12827__12832 = temp__4092__auto____12831;
        var G__12845 = cljs.core.first.call(null, G__12827__12832);
        var G__12846 = G__12827__12832;
        string__12829 = G__12845;
        G__12827__12830 = G__12846;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__12833__12834 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__12833__12834) {
    var obj__12835 = cljs.core.first.call(null, G__12833__12834);
    var G__12833__12836 = G__12833__12834;
    while(true) {
      sb__12826.append(" ");
      var G__12837__12838 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__12835, opts));
      if(G__12837__12838) {
        var string__12839 = cljs.core.first.call(null, G__12837__12838);
        var G__12837__12840 = G__12837__12838;
        while(true) {
          sb__12826.append(string__12839);
          var temp__4092__auto____12841 = cljs.core.next.call(null, G__12837__12840);
          if(temp__4092__auto____12841) {
            var G__12837__12842 = temp__4092__auto____12841;
            var G__12847 = cljs.core.first.call(null, G__12837__12842);
            var G__12848 = G__12837__12842;
            string__12839 = G__12847;
            G__12837__12840 = G__12848;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__4092__auto____12843 = cljs.core.next.call(null, G__12833__12836);
      if(temp__4092__auto____12843) {
        var G__12833__12844 = temp__4092__auto____12843;
        var G__12849 = cljs.core.first.call(null, G__12833__12844);
        var G__12850 = G__12833__12844;
        obj__12835 = G__12849;
        G__12833__12836 = G__12850;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__12826
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__12852 = cljs.core.pr_sb.call(null, objs, opts);
  sb__12852.append("\n");
  return[cljs.core.str(sb__12852)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__12871__12872 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__12871__12872) {
    var string__12873 = cljs.core.first.call(null, G__12871__12872);
    var G__12871__12874 = G__12871__12872;
    while(true) {
      cljs.core.string_print.call(null, string__12873);
      var temp__4092__auto____12875 = cljs.core.next.call(null, G__12871__12874);
      if(temp__4092__auto____12875) {
        var G__12871__12876 = temp__4092__auto____12875;
        var G__12889 = cljs.core.first.call(null, G__12871__12876);
        var G__12890 = G__12871__12876;
        string__12873 = G__12889;
        G__12871__12874 = G__12890;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__12877__12878 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__12877__12878) {
    var obj__12879 = cljs.core.first.call(null, G__12877__12878);
    var G__12877__12880 = G__12877__12878;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__12881__12882 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__12879, opts));
      if(G__12881__12882) {
        var string__12883 = cljs.core.first.call(null, G__12881__12882);
        var G__12881__12884 = G__12881__12882;
        while(true) {
          cljs.core.string_print.call(null, string__12883);
          var temp__4092__auto____12885 = cljs.core.next.call(null, G__12881__12884);
          if(temp__4092__auto____12885) {
            var G__12881__12886 = temp__4092__auto____12885;
            var G__12891 = cljs.core.first.call(null, G__12881__12886);
            var G__12892 = G__12881__12886;
            string__12883 = G__12891;
            G__12881__12884 = G__12892;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__4092__auto____12887 = cljs.core.next.call(null, G__12877__12880);
      if(temp__4092__auto____12887) {
        var G__12877__12888 = temp__4092__auto____12887;
        var G__12893 = cljs.core.first.call(null, G__12877__12888);
        var G__12894 = G__12877__12888;
        obj__12879 = G__12893;
        G__12877__12880 = G__12894;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__12895) {
    var objs = cljs.core.seq(arglist__12895);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__12896) {
    var objs = cljs.core.seq(arglist__12896);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__12897) {
    var objs = cljs.core.seq(arglist__12897);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__12898) {
    var objs = cljs.core.seq(arglist__12898);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__12899) {
    var objs = cljs.core.seq(arglist__12899);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__12900) {
    var objs = cljs.core.seq(arglist__12900);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__12901) {
    var objs = cljs.core.seq(arglist__12901);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__12902) {
    var objs = cljs.core.seq(arglist__12902);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__12903) {
    var fmt = cljs.core.first(arglist__12903);
    var args = cljs.core.rest(arglist__12903);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__12904 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__12904, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__12905 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__12905, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__12906 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__12906, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__4092__auto____12907 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__4092__auto____12907)) {
        var nspc__12908 = temp__4092__auto____12907;
        return[cljs.core.str(nspc__12908), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__4092__auto____12909 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__4092__auto____12909)) {
          var nspc__12910 = temp__4092__auto____12909;
          return[cljs.core.str(nspc__12910), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__12911 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__12911, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__12913 = function(n, len) {
    var ns__12912 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__12912) < len) {
        var G__12915 = [cljs.core.str("0"), cljs.core.str(ns__12912)].join("");
        ns__12912 = G__12915;
        continue
      }else {
        return ns__12912
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__12913.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__12913.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__12913.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__12913.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__12913.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__12913.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__12914 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__12914, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__12916 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__12917 = this;
  var G__12918__12919 = cljs.core.seq.call(null, this__12917.watches);
  if(G__12918__12919) {
    var G__12921__12923 = cljs.core.first.call(null, G__12918__12919);
    var vec__12922__12924 = G__12921__12923;
    var key__12925 = cljs.core.nth.call(null, vec__12922__12924, 0, null);
    var f__12926 = cljs.core.nth.call(null, vec__12922__12924, 1, null);
    var G__12918__12927 = G__12918__12919;
    var G__12921__12928 = G__12921__12923;
    var G__12918__12929 = G__12918__12927;
    while(true) {
      var vec__12930__12931 = G__12921__12928;
      var key__12932 = cljs.core.nth.call(null, vec__12930__12931, 0, null);
      var f__12933 = cljs.core.nth.call(null, vec__12930__12931, 1, null);
      var G__12918__12934 = G__12918__12929;
      f__12933.call(null, key__12932, this$, oldval, newval);
      var temp__4092__auto____12935 = cljs.core.next.call(null, G__12918__12934);
      if(temp__4092__auto____12935) {
        var G__12918__12936 = temp__4092__auto____12935;
        var G__12943 = cljs.core.first.call(null, G__12918__12936);
        var G__12944 = G__12918__12936;
        G__12921__12928 = G__12943;
        G__12918__12929 = G__12944;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__12937 = this;
  return this$.watches = cljs.core.assoc.call(null, this__12937.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__12938 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__12938.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__12939 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__12939.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__12940 = this;
  return this__12940.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__12941 = this;
  return this__12941.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__12942 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__12956__delegate = function(x, p__12945) {
      var map__12951__12952 = p__12945;
      var map__12951__12953 = cljs.core.seq_QMARK_.call(null, map__12951__12952) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12951__12952) : map__12951__12952;
      var validator__12954 = cljs.core._lookup.call(null, map__12951__12953, "\ufdd0'validator", null);
      var meta__12955 = cljs.core._lookup.call(null, map__12951__12953, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__12955, validator__12954, null)
    };
    var G__12956 = function(x, var_args) {
      var p__12945 = null;
      if(goog.isDef(var_args)) {
        p__12945 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12956__delegate.call(this, x, p__12945)
    };
    G__12956.cljs$lang$maxFixedArity = 1;
    G__12956.cljs$lang$applyTo = function(arglist__12957) {
      var x = cljs.core.first(arglist__12957);
      var p__12945 = cljs.core.rest(arglist__12957);
      return G__12956__delegate(x, p__12945)
    };
    G__12956.cljs$lang$arity$variadic = G__12956__delegate;
    return G__12956
  }();
  atom = function(x, var_args) {
    var p__12945 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto____12961 = a.validator;
  if(cljs.core.truth_(temp__4092__auto____12961)) {
    var validate__12962 = temp__4092__auto____12961;
    if(cljs.core.truth_(validate__12962.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440, "\ufdd0'column", 13))))].join(""));
    }
  }else {
  }
  var old_value__12963 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__12963, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__12964__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__12964 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__12964__delegate.call(this, a, f, x, y, z, more)
    };
    G__12964.cljs$lang$maxFixedArity = 5;
    G__12964.cljs$lang$applyTo = function(arglist__12965) {
      var a = cljs.core.first(arglist__12965);
      var f = cljs.core.first(cljs.core.next(arglist__12965));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12965)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12965))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12965)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12965)))));
      return G__12964__delegate(a, f, x, y, z, more)
    };
    G__12964.cljs$lang$arity$variadic = G__12964__delegate;
    return G__12964
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__12966) {
    var iref = cljs.core.first(arglist__12966);
    var f = cljs.core.first(cljs.core.next(arglist__12966));
    var args = cljs.core.rest(cljs.core.next(arglist__12966));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__12967 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__12967.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__12968 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__12968.state, function(p__12969) {
    var map__12970__12971 = p__12969;
    var map__12970__12972 = cljs.core.seq_QMARK_.call(null, map__12970__12971) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12970__12971) : map__12970__12971;
    var curr_state__12973 = map__12970__12972;
    var done__12974 = cljs.core._lookup.call(null, map__12970__12972, "\ufdd0'done", null);
    if(cljs.core.truth_(done__12974)) {
      return curr_state__12973
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__12968.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__13003__13004 = options;
    var map__13003__13005 = cljs.core.seq_QMARK_.call(null, map__13003__13004) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13003__13004) : map__13003__13004;
    var keywordize_keys__13006 = cljs.core._lookup.call(null, map__13003__13005, "\ufdd0'keywordize-keys", null);
    var keyfn__13007 = cljs.core.truth_(keywordize_keys__13006) ? cljs.core.keyword : cljs.core.str;
    var f__13030 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__3868__auto____13029 = function iter__13019(s__13020) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__13020__13025 = s__13020;
                    while(true) {
                      var temp__4092__auto____13026 = cljs.core.seq.call(null, s__13020__13025);
                      if(temp__4092__auto____13026) {
                        var xs__4579__auto____13027 = temp__4092__auto____13026;
                        var k__13028 = cljs.core.first.call(null, xs__4579__auto____13027);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__13007.call(null, k__13028), thisfn.call(null, x[k__13028])], true), iter__13019.call(null, cljs.core.rest.call(null, s__13020__13025)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__3868__auto____13029.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__13030.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__13031) {
    var x = cljs.core.first(arglist__13031);
    var options = cljs.core.rest(arglist__13031);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__13036 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__13040__delegate = function(args) {
      var temp__4090__auto____13037 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__13036), args, null);
      if(cljs.core.truth_(temp__4090__auto____13037)) {
        var v__13038 = temp__4090__auto____13037;
        return v__13038
      }else {
        var ret__13039 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__13036, cljs.core.assoc, args, ret__13039);
        return ret__13039
      }
    };
    var G__13040 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__13040__delegate.call(this, args)
    };
    G__13040.cljs$lang$maxFixedArity = 0;
    G__13040.cljs$lang$applyTo = function(arglist__13041) {
      var args = cljs.core.seq(arglist__13041);
      return G__13040__delegate(args)
    };
    G__13040.cljs$lang$arity$variadic = G__13040__delegate;
    return G__13040
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__13043 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__13043)) {
        var G__13044 = ret__13043;
        f = G__13044;
        continue
      }else {
        return ret__13043
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__13045__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__13045 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__13045__delegate.call(this, f, args)
    };
    G__13045.cljs$lang$maxFixedArity = 1;
    G__13045.cljs$lang$applyTo = function(arglist__13046) {
      var f = cljs.core.first(arglist__13046);
      var args = cljs.core.rest(arglist__13046);
      return G__13045__delegate(f, args)
    };
    G__13045.cljs$lang$arity$variadic = G__13045__delegate;
    return G__13045
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__13048 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__13048, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__13048, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3943__auto____13057 = cljs.core._EQ_.call(null, child, parent);
    if(or__3943__auto____13057) {
      return or__3943__auto____13057
    }else {
      var or__3943__auto____13058 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3943__auto____13058) {
        return or__3943__auto____13058
      }else {
        var and__3941__auto____13059 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3941__auto____13059) {
          var and__3941__auto____13060 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3941__auto____13060) {
            var and__3941__auto____13061 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3941__auto____13061) {
              var ret__13062 = true;
              var i__13063 = 0;
              while(true) {
                if(function() {
                  var or__3943__auto____13064 = cljs.core.not.call(null, ret__13062);
                  if(or__3943__auto____13064) {
                    return or__3943__auto____13064
                  }else {
                    return i__13063 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__13062
                }else {
                  var G__13065 = isa_QMARK_.call(null, h, child.call(null, i__13063), parent.call(null, i__13063));
                  var G__13066 = i__13063 + 1;
                  ret__13062 = G__13065;
                  i__13063 = G__13066;
                  continue
                }
                break
              }
            }else {
              return and__3941__auto____13061
            }
          }else {
            return and__3941__auto____13060
          }
        }else {
          return and__3941__auto____13059
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724, "\ufdd0'column", 12))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728, "\ufdd0'column", 12))))].join(""));
    }
    var tp__13075 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__13076 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__13077 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__13078 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3943__auto____13079 = cljs.core.contains_QMARK_.call(null, tp__13075.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__13077.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__13077.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__13075, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__13078.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__13076, parent, ta__13077), "\ufdd0'descendants":tf__13078.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__13077, tag, td__13076)})
    }();
    if(cljs.core.truth_(or__3943__auto____13079)) {
      return or__3943__auto____13079
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__13084 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__13085 = cljs.core.truth_(parentMap__13084.call(null, tag)) ? cljs.core.disj.call(null, parentMap__13084.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__13086 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__13085)) ? cljs.core.assoc.call(null, parentMap__13084, tag, childsParents__13085) : cljs.core.dissoc.call(null, parentMap__13084, tag);
    var deriv_seq__13087 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__13067_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__13067_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__13067_SHARP_), cljs.core.second.call(null, p1__13067_SHARP_)))
    }, cljs.core.seq.call(null, newParents__13086)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__13084.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__13068_SHARP_, p2__13069_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__13068_SHARP_, p2__13069_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__13087))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__13095 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3943__auto____13097 = cljs.core.truth_(function() {
    var and__3941__auto____13096 = xprefs__13095;
    if(cljs.core.truth_(and__3941__auto____13096)) {
      return xprefs__13095.call(null, y)
    }else {
      return and__3941__auto____13096
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3943__auto____13097)) {
    return or__3943__auto____13097
  }else {
    var or__3943__auto____13099 = function() {
      var ps__13098 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__13098) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__13098), prefer_table))) {
          }else {
          }
          var G__13102 = cljs.core.rest.call(null, ps__13098);
          ps__13098 = G__13102;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3943__auto____13099)) {
      return or__3943__auto____13099
    }else {
      var or__3943__auto____13101 = function() {
        var ps__13100 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__13100) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__13100), y, prefer_table))) {
            }else {
            }
            var G__13103 = cljs.core.rest.call(null, ps__13100);
            ps__13100 = G__13103;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3943__auto____13101)) {
        return or__3943__auto____13101
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3943__auto____13105 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3943__auto____13105)) {
    return or__3943__auto____13105
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__13123 = cljs.core.reduce.call(null, function(be, p__13115) {
    var vec__13116__13117 = p__13115;
    var k__13118 = cljs.core.nth.call(null, vec__13116__13117, 0, null);
    var ___13119 = cljs.core.nth.call(null, vec__13116__13117, 1, null);
    var e__13120 = vec__13116__13117;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__13118)) {
      var be2__13122 = cljs.core.truth_(function() {
        var or__3943__auto____13121 = be == null;
        if(or__3943__auto____13121) {
          return or__3943__auto____13121
        }else {
          return cljs.core.dominates.call(null, k__13118, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__13120 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__13122), k__13118, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__13118), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__13122)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__13122
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__13123)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__13123));
      return cljs.core.second.call(null, best_entry__13123)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3941__auto____13128 = mf;
    if(and__3941__auto____13128) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3941__auto____13128
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__3769__auto____13129 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____13130 = cljs.core._reset[goog.typeOf(x__3769__auto____13129)];
      if(or__3943__auto____13130) {
        return or__3943__auto____13130
      }else {
        var or__3943__auto____13131 = cljs.core._reset["_"];
        if(or__3943__auto____13131) {
          return or__3943__auto____13131
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3941__auto____13136 = mf;
    if(and__3941__auto____13136) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3941__auto____13136
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__3769__auto____13137 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____13138 = cljs.core._add_method[goog.typeOf(x__3769__auto____13137)];
      if(or__3943__auto____13138) {
        return or__3943__auto____13138
      }else {
        var or__3943__auto____13139 = cljs.core._add_method["_"];
        if(or__3943__auto____13139) {
          return or__3943__auto____13139
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto____13144 = mf;
    if(and__3941__auto____13144) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3941__auto____13144
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__3769__auto____13145 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____13146 = cljs.core._remove_method[goog.typeOf(x__3769__auto____13145)];
      if(or__3943__auto____13146) {
        return or__3943__auto____13146
      }else {
        var or__3943__auto____13147 = cljs.core._remove_method["_"];
        if(or__3943__auto____13147) {
          return or__3943__auto____13147
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3941__auto____13152 = mf;
    if(and__3941__auto____13152) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3941__auto____13152
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__3769__auto____13153 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____13154 = cljs.core._prefer_method[goog.typeOf(x__3769__auto____13153)];
      if(or__3943__auto____13154) {
        return or__3943__auto____13154
      }else {
        var or__3943__auto____13155 = cljs.core._prefer_method["_"];
        if(or__3943__auto____13155) {
          return or__3943__auto____13155
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto____13160 = mf;
    if(and__3941__auto____13160) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3941__auto____13160
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__3769__auto____13161 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____13162 = cljs.core._get_method[goog.typeOf(x__3769__auto____13161)];
      if(or__3943__auto____13162) {
        return or__3943__auto____13162
      }else {
        var or__3943__auto____13163 = cljs.core._get_method["_"];
        if(or__3943__auto____13163) {
          return or__3943__auto____13163
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3941__auto____13168 = mf;
    if(and__3941__auto____13168) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3941__auto____13168
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__3769__auto____13169 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____13170 = cljs.core._methods[goog.typeOf(x__3769__auto____13169)];
      if(or__3943__auto____13170) {
        return or__3943__auto____13170
      }else {
        var or__3943__auto____13171 = cljs.core._methods["_"];
        if(or__3943__auto____13171) {
          return or__3943__auto____13171
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3941__auto____13176 = mf;
    if(and__3941__auto____13176) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3941__auto____13176
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__3769__auto____13177 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____13178 = cljs.core._prefers[goog.typeOf(x__3769__auto____13177)];
      if(or__3943__auto____13178) {
        return or__3943__auto____13178
      }else {
        var or__3943__auto____13179 = cljs.core._prefers["_"];
        if(or__3943__auto____13179) {
          return or__3943__auto____13179
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3941__auto____13184 = mf;
    if(and__3941__auto____13184) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3941__auto____13184
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__3769__auto____13185 = mf == null ? null : mf;
    return function() {
      var or__3943__auto____13186 = cljs.core._dispatch[goog.typeOf(x__3769__auto____13185)];
      if(or__3943__auto____13186) {
        return or__3943__auto____13186
      }else {
        var or__3943__auto____13187 = cljs.core._dispatch["_"];
        if(or__3943__auto____13187) {
          return or__3943__auto____13187
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__13190 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__13191 = cljs.core._get_method.call(null, mf, dispatch_val__13190);
  if(cljs.core.truth_(target_fn__13191)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__13190)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__13191, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__13192 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__13193 = this;
  cljs.core.swap_BANG_.call(null, this__13193.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__13193.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__13193.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__13193.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__13194 = this;
  cljs.core.swap_BANG_.call(null, this__13194.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__13194.method_cache, this__13194.method_table, this__13194.cached_hierarchy, this__13194.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__13195 = this;
  cljs.core.swap_BANG_.call(null, this__13195.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__13195.method_cache, this__13195.method_table, this__13195.cached_hierarchy, this__13195.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__13196 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__13196.cached_hierarchy), cljs.core.deref.call(null, this__13196.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__13196.method_cache, this__13196.method_table, this__13196.cached_hierarchy, this__13196.hierarchy)
  }
  var temp__4090__auto____13197 = cljs.core.deref.call(null, this__13196.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto____13197)) {
    var target_fn__13198 = temp__4090__auto____13197;
    return target_fn__13198
  }else {
    var temp__4090__auto____13199 = cljs.core.find_and_cache_best_method.call(null, this__13196.name, dispatch_val, this__13196.hierarchy, this__13196.method_table, this__13196.prefer_table, this__13196.method_cache, this__13196.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____13199)) {
      var target_fn__13200 = temp__4090__auto____13199;
      return target_fn__13200
    }else {
      return cljs.core.deref.call(null, this__13196.method_table).call(null, this__13196.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__13201 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__13201.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__13201.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__13201.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__13201.method_cache, this__13201.method_table, this__13201.cached_hierarchy, this__13201.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__13202 = this;
  return cljs.core.deref.call(null, this__13202.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__13203 = this;
  return cljs.core.deref.call(null, this__13203.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__13204 = this;
  return cljs.core.do_dispatch.call(null, mf, this__13204.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__13206__delegate = function(_, args) {
    var self__13205 = this;
    return cljs.core._dispatch.call(null, self__13205, args)
  };
  var G__13206 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__13206__delegate.call(this, _, args)
  };
  G__13206.cljs$lang$maxFixedArity = 1;
  G__13206.cljs$lang$applyTo = function(arglist__13207) {
    var _ = cljs.core.first(arglist__13207);
    var args = cljs.core.rest(arglist__13207);
    return G__13206__delegate(_, args)
  };
  G__13206.cljs$lang$arity$variadic = G__13206__delegate;
  return G__13206
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__13208 = this;
  return cljs.core._dispatch.call(null, self__13208, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__13209 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_13211, _) {
  var this__13210 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__13210.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__13212 = this;
  var and__3941__auto____13213 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3941__auto____13213) {
    return this__13212.uuid === other.uuid
  }else {
    return and__3941__auto____13213
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__13214 = this;
  var this__13215 = this;
  return cljs.core.pr_str.call(null, this__13215)
};
cljs.core.UUID;
goog.provide("clojure.zip");
goog.require("cljs.core");
clojure.zip.zipper = function zipper(branch_QMARK_, children, make_node, root) {
  return cljs.core.with_meta(cljs.core.PersistentVector.fromArray([root, null], true), cljs.core.ObjMap.fromObject(["\ufdd0'zip/make-node", "\ufdd0'zip/children", "\ufdd0'zip/branch?"], {"\ufdd0'zip/make-node":make_node, "\ufdd0'zip/children":children, "\ufdd0'zip/branch?":branch_QMARK_}))
};
clojure.zip.seq_zip = function seq_zip(root) {
  return clojure.zip.zipper.call(null, cljs.core.seq_QMARK_, cljs.core.identity, function(node, children) {
    return cljs.core.with_meta.call(null, children, cljs.core.meta.call(null, node))
  }, root)
};
clojure.zip.vector_zip = function vector_zip(root) {
  return clojure.zip.zipper.call(null, cljs.core.vector_QMARK_, cljs.core.seq, function(node, children) {
    return cljs.core.with_meta.call(null, cljs.core.vec.call(null, children), cljs.core.meta.call(null, node))
  }, root)
};
clojure.zip.xml_zip = function xml_zip(root) {
  return clojure.zip.zipper.call(null, cljs.core.complement.call(null, cljs.core.string_QMARK_), cljs.core.comp.call(null, cljs.core.seq, "\ufdd0'content"), function(node, children) {
    return cljs.core.assoc.call(null, node, "\ufdd0'content", function() {
      var and__3941__auto____13574 = children;
      if(cljs.core.truth_(and__3941__auto____13574)) {
        return cljs.core.apply.call(null, cljs.core.vector, children)
      }else {
        return and__3941__auto____13574
      }
    }())
  }, root)
};
clojure.zip.node = function node(loc) {
  return loc.call(null, 0)
};
clojure.zip.branch_QMARK_ = function branch_QMARK_(loc) {
  return(new cljs.core.Keyword("\ufdd0'zip/branch?")).call(null, cljs.core.meta.call(null, loc)).call(null, clojure.zip.node.call(null, loc))
};
clojure.zip.children = function children(loc) {
  if(cljs.core.truth_(clojure.zip.branch_QMARK_.call(null, loc))) {
    return(new cljs.core.Keyword("\ufdd0'zip/children")).call(null, cljs.core.meta.call(null, loc)).call(null, clojure.zip.node.call(null, loc))
  }else {
    throw"called children on a leaf node";
  }
};
clojure.zip.make_node = function make_node(loc, node, children) {
  return(new cljs.core.Keyword("\ufdd0'zip/make-node")).call(null, cljs.core.meta.call(null, loc)).call(null, node, children)
};
clojure.zip.path = function path(loc) {
  return(new cljs.core.Keyword("\ufdd0'pnodes")).call(null, loc.call(null, 1))
};
clojure.zip.lefts = function lefts(loc) {
  return cljs.core.seq.call(null, (new cljs.core.Keyword("\ufdd0'l")).call(null, loc.call(null, 1)))
};
clojure.zip.rights = function rights(loc) {
  return(new cljs.core.Keyword("\ufdd0'r")).call(null, loc.call(null, 1))
};
clojure.zip.down = function down(loc) {
  if(cljs.core.truth_(clojure.zip.branch_QMARK_.call(null, loc))) {
    var vec__13584__13586 = loc;
    var node__13587 = cljs.core.nth.call(null, vec__13584__13586, 0, null);
    var path__13588 = cljs.core.nth.call(null, vec__13584__13586, 1, null);
    var vec__13585__13589 = clojure.zip.children.call(null, loc);
    var c__13590 = cljs.core.nth.call(null, vec__13585__13589, 0, null);
    var cnext__13591 = cljs.core.nthnext.call(null, vec__13585__13589, 1);
    var cs__13592 = vec__13585__13589;
    if(cljs.core.truth_(cs__13592)) {
      return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([c__13590, cljs.core.ObjMap.fromObject(["\ufdd0'l", "\ufdd0'pnodes", "\ufdd0'ppath", "\ufdd0'r"], {"\ufdd0'l":cljs.core.PersistentVector.EMPTY, "\ufdd0'pnodes":cljs.core.truth_(path__13588) ? cljs.core.conj.call(null, (new cljs.core.Keyword("\ufdd0'pnodes")).call(null, path__13588), node__13587) : cljs.core.PersistentVector.fromArray([node__13587], true), "\ufdd0'ppath":path__13588, "\ufdd0'r":cnext__13591})], true), 
      cljs.core.meta.call(null, loc))
    }else {
      return null
    }
  }else {
    return null
  }
};
clojure.zip.up = function up(loc) {
  var vec__13607__13609 = loc;
  var node__13610 = cljs.core.nth.call(null, vec__13607__13609, 0, null);
  var map__13608__13611 = cljs.core.nth.call(null, vec__13607__13609, 1, null);
  var map__13608__13612 = cljs.core.seq_QMARK_.call(null, map__13608__13611) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13608__13611) : map__13608__13611;
  var path__13613 = map__13608__13612;
  var l__13614 = cljs.core._lookup.call(null, map__13608__13612, "\ufdd0'l", null);
  var ppath__13615 = cljs.core._lookup.call(null, map__13608__13612, "\ufdd0'ppath", null);
  var pnodes__13616 = cljs.core._lookup.call(null, map__13608__13612, "\ufdd0'pnodes", null);
  var r__13617 = cljs.core._lookup.call(null, map__13608__13612, "\ufdd0'r", null);
  var changed_QMARK___13618 = cljs.core._lookup.call(null, map__13608__13612, "\ufdd0'changed?", null);
  if(cljs.core.truth_(pnodes__13616)) {
    var pnode__13619 = cljs.core.peek.call(null, pnodes__13616);
    return cljs.core.with_meta.call(null, cljs.core.truth_(changed_QMARK___13618) ? cljs.core.PersistentVector.fromArray([clojure.zip.make_node.call(null, loc, pnode__13619, cljs.core.concat.call(null, l__13614, cljs.core.cons.call(null, node__13610, r__13617))), function() {
      var and__3941__auto____13620 = ppath__13615;
      if(cljs.core.truth_(and__3941__auto____13620)) {
        return cljs.core.assoc.call(null, ppath__13615, "\ufdd0'changed?", true)
      }else {
        return and__3941__auto____13620
      }
    }()], true) : cljs.core.PersistentVector.fromArray([pnode__13619, ppath__13615], true), cljs.core.meta.call(null, loc))
  }else {
    return null
  }
};
clojure.zip.root = function root(loc) {
  while(true) {
    if(cljs.core._EQ_.call(null, "\ufdd0'end", loc.call(null, 1))) {
      return clojure.zip.node.call(null, loc)
    }else {
      var p__13622 = clojure.zip.up.call(null, loc);
      if(cljs.core.truth_(p__13622)) {
        var G__13623 = p__13622;
        loc = G__13623;
        continue
      }else {
        return clojure.zip.node.call(null, loc)
      }
    }
    break
  }
};
clojure.zip.right = function right(loc) {
  var vec__13638__13641 = loc;
  var node__13642 = cljs.core.nth.call(null, vec__13638__13641, 0, null);
  var map__13639__13643 = cljs.core.nth.call(null, vec__13638__13641, 1, null);
  var map__13639__13644 = cljs.core.seq_QMARK_.call(null, map__13639__13643) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13639__13643) : map__13639__13643;
  var path__13645 = map__13639__13644;
  var l__13646 = cljs.core._lookup.call(null, map__13639__13644, "\ufdd0'l", null);
  var vec__13640__13647 = cljs.core._lookup.call(null, map__13639__13644, "\ufdd0'r", null);
  var r__13648 = cljs.core.nth.call(null, vec__13640__13647, 0, null);
  var rnext__13649 = cljs.core.nthnext.call(null, vec__13640__13647, 1);
  var rs__13650 = vec__13640__13647;
  if(cljs.core.truth_(function() {
    var and__3941__auto____13651 = path__13645;
    if(cljs.core.truth_(and__3941__auto____13651)) {
      return rs__13650
    }else {
      return and__3941__auto____13651
    }
  }())) {
    return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([r__13648, cljs.core.assoc.call(null, path__13645, "\ufdd0'l", cljs.core.conj.call(null, l__13646, node__13642), "\ufdd0'r", rnext__13649)], true), cljs.core.meta.call(null, loc))
  }else {
    return null
  }
};
clojure.zip.rightmost = function rightmost(loc) {
  var vec__13662__13664 = loc;
  var node__13665 = cljs.core.nth.call(null, vec__13662__13664, 0, null);
  var map__13663__13666 = cljs.core.nth.call(null, vec__13662__13664, 1, null);
  var map__13663__13667 = cljs.core.seq_QMARK_.call(null, map__13663__13666) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13663__13666) : map__13663__13666;
  var path__13668 = map__13663__13667;
  var l__13669 = cljs.core._lookup.call(null, map__13663__13667, "\ufdd0'l", null);
  var r__13670 = cljs.core._lookup.call(null, map__13663__13667, "\ufdd0'r", null);
  if(cljs.core.truth_(function() {
    var and__3941__auto____13671 = path__13668;
    if(cljs.core.truth_(and__3941__auto____13671)) {
      return r__13670
    }else {
      return and__3941__auto____13671
    }
  }())) {
    return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([cljs.core.last.call(null, r__13670), cljs.core.assoc.call(null, path__13668, "\ufdd0'l", cljs.core.apply.call(null, cljs.core.conj, l__13669, node__13665, cljs.core.butlast.call(null, r__13670)), "\ufdd0'r", null)], true), cljs.core.meta.call(null, loc))
  }else {
    return loc
  }
};
clojure.zip.left = function left(loc) {
  var vec__13682__13684 = loc;
  var node__13685 = cljs.core.nth.call(null, vec__13682__13684, 0, null);
  var map__13683__13686 = cljs.core.nth.call(null, vec__13682__13684, 1, null);
  var map__13683__13687 = cljs.core.seq_QMARK_.call(null, map__13683__13686) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13683__13686) : map__13683__13686;
  var path__13688 = map__13683__13687;
  var l__13689 = cljs.core._lookup.call(null, map__13683__13687, "\ufdd0'l", null);
  var r__13690 = cljs.core._lookup.call(null, map__13683__13687, "\ufdd0'r", null);
  if(cljs.core.truth_(function() {
    var and__3941__auto____13691 = path__13688;
    if(cljs.core.truth_(and__3941__auto____13691)) {
      return cljs.core.seq.call(null, l__13689)
    }else {
      return and__3941__auto____13691
    }
  }())) {
    return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([cljs.core.peek.call(null, l__13689), cljs.core.assoc.call(null, path__13688, "\ufdd0'l", cljs.core.pop.call(null, l__13689), "\ufdd0'r", cljs.core.cons.call(null, node__13685, r__13690))], true), cljs.core.meta.call(null, loc))
  }else {
    return null
  }
};
clojure.zip.leftmost = function leftmost(loc) {
  var vec__13702__13704 = loc;
  var node__13705 = cljs.core.nth.call(null, vec__13702__13704, 0, null);
  var map__13703__13706 = cljs.core.nth.call(null, vec__13702__13704, 1, null);
  var map__13703__13707 = cljs.core.seq_QMARK_.call(null, map__13703__13706) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13703__13706) : map__13703__13706;
  var path__13708 = map__13703__13707;
  var l__13709 = cljs.core._lookup.call(null, map__13703__13707, "\ufdd0'l", null);
  var r__13710 = cljs.core._lookup.call(null, map__13703__13707, "\ufdd0'r", null);
  if(cljs.core.truth_(function() {
    var and__3941__auto____13711 = path__13708;
    if(cljs.core.truth_(and__3941__auto____13711)) {
      return cljs.core.seq.call(null, l__13709)
    }else {
      return and__3941__auto____13711
    }
  }())) {
    return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, l__13709), cljs.core.assoc.call(null, path__13708, "\ufdd0'l", cljs.core.PersistentVector.EMPTY, "\ufdd0'r", cljs.core.concat.call(null, cljs.core.rest.call(null, l__13709), cljs.core.PersistentVector.fromArray([node__13705], true), r__13710))], true), cljs.core.meta.call(null, loc))
  }else {
    return loc
  }
};
clojure.zip.insert_left = function insert_left(loc, item) {
  var vec__13720__13722 = loc;
  var node__13723 = cljs.core.nth.call(null, vec__13720__13722, 0, null);
  var map__13721__13724 = cljs.core.nth.call(null, vec__13720__13722, 1, null);
  var map__13721__13725 = cljs.core.seq_QMARK_.call(null, map__13721__13724) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13721__13724) : map__13721__13724;
  var path__13726 = map__13721__13725;
  var l__13727 = cljs.core._lookup.call(null, map__13721__13725, "\ufdd0'l", null);
  if(path__13726 == null) {
    throw"Insert at top";
  }else {
    return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([node__13723, cljs.core.assoc.call(null, path__13726, "\ufdd0'l", cljs.core.conj.call(null, l__13727, item), "\ufdd0'changed?", true)], true), cljs.core.meta.call(null, loc))
  }
};
clojure.zip.insert_right = function insert_right(loc, item) {
  var vec__13736__13738 = loc;
  var node__13739 = cljs.core.nth.call(null, vec__13736__13738, 0, null);
  var map__13737__13740 = cljs.core.nth.call(null, vec__13736__13738, 1, null);
  var map__13737__13741 = cljs.core.seq_QMARK_.call(null, map__13737__13740) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13737__13740) : map__13737__13740;
  var path__13742 = map__13737__13741;
  var r__13743 = cljs.core._lookup.call(null, map__13737__13741, "\ufdd0'r", null);
  if(path__13742 == null) {
    throw"Insert at top";
  }else {
    return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([node__13739, cljs.core.assoc.call(null, path__13742, "\ufdd0'r", cljs.core.cons.call(null, item, r__13743), "\ufdd0'changed?", true)], true), cljs.core.meta.call(null, loc))
  }
};
clojure.zip.replace = function replace(loc, node) {
  var vec__13748__13749 = loc;
  var ___13750 = cljs.core.nth.call(null, vec__13748__13749, 0, null);
  var path__13751 = cljs.core.nth.call(null, vec__13748__13749, 1, null);
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([node, cljs.core.assoc.call(null, path__13751, "\ufdd0'changed?", true)], true), cljs.core.meta.call(null, loc))
};
clojure.zip.edit = function() {
  var edit__delegate = function(loc, f, args) {
    return clojure.zip.replace.call(null, loc, cljs.core.apply.call(null, f, clojure.zip.node.call(null, loc), args))
  };
  var edit = function(loc, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return edit__delegate.call(this, loc, f, args)
  };
  edit.cljs$lang$maxFixedArity = 2;
  edit.cljs$lang$applyTo = function(arglist__13752) {
    var loc = cljs.core.first(arglist__13752);
    var f = cljs.core.first(cljs.core.next(arglist__13752));
    var args = cljs.core.rest(cljs.core.next(arglist__13752));
    return edit__delegate(loc, f, args)
  };
  edit.cljs$lang$arity$variadic = edit__delegate;
  return edit
}();
clojure.zip.insert_child = function insert_child(loc, item) {
  return clojure.zip.replace.call(null, loc, clojure.zip.make_node.call(null, loc, clojure.zip.node.call(null, loc), cljs.core.cons.call(null, item, clojure.zip.children.call(null, loc))))
};
clojure.zip.append_child = function append_child(loc, item) {
  return clojure.zip.replace.call(null, loc, clojure.zip.make_node.call(null, loc, clojure.zip.node.call(null, loc), cljs.core.concat.call(null, clojure.zip.children.call(null, loc), cljs.core.PersistentVector.fromArray([item], true))))
};
clojure.zip.next = function next(loc) {
  if(cljs.core._EQ_.call(null, "\ufdd0'end", loc.call(null, 1))) {
    return loc
  }else {
    var or__3943__auto____13759 = function() {
      var and__3941__auto____13758 = clojure.zip.branch_QMARK_.call(null, loc);
      if(cljs.core.truth_(and__3941__auto____13758)) {
        return clojure.zip.down.call(null, loc)
      }else {
        return and__3941__auto____13758
      }
    }();
    if(cljs.core.truth_(or__3943__auto____13759)) {
      return or__3943__auto____13759
    }else {
      var or__3943__auto____13760 = clojure.zip.right.call(null, loc);
      if(cljs.core.truth_(or__3943__auto____13760)) {
        return or__3943__auto____13760
      }else {
        var p__13761 = loc;
        while(true) {
          if(cljs.core.truth_(clojure.zip.up.call(null, p__13761))) {
            var or__3943__auto____13762 = clojure.zip.right.call(null, clojure.zip.up.call(null, p__13761));
            if(cljs.core.truth_(or__3943__auto____13762)) {
              return or__3943__auto____13762
            }else {
              var G__13763 = clojure.zip.up.call(null, p__13761);
              p__13761 = G__13763;
              continue
            }
          }else {
            return cljs.core.PersistentVector.fromArray([clojure.zip.node.call(null, p__13761), "\ufdd0'end"], true)
          }
          break
        }
      }
    }
  }
};
clojure.zip.prev = function prev(loc) {
  var temp__4090__auto____13770 = clojure.zip.left.call(null, loc);
  if(cljs.core.truth_(temp__4090__auto____13770)) {
    var lloc__13771 = temp__4090__auto____13770;
    var loc__13772 = lloc__13771;
    while(true) {
      var temp__4090__auto____13774 = function() {
        var and__3941__auto____13773 = clojure.zip.branch_QMARK_.call(null, loc__13772);
        if(cljs.core.truth_(and__3941__auto____13773)) {
          return clojure.zip.down.call(null, loc__13772)
        }else {
          return and__3941__auto____13773
        }
      }();
      if(cljs.core.truth_(temp__4090__auto____13774)) {
        var child__13775 = temp__4090__auto____13774;
        var G__13776 = clojure.zip.rightmost.call(null, child__13775);
        loc__13772 = G__13776;
        continue
      }else {
        return loc__13772
      }
      break
    }
  }else {
    return clojure.zip.up.call(null, loc)
  }
};
clojure.zip.end_QMARK_ = function end_QMARK_(loc) {
  return cljs.core._EQ_.call(null, "\ufdd0'end", loc.call(null, 1))
};
clojure.zip.remove = function remove(loc) {
  var vec__13793__13795 = loc;
  var node__13796 = cljs.core.nth.call(null, vec__13793__13795, 0, null);
  var map__13794__13797 = cljs.core.nth.call(null, vec__13793__13795, 1, null);
  var map__13794__13798 = cljs.core.seq_QMARK_.call(null, map__13794__13797) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13794__13797) : map__13794__13797;
  var path__13799 = map__13794__13798;
  var l__13800 = cljs.core._lookup.call(null, map__13794__13798, "\ufdd0'l", null);
  var ppath__13801 = cljs.core._lookup.call(null, map__13794__13798, "\ufdd0'ppath", null);
  var pnodes__13802 = cljs.core._lookup.call(null, map__13794__13798, "\ufdd0'pnodes", null);
  var rs__13803 = cljs.core._lookup.call(null, map__13794__13798, "\ufdd0'r", null);
  if(path__13799 == null) {
    throw"Remove at top";
  }else {
    if(cljs.core.count.call(null, l__13800) > 0) {
      var loc__13804 = cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([cljs.core.peek.call(null, l__13800), cljs.core.assoc.call(null, path__13799, "\ufdd0'l", cljs.core.pop.call(null, l__13800), "\ufdd0'changed?", true)], true), cljs.core.meta.call(null, loc));
      while(true) {
        var temp__4090__auto____13806 = function() {
          var and__3941__auto____13805 = clojure.zip.branch_QMARK_.call(null, loc__13804);
          if(cljs.core.truth_(and__3941__auto____13805)) {
            return clojure.zip.down.call(null, loc__13804)
          }else {
            return and__3941__auto____13805
          }
        }();
        if(cljs.core.truth_(temp__4090__auto____13806)) {
          var child__13807 = temp__4090__auto____13806;
          var G__13809 = clojure.zip.rightmost.call(null, child__13807);
          loc__13804 = G__13809;
          continue
        }else {
          return loc__13804
        }
        break
      }
    }else {
      return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([clojure.zip.make_node.call(null, loc, cljs.core.peek.call(null, pnodes__13802), rs__13803), function() {
        var and__3941__auto____13808 = ppath__13801;
        if(cljs.core.truth_(and__3941__auto____13808)) {
          return cljs.core.assoc.call(null, ppath__13801, "\ufdd0'changed?", true)
        }else {
          return and__3941__auto____13808
        }
      }()], true), cljs.core.meta.call(null, loc))
    }
  }
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__13816 = s;
      var limit__13817 = limit;
      var parts__13818 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__13817, 1)) {
          return cljs.core.conj.call(null, parts__13818, s__13816)
        }else {
          var temp__4090__auto____13819 = cljs.core.re_find.call(null, re, s__13816);
          if(cljs.core.truth_(temp__4090__auto____13819)) {
            var m__13820 = temp__4090__auto____13819;
            var index__13821 = s__13816.indexOf(m__13820);
            var G__13822 = s__13816.substring(index__13821 + cljs.core.count.call(null, m__13820));
            var G__13823 = limit__13817 - 1;
            var G__13824 = cljs.core.conj.call(null, parts__13818, s__13816.substring(0, index__13821));
            s__13816 = G__13822;
            limit__13817 = G__13823;
            parts__13818 = G__13824;
            continue
          }else {
            return cljs.core.conj.call(null, parts__13818, s__13816)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__13828 = s.length;
  while(true) {
    if(index__13828 === 0) {
      return""
    }else {
      var ch__13829 = cljs.core._lookup.call(null, s, index__13828 - 1, null);
      if(function() {
        var or__3943__auto____13830 = cljs.core._EQ_.call(null, ch__13829, "\n");
        if(or__3943__auto____13830) {
          return or__3943__auto____13830
        }else {
          return cljs.core._EQ_.call(null, ch__13829, "\r")
        }
      }()) {
        var G__13831 = index__13828 - 1;
        index__13828 = G__13831;
        continue
      }else {
        return s.substring(0, index__13828)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__13835 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3943__auto____13836 = cljs.core.not.call(null, s__13835);
    if(or__3943__auto____13836) {
      return or__3943__auto____13836
    }else {
      var or__3943__auto____13837 = cljs.core._EQ_.call(null, "", s__13835);
      if(or__3943__auto____13837) {
        return or__3943__auto____13837
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__13835)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__13844 = new goog.string.StringBuffer;
  var length__13845 = s.length;
  var index__13846 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__13845, index__13846)) {
      return buffer__13844.toString()
    }else {
      var ch__13847 = s.charAt(index__13846);
      var temp__4090__auto____13848 = cljs.core._lookup.call(null, cmap, ch__13847, null);
      if(cljs.core.truth_(temp__4090__auto____13848)) {
        var replacement__13849 = temp__4090__auto____13848;
        buffer__13844.append([cljs.core.str(replacement__13849)].join(""))
      }else {
        buffer__13844.append(ch__13847)
      }
      var G__13850 = index__13846 + 1;
      index__13846 = G__13850;
      continue
    }
    break
  }
};
goog.provide("hlisp.env");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("clojure.zip");
goog.require("goog.dom");
hlisp.env.append_child = function append_child(elem, children) {
  if(cljs.core.truth_(function() {
    var and__3941__auto____8671 = elem;
    if(cljs.core.truth_(and__3941__auto____8671)) {
      return children
    }else {
      return and__3941__auto____8671
    }
  }())) {
    return goog.dom.appendChild(elem, children)
  }else {
    return null
  }
};
hlisp.env.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.reduce.call(null, function(m, p__8677) {
          var vec__8678__8679 = p__8677;
          var k__8680 = cljs.core.nth.call(null, vec__8678__8679, 0, null);
          var v__8681 = cljs.core.nth.call(null, vec__8678__8679, 1, null);
          return cljs.core.assoc.call(null, m, clj__GT_js.call(null, k__8680), clj__GT_js.call(null, v__8681))
        }, cljs.core.ObjMap.EMPTY, x).strobj
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
        }else {
          if("\ufdd0'else") {
            return x
          }else {
            return null
          }
        }
      }
    }
  }
};
hlisp.env.IDomNode = {};
hlisp.env._pr_node = function _pr_node(n) {
  if(function() {
    var and__3941__auto____8686 = n;
    if(and__3941__auto____8686) {
      return n.hlisp$env$IDomNode$_pr_node$arity$1
    }else {
      return and__3941__auto____8686
    }
  }()) {
    return n.hlisp$env$IDomNode$_pr_node$arity$1(n)
  }else {
    var x__3769__auto____8687 = n == null ? null : n;
    return function() {
      var or__3943__auto____8688 = hlisp.env._pr_node[goog.typeOf(x__3769__auto____8687)];
      if(or__3943__auto____8688) {
        return or__3943__auto____8688
      }else {
        var or__3943__auto____8689 = hlisp.env._pr_node["_"];
        if(or__3943__auto____8689) {
          return or__3943__auto____8689
        }else {
          throw cljs.core.missing_protocol.call(null, "IDomNode.-pr-node", n);
        }
      }
    }().call(null, n)
  }
};
hlisp.env._tag = function _tag(n) {
  if(function() {
    var and__3941__auto____8694 = n;
    if(and__3941__auto____8694) {
      return n.hlisp$env$IDomNode$_tag$arity$1
    }else {
      return and__3941__auto____8694
    }
  }()) {
    return n.hlisp$env$IDomNode$_tag$arity$1(n)
  }else {
    var x__3769__auto____8695 = n == null ? null : n;
    return function() {
      var or__3943__auto____8696 = hlisp.env._tag[goog.typeOf(x__3769__auto____8695)];
      if(or__3943__auto____8696) {
        return or__3943__auto____8696
      }else {
        var or__3943__auto____8697 = hlisp.env._tag["_"];
        if(or__3943__auto____8697) {
          return or__3943__auto____8697
        }else {
          throw cljs.core.missing_protocol.call(null, "IDomNode.-tag", n);
        }
      }
    }().call(null, n)
  }
};
hlisp.env._attrs = function _attrs(n) {
  if(function() {
    var and__3941__auto____8702 = n;
    if(and__3941__auto____8702) {
      return n.hlisp$env$IDomNode$_attrs$arity$1
    }else {
      return and__3941__auto____8702
    }
  }()) {
    return n.hlisp$env$IDomNode$_attrs$arity$1(n)
  }else {
    var x__3769__auto____8703 = n == null ? null : n;
    return function() {
      var or__3943__auto____8704 = hlisp.env._attrs[goog.typeOf(x__3769__auto____8703)];
      if(or__3943__auto____8704) {
        return or__3943__auto____8704
      }else {
        var or__3943__auto____8705 = hlisp.env._attrs["_"];
        if(or__3943__auto____8705) {
          return or__3943__auto____8705
        }else {
          throw cljs.core.missing_protocol.call(null, "IDomNode.-attrs", n);
        }
      }
    }().call(null, n)
  }
};
hlisp.env._branch_QMARK_ = function _branch_QMARK_(n) {
  if(function() {
    var and__3941__auto____8710 = n;
    if(and__3941__auto____8710) {
      return n.hlisp$env$IDomNode$_branch_QMARK_$arity$1
    }else {
      return and__3941__auto____8710
    }
  }()) {
    return n.hlisp$env$IDomNode$_branch_QMARK_$arity$1(n)
  }else {
    var x__3769__auto____8711 = n == null ? null : n;
    return function() {
      var or__3943__auto____8712 = hlisp.env._branch_QMARK_[goog.typeOf(x__3769__auto____8711)];
      if(or__3943__auto____8712) {
        return or__3943__auto____8712
      }else {
        var or__3943__auto____8713 = hlisp.env._branch_QMARK_["_"];
        if(or__3943__auto____8713) {
          return or__3943__auto____8713
        }else {
          throw cljs.core.missing_protocol.call(null, "IDomNode.-branch?", n);
        }
      }
    }().call(null, n)
  }
};
hlisp.env._children = function _children(n) {
  if(function() {
    var and__3941__auto____8718 = n;
    if(and__3941__auto____8718) {
      return n.hlisp$env$IDomNode$_children$arity$1
    }else {
      return and__3941__auto____8718
    }
  }()) {
    return n.hlisp$env$IDomNode$_children$arity$1(n)
  }else {
    var x__3769__auto____8719 = n == null ? null : n;
    return function() {
      var or__3943__auto____8720 = hlisp.env._children[goog.typeOf(x__3769__auto____8719)];
      if(or__3943__auto____8720) {
        return or__3943__auto____8720
      }else {
        var or__3943__auto____8721 = hlisp.env._children["_"];
        if(or__3943__auto____8721) {
          return or__3943__auto____8721
        }else {
          throw cljs.core.missing_protocol.call(null, "IDomNode.-children", n);
        }
      }
    }().call(null, n)
  }
};
hlisp.env._make_node = function _make_node(n, children) {
  if(function() {
    var and__3941__auto____8726 = n;
    if(and__3941__auto____8726) {
      return n.hlisp$env$IDomNode$_make_node$arity$2
    }else {
      return and__3941__auto____8726
    }
  }()) {
    return n.hlisp$env$IDomNode$_make_node$arity$2(n, children)
  }else {
    var x__3769__auto____8727 = n == null ? null : n;
    return function() {
      var or__3943__auto____8728 = hlisp.env._make_node[goog.typeOf(x__3769__auto____8727)];
      if(or__3943__auto____8728) {
        return or__3943__auto____8728
      }else {
        var or__3943__auto____8729 = hlisp.env._make_node["_"];
        if(or__3943__auto____8729) {
          return or__3943__auto____8729
        }else {
          throw cljs.core.missing_protocol.call(null, "IDomNode.-make-node", n);
        }
      }
    }().call(null, n, children)
  }
};
hlisp.env._dom = function _dom(n) {
  if(function() {
    var and__3941__auto____8734 = n;
    if(and__3941__auto____8734) {
      return n.hlisp$env$IDomNode$_dom$arity$1
    }else {
      return and__3941__auto____8734
    }
  }()) {
    return n.hlisp$env$IDomNode$_dom$arity$1(n)
  }else {
    var x__3769__auto____8735 = n == null ? null : n;
    return function() {
      var or__3943__auto____8736 = hlisp.env._dom[goog.typeOf(x__3769__auto____8735)];
      if(or__3943__auto____8736) {
        return or__3943__auto____8736
      }else {
        var or__3943__auto____8737 = hlisp.env._dom["_"];
        if(or__3943__auto____8737) {
          return or__3943__auto____8737
        }else {
          throw cljs.core.missing_protocol.call(null, "IDomNode.-dom", n);
        }
      }
    }().call(null, n)
  }
};
hlisp.env.pr_node = function pr_node(n) {
  return hlisp.env._pr_node.call(null, n)
};
hlisp.env.tag = function tag(n) {
  return hlisp.env._tag.call(null, n)
};
hlisp.env.attrs = function attrs(n) {
  return hlisp.env._attrs.call(null, n)
};
hlisp.env.branch_QMARK_ = function branch_QMARK_(n) {
  return hlisp.env._branch_QMARK_.call(null, n)
};
hlisp.env.children = function children(n) {
  return hlisp.env._children.call(null, n)
};
hlisp.env.make_node = function make_node(n, children) {
  return hlisp.env._make_node.call(null, n, children)
};
hlisp.env.dom = function dom(n) {
  if(function() {
    var G__8741__8742 = n;
    if(G__8741__8742) {
      if(cljs.core.truth_(function() {
        var or__3943__auto____8743 = null;
        if(cljs.core.truth_(or__3943__auto____8743)) {
          return or__3943__auto____8743
        }else {
          return G__8741__8742.hlisp$env$IDomNode$
        }
      }())) {
        return true
      }else {
        if(!G__8741__8742.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, hlisp.env.IDomNode, G__8741__8742)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, hlisp.env.IDomNode, G__8741__8742)
    }
  }()) {
    return hlisp.env._dom.call(null, n)
  }else {
    return null
  }
};
hlisp.env.node_zip = function node_zip(root) {
  return clojure.zip.zipper.call(null, hlisp.env.branch_QMARK_, hlisp.env.children, hlisp.env.make_node, root)
};
hlisp.env.TextNode = function(tag, text, mymeta) {
  this.tag = tag;
  this.text = text;
  this.mymeta = mymeta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 537264128
};
hlisp.env.TextNode.cljs$lang$type = true;
hlisp.env.TextNode.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "hlisp.env/TextNode")
};
hlisp.env.TextNode.prototype.hlisp$env$IDomNode$ = true;
hlisp.env.TextNode.prototype.hlisp$env$IDomNode$_pr_node$arity$1 = function(n) {
  var this__8744 = this;
  return[cljs.core.str("("), cljs.core.str(n.tag), cljs.core.str(" "), cljs.core.str(cljs.core.pr_str.call(null, n.text)), cljs.core.str(")")].join("")
};
hlisp.env.TextNode.prototype.hlisp$env$IDomNode$_tag$arity$1 = function(n) {
  var this__8745 = this;
  return n.tag
};
hlisp.env.TextNode.prototype.hlisp$env$IDomNode$_attrs$arity$1 = function(n) {
  var this__8746 = this;
  return null
};
hlisp.env.TextNode.prototype.hlisp$env$IDomNode$_branch_QMARK_$arity$1 = function(n) {
  var this__8747 = this;
  return false
};
hlisp.env.TextNode.prototype.hlisp$env$IDomNode$_children$arity$1 = function(n) {
  var this__8748 = this;
  if(false) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Text nodes can't have children."), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));
  }
};
hlisp.env.TextNode.prototype.hlisp$env$IDomNode$_make_node$arity$2 = function(n, kids) {
  var this__8749 = this;
  return hlisp.env.make_text_node.call(null, n.tag, n.text)
};
hlisp.env.TextNode.prototype.hlisp$env$IDomNode$_dom$arity$1 = function(n) {
  var this__8750 = this;
  if(cljs.core._EQ_.call(null, "$text", n.tag)) {
    return document.createTextNode(n.text)
  }else {
    return document.createComment(n.text)
  }
};
hlisp.env.TextNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(n, new_meta) {
  var this__8751 = this;
  return new hlisp.env.TextNode(n.tag, n.text, new_meta)
};
hlisp.env.TextNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(n) {
  var this__8752 = this;
  return n.mymeta
};
hlisp.env.TextNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(n, opts) {
  var this__8753 = this;
  console.log(hlisp.env.dom.call(null, n));
  return hlisp.env.pr_node.call(null, n)
};
hlisp.env.TextNode.prototype.toString = function() {
  var this__8754 = this;
  var n__8755 = this;
  return n__8755.text
};
hlisp.env.TextNode;
hlisp.env.make_text_node = function make_text_node(text) {
  return new hlisp.env.TextNode("$text", text, null)
};
hlisp.env.make_comment_node = function make_comment_node(text) {
  return new hlisp.env.TextNode("$comment", text, null)
};
hlisp.env.ElemNode = function(tag, attrs, children, ids, mymeta) {
  this.tag = tag;
  this.attrs = attrs;
  this.children = children;
  this.ids = ids;
  this.mymeta = mymeta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 679880671
};
hlisp.env.ElemNode.cljs$lang$type = true;
hlisp.env.ElemNode.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "hlisp.env/ElemNode")
};
hlisp.env.ElemNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(n, k) {
  var this__8762 = this;
  return k.call(null, n.attrs)
};
hlisp.env.ElemNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(n, k, not_found) {
  var this__8763 = this;
  return k.call(null, n.attrs, not_found)
};
hlisp.env.ElemNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(n, k) {
  var this__8764 = this;
  return cljs.core.contains_QMARK_.call(null, n.attrs, k)
};
hlisp.env.ElemNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(n, k, v) {
  var this__8765 = this;
  if(cljs.core.integer_QMARK_.call(null, k)) {
    return hlisp.env.make_elem_node.call(null, n.tag, n.attrs, cljs.core.assoc.call(null, n.children, k, v), n.ids, n.mymeta)
  }else {
    return hlisp.env.make_elem_node.call(null, n.tag, cljs.core.assoc.call(null, n.attrs, k, v), n.children, n.ids, n.mymeta)
  }
};
hlisp.env.ElemNode.prototype.call = function() {
  var G__8829__delegate = function(this_sym8766, args) {
    var this_sym8766__8768 = this;
    var n__8769 = this_sym8766__8768;
    var ntag__8770 = n__8769.tag;
    var nattrs__8771 = n__8769.attrs;
    var nchildren__8772 = n__8769.children;
    var nids__8773 = n__8769.ids;
    var nmeta__8774 = n__8769.mymeta;
    var nargs__8775 = cljs.core.map.call(null, function(p1__8756_SHARP_) {
      if(cljs.core.string_QMARK_.call(null, p1__8756_SHARP_)) {
        return hlisp.env.make_text_node.call(null, p1__8756_SHARP_)
      }else {
        return p1__8756_SHARP_
      }
    }, args);
    var cleanup__8779 = function(nodes) {
      return cljs.core.vec.call(null, cljs.core.filter.call(null, function(p1__8757_SHARP_) {
        var G__8776__8777 = p1__8757_SHARP_;
        if(G__8776__8777) {
          if(cljs.core.truth_(function() {
            var or__3943__auto____8778 = null;
            if(cljs.core.truth_(or__3943__auto____8778)) {
              return or__3943__auto____8778
            }else {
              return G__8776__8777.hlisp$env$IDomNode$
            }
          }())) {
            return true
          }else {
            if(!G__8776__8777.cljs$lang$protocol_mask$partition$) {
              return cljs.core.type_satisfies_.call(null, hlisp.env.IDomNode, G__8776__8777)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, hlisp.env.IDomNode, G__8776__8777)
        }
      }, nodes))
    };
    if(cljs.core.seq.call(null, nargs__8775)) {
      var vec__8780__8781 = nargs__8775;
      var head__8782 = cljs.core.nth.call(null, vec__8780__8781, 0, null);
      var tail__8783 = cljs.core.nthnext.call(null, vec__8780__8781, 1);
      if(function() {
        var G__8784__8785 = head__8782;
        if(G__8784__8785) {
          if(cljs.core.truth_(function() {
            var or__3943__auto____8786 = null;
            if(cljs.core.truth_(or__3943__auto____8786)) {
              return or__3943__auto____8786
            }else {
              return G__8784__8785.hlisp$env$IDomNode$
            }
          }())) {
            return true
          }else {
            if(!G__8784__8785.cljs$lang$protocol_mask$partition$) {
              return cljs.core.type_satisfies_.call(null, hlisp.env.IDomNode, G__8784__8785)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, hlisp.env.IDomNode, G__8784__8785)
        }
      }()) {
        return hlisp.env.make_elem_node.call(null, ntag__8770, nattrs__8771, cljs.core.into.call(null, nchildren__8772, cleanup__8779.call(null, nargs__8775)), nids__8773, nmeta__8774)
      }else {
        return hlisp.env.make_elem_node.call(null, ntag__8770, cljs.core.into.call(null, nattrs__8771, head__8782), cljs.core.into.call(null, nchildren__8772, cleanup__8779.call(null, tail__8783)), nids__8773, nmeta__8774)
      }
    }else {
      return n__8769
    }
  };
  var G__8829 = function(this_sym8766, var_args) {
    var this__8767 = this;
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__8829__delegate.call(this, this_sym8766, args)
  };
  G__8829.cljs$lang$maxFixedArity = 1;
  G__8829.cljs$lang$applyTo = function(arglist__8830) {
    var this_sym8766 = cljs.core.first(arglist__8830);
    var args = cljs.core.rest(arglist__8830);
    return G__8829__delegate(this_sym8766, args)
  };
  G__8829.cljs$lang$arity$variadic = G__8829__delegate;
  return G__8829
}();
hlisp.env.ElemNode.prototype.apply = function(this_sym8760, args8761) {
  var this__8787 = this;
  return this_sym8760.call.apply(this_sym8760, [this_sym8760].concat(args8761.slice()))
};
hlisp.env.ElemNode.prototype.cljs$core$INext$_next$arity$1 = function(n) {
  var this__8788 = this;
  var nx__8789 = cljs.core.vec.call(null, cljs.core.next.call(null, n.children));
  if(cljs.core.seq.call(null, nx__8789)) {
    return hlisp.env.make_elem_node.call(null, n.tag, n.attrs, nx__8789, n.ids, n.mymeta)
  }else {
    return null
  }
};
hlisp.env.ElemNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(n, o) {
  var this__8790 = this;
  return hlisp.env.make_elem_node.call(null, n.tag, n.attrs, cljs.core.conj.call(null, n.children, o), n.ids, n.mymeta)
};
hlisp.env.ElemNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(n) {
  var this__8791 = this;
  return hlisp.env.make_elem_node.call(null, n.tag, n.attrs, cljs.core.vec.call(null, cljs.core.reverse.call(null, n.children)), n.ids, n.mymeta)
};
hlisp.env.ElemNode.prototype.toString = function() {
  var this__8792 = this;
  var n__8793 = this;
  return hlisp.env.pr_node.call(null, n__8793)
};
hlisp.env.ElemNode.prototype.hlisp$env$IDomNode$ = true;
hlisp.env.ElemNode.prototype.hlisp$env$IDomNode$_pr_node$arity$1 = function(n) {
  var this__8794 = this;
  var tag__8795 = n.tag;
  var attrs__8796 = n.attrs;
  var children__8797 = n.children;
  var need_paren_QMARK___8799 = function() {
    var or__3943__auto____8798 = cljs.core.seq.call(null, attrs__8796);
    if(or__3943__auto____8798) {
      return or__3943__auto____8798
    }else {
      return cljs.core.seq.call(null, children__8797)
    }
  }();
  var o_paren__8800 = cljs.core.truth_(need_paren_QMARK___8799) ? "(" : "";
  var c_paren__8801 = cljs.core.truth_(need_paren_QMARK___8799) ? ")" : "";
  var attrs_str__8802 = 0 < cljs.core.count.call(null, attrs__8796) ? cljs.core.pr_str.call(null, attrs__8796) : "";
  var child_str__8803 = cljs.core.seq.call(null, children__8797) ? clojure.string.join.call(null, " ", cljs.core.map.call(null, hlisp.env.pr_node, children__8797)) : "";
  var body__8804 = clojure.string.join.call(null, " ", cljs.core.remove.call(null, clojure.string.blank_QMARK_, cljs.core.PersistentVector.fromArray([tag__8795, attrs_str__8802, child_str__8803], true)));
  return[cljs.core.str(o_paren__8800), cljs.core.str(body__8804), cljs.core.str(c_paren__8801)].join("")
};
hlisp.env.ElemNode.prototype.hlisp$env$IDomNode$_tag$arity$1 = function(n) {
  var this__8805 = this;
  return n.tag
};
hlisp.env.ElemNode.prototype.hlisp$env$IDomNode$_attrs$arity$1 = function(n) {
  var this__8806 = this;
  return n.attrs
};
hlisp.env.ElemNode.prototype.hlisp$env$IDomNode$_branch_QMARK_$arity$1 = function(n) {
  var this__8807 = this;
  return true
};
hlisp.env.ElemNode.prototype.hlisp$env$IDomNode$_children$arity$1 = function(n) {
  var this__8808 = this;
  return cljs.core.seq.call(null, n.children)
};
hlisp.env.ElemNode.prototype.hlisp$env$IDomNode$_make_node$arity$2 = function(n, kids) {
  var this__8809 = this;
  return hlisp.env.make_elem_node.call(null, n.tag, n.attrs, cljs.core.vec.call(null, kids), n.ids, n.mymeta)
};
hlisp.env.ElemNode.prototype.hlisp$env$IDomNode$_dom$arity$1 = function(n) {
  var this__8810 = this;
  var elem__8811 = document.createElement(n.tag);
  var ids__8812 = n.ids;
  var attrs_noid__8813 = n.attrs;
  var attrs__8814 = cljs.core.seq.call(null, ids__8812) ? cljs.core.assoc.call(null, attrs_noid__8813, "\ufdd0'data-hl", clojure.string.join.call(null, " ", ids__8812)) : attrs_noid__8813;
  var children__8815 = cljs.core.mapv.call(null, hlisp.env.dom, n.children);
  goog.dom.setProperties(elem__8811, hlisp.env.clj__GT_js.call(null, attrs__8814));
  cljs.core.mapv.call(null, function(p1__8758_SHARP_) {
    return elem__8811.setAttribute(cljs.core.name.call(null, cljs.core.first.call(null, p1__8758_SHARP_)), cljs.core.second.call(null, p1__8758_SHARP_))
  }, cljs.core.vec.call(null, attrs__8814));
  cljs.core.mapv.call(null, function(p1__8759_SHARP_) {
    return hlisp.env.append_child.call(null, elem__8811, p1__8759_SHARP_)
  }, children__8815);
  return elem__8811
};
hlisp.env.ElemNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(n) {
  var this__8816 = this;
  if(cljs.core.seq.call(null, n.children)) {
    return n
  }else {
    return null
  }
};
hlisp.env.ElemNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(n, opts) {
  var this__8817 = this;
  console.log(hlisp.env.dom.call(null, n));
  return hlisp.env.pr_node.call(null, n)
};
hlisp.env.ElemNode.prototype.cljs$core$ICounted$_count$arity$1 = function(n) {
  var this__8818 = this;
  return cljs.core.count.call(null, n.children)
};
hlisp.env.ElemNode.prototype.cljs$core$IStack$_peek$arity$1 = function(n) {
  var this__8819 = this;
  return cljs.core.peek.call(null, n.children)
};
hlisp.env.ElemNode.prototype.cljs$core$IStack$_pop$arity$1 = function(n) {
  var this__8820 = this;
  return hlisp.env.make_elem_node.call(null, n.tag, n.attrs, cljs.core.pop.call(null, n.children), n.ids, n.mymeta)
};
hlisp.env.ElemNode.prototype.cljs$core$ISeq$_first$arity$1 = function(n) {
  var this__8821 = this;
  return cljs.core.first.call(null, n.children)
};
hlisp.env.ElemNode.prototype.cljs$core$ISeq$_rest$arity$1 = function(n) {
  var this__8822 = this;
  return hlisp.env.make_elem_node.call(null, n.tag, n.attrs, cljs.core.vec.call(null, cljs.core.rest.call(null, n.children)), n.ids, n.mymeta)
};
hlisp.env.ElemNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(n, new_meta) {
  var this__8823 = this;
  return hlisp.env.make_elem_node.call(null, n.tag, n.attrs, n.children, n.ids, new_meta)
};
hlisp.env.ElemNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(n) {
  var this__8824 = this;
  return n.mymeta
};
hlisp.env.ElemNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(n, i) {
  var this__8825 = this;
  return cljs.core.nth.call(null, n.children, i)
};
hlisp.env.ElemNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(n, i, not_found) {
  var this__8826 = this;
  return cljs.core.nth.call(null, n.children, i, not_found)
};
hlisp.env.ElemNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(n) {
  var this__8827 = this;
  return hlisp.env.make_elem_node.call(null, n.tag, n.attrs, cljs.core.PersistentVector.EMPTY, n.ids, n.mymeta)
};
hlisp.env.ElemNode.prototype.cljs$core$IMap$_dissoc$arity$2 = function(n, k) {
  var this__8828 = this;
  if(!cljs.core.integer_QMARK_.call(null, k)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't dissoc children"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not", cljs.core.with_meta(cljs.core.list("\ufdd1'integer?", "\ufdd1'k"), cljs.core.hash_map("\ufdd0'line", 205, "\ufdd0'column", 18))), cljs.core.hash_map("\ufdd0'line", 205, "\ufdd0'column", 13))))].join(""));
  }
  return hlisp.env.make_elem_node.call(null, n.tag, cljs.core.dissoc.call(null, n.attrs, k), n.children, n.ids, n.mymeta)
};
hlisp.env.ElemNode;
hlisp.env.make_elem_node = function() {
  var make_elem_node = null;
  var make_elem_node__1 = function(tag) {
    return new hlisp.env.ElemNode(tag, cljs.core.ObjMap.EMPTY, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY, null)
  };
  var make_elem_node__2 = function(tag, attrs) {
    return new hlisp.env.ElemNode(tag, attrs, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY, null)
  };
  var make_elem_node__3 = function(tag, attrs, kids) {
    return new hlisp.env.ElemNode(tag, attrs, kids, cljs.core.PersistentVector.EMPTY, null)
  };
  var make_elem_node__4 = function(tag, attrs, kids, ids) {
    return new hlisp.env.ElemNode(tag, attrs, kids, ids, null)
  };
  var make_elem_node__5 = function(tag, attrs, kids, ids, mymeta) {
    return new hlisp.env.ElemNode(tag, attrs, kids, ids, mymeta)
  };
  make_elem_node = function(tag, attrs, kids, ids, mymeta) {
    switch(arguments.length) {
      case 1:
        return make_elem_node__1.call(this, tag);
      case 2:
        return make_elem_node__2.call(this, tag, attrs);
      case 3:
        return make_elem_node__3.call(this, tag, attrs, kids);
      case 4:
        return make_elem_node__4.call(this, tag, attrs, kids, ids);
      case 5:
        return make_elem_node__5.call(this, tag, attrs, kids, ids, mymeta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_elem_node.cljs$lang$arity$1 = make_elem_node__1;
  make_elem_node.cljs$lang$arity$2 = make_elem_node__2;
  make_elem_node.cljs$lang$arity$3 = make_elem_node__3;
  make_elem_node.cljs$lang$arity$4 = make_elem_node__4;
  make_elem_node.cljs$lang$arity$5 = make_elem_node__5;
  return make_elem_node
}();
hlisp.env.clone = function clone(n) {
  return hlisp.env.make_elem_node.call(null, n.tag, n.attrs, n.children, cljs.core.conj.call(null, n.ids, [cljs.core.str(cljs.core.gensym.call(null))].join("")))
};
hlisp.env.a = hlisp.env.make_elem_node.call(null, "a");
hlisp.env.abbr = hlisp.env.make_elem_node.call(null, "abbr");
hlisp.env.acronym = hlisp.env.make_elem_node.call(null, "acronym");
hlisp.env.address = hlisp.env.make_elem_node.call(null, "address");
hlisp.env.applet = hlisp.env.make_elem_node.call(null, "applet");
hlisp.env.area = hlisp.env.make_elem_node.call(null, "area");
hlisp.env.article = hlisp.env.make_elem_node.call(null, "article");
hlisp.env.aside = hlisp.env.make_elem_node.call(null, "aside");
hlisp.env.audio = hlisp.env.make_elem_node.call(null, "audio");
hlisp.env.b = hlisp.env.make_elem_node.call(null, "b");
hlisp.env.base = hlisp.env.make_elem_node.call(null, "base");
hlisp.env.basefont = hlisp.env.make_elem_node.call(null, "basefont");
hlisp.env.bdi = hlisp.env.make_elem_node.call(null, "bdi");
hlisp.env.bdo = hlisp.env.make_elem_node.call(null, "bdo");
hlisp.env.big = hlisp.env.make_elem_node.call(null, "big");
hlisp.env.blockquote = hlisp.env.make_elem_node.call(null, "blockquote");
hlisp.env.body = hlisp.env.make_elem_node.call(null, "body");
hlisp.env.br = hlisp.env.make_elem_node.call(null, "br");
hlisp.env.button = hlisp.env.make_elem_node.call(null, "button");
hlisp.env.canvas = hlisp.env.make_elem_node.call(null, "canvas");
hlisp.env.caption = hlisp.env.make_elem_node.call(null, "caption");
hlisp.env.center = hlisp.env.make_elem_node.call(null, "center");
hlisp.env.cite = hlisp.env.make_elem_node.call(null, "cite");
hlisp.env.code = hlisp.env.make_elem_node.call(null, "code");
hlisp.env.col = hlisp.env.make_elem_node.call(null, "col");
hlisp.env.colgroup = hlisp.env.make_elem_node.call(null, "colgroup");
hlisp.env.command = hlisp.env.make_elem_node.call(null, "command");
hlisp.env.data = hlisp.env.make_elem_node.call(null, "data");
hlisp.env.datalist = hlisp.env.make_elem_node.call(null, "datalist");
hlisp.env.dd = hlisp.env.make_elem_node.call(null, "dd");
hlisp.env.del = hlisp.env.make_elem_node.call(null, "del");
hlisp.env.details = hlisp.env.make_elem_node.call(null, "details");
hlisp.env.dfn = hlisp.env.make_elem_node.call(null, "dfn");
hlisp.env.dir = hlisp.env.make_elem_node.call(null, "dir");
hlisp.env.div = hlisp.env.make_elem_node.call(null, "div");
hlisp.env.dl = hlisp.env.make_elem_node.call(null, "dl");
hlisp.env.dt = hlisp.env.make_elem_node.call(null, "dt");
hlisp.env.em = hlisp.env.make_elem_node.call(null, "em");
hlisp.env.embed = hlisp.env.make_elem_node.call(null, "embed");
hlisp.env.eventsource = hlisp.env.make_elem_node.call(null, "eventsource");
hlisp.env.fieldset = hlisp.env.make_elem_node.call(null, "fieldset");
hlisp.env.figcaption = hlisp.env.make_elem_node.call(null, "figcaption");
hlisp.env.figure = hlisp.env.make_elem_node.call(null, "figure");
hlisp.env.font = hlisp.env.make_elem_node.call(null, "font");
hlisp.env.footer = hlisp.env.make_elem_node.call(null, "footer");
hlisp.env.form = hlisp.env.make_elem_node.call(null, "form");
hlisp.env.frame = hlisp.env.make_elem_node.call(null, "frame");
hlisp.env.frameset = hlisp.env.make_elem_node.call(null, "frameset");
hlisp.env.h1 = hlisp.env.make_elem_node.call(null, "h1");
hlisp.env.h2 = hlisp.env.make_elem_node.call(null, "h2");
hlisp.env.h3 = hlisp.env.make_elem_node.call(null, "h3");
hlisp.env.h4 = hlisp.env.make_elem_node.call(null, "h4");
hlisp.env.h5 = hlisp.env.make_elem_node.call(null, "h5");
hlisp.env.h6 = hlisp.env.make_elem_node.call(null, "h6");
hlisp.env.head = hlisp.env.make_elem_node.call(null, "head");
hlisp.env.header = hlisp.env.make_elem_node.call(null, "header");
hlisp.env.hgroup = hlisp.env.make_elem_node.call(null, "hgroup");
hlisp.env.hr = hlisp.env.make_elem_node.call(null, "hr");
hlisp.env.html = hlisp.env.make_elem_node.call(null, "html");
hlisp.env.i = hlisp.env.make_elem_node.call(null, "i");
hlisp.env.iframe = hlisp.env.make_elem_node.call(null, "iframe");
hlisp.env.img = hlisp.env.make_elem_node.call(null, "img");
hlisp.env.input = hlisp.env.make_elem_node.call(null, "input");
hlisp.env.ins = hlisp.env.make_elem_node.call(null, "ins");
hlisp.env.isindex = hlisp.env.make_elem_node.call(null, "isindex");
hlisp.env.kbd = hlisp.env.make_elem_node.call(null, "kbd");
hlisp.env.keygen = hlisp.env.make_elem_node.call(null, "keygen");
hlisp.env.label = hlisp.env.make_elem_node.call(null, "label");
hlisp.env.legend = hlisp.env.make_elem_node.call(null, "legend");
hlisp.env.li = hlisp.env.make_elem_node.call(null, "li");
hlisp.env.link = hlisp.env.make_elem_node.call(null, "link");
hlisp.env.html_map = hlisp.env.make_elem_node.call(null, "map");
hlisp.env.mark = hlisp.env.make_elem_node.call(null, "mark");
hlisp.env.menu = hlisp.env.make_elem_node.call(null, "menu");
hlisp.env.html_meta = hlisp.env.make_elem_node.call(null, "meta");
hlisp.env.meter = hlisp.env.make_elem_node.call(null, "meter");
hlisp.env.nav = hlisp.env.make_elem_node.call(null, "nav");
hlisp.env.noframes = hlisp.env.make_elem_node.call(null, "noframes");
hlisp.env.noscript = hlisp.env.make_elem_node.call(null, "noscript");
hlisp.env.object = hlisp.env.make_elem_node.call(null, "object");
hlisp.env.ol = hlisp.env.make_elem_node.call(null, "ol");
hlisp.env.optgroup = hlisp.env.make_elem_node.call(null, "optgroup");
hlisp.env.option = hlisp.env.make_elem_node.call(null, "option");
hlisp.env.output = hlisp.env.make_elem_node.call(null, "output");
hlisp.env.p = hlisp.env.make_elem_node.call(null, "p");
hlisp.env.param = hlisp.env.make_elem_node.call(null, "param");
hlisp.env.pre = hlisp.env.make_elem_node.call(null, "pre");
hlisp.env.progress = hlisp.env.make_elem_node.call(null, "progress");
hlisp.env.q = hlisp.env.make_elem_node.call(null, "q");
hlisp.env.rp = hlisp.env.make_elem_node.call(null, "rp");
hlisp.env.rt = hlisp.env.make_elem_node.call(null, "rt");
hlisp.env.ruby = hlisp.env.make_elem_node.call(null, "ruby");
hlisp.env.s = hlisp.env.make_elem_node.call(null, "s");
hlisp.env.samp = hlisp.env.make_elem_node.call(null, "samp");
hlisp.env.script = hlisp.env.make_elem_node.call(null, "script");
hlisp.env.section = hlisp.env.make_elem_node.call(null, "section");
hlisp.env.select = hlisp.env.make_elem_node.call(null, "select");
hlisp.env.small = hlisp.env.make_elem_node.call(null, "small");
hlisp.env.source = hlisp.env.make_elem_node.call(null, "source");
hlisp.env.span = hlisp.env.make_elem_node.call(null, "span");
hlisp.env.strike = hlisp.env.make_elem_node.call(null, "strike");
hlisp.env.strong = hlisp.env.make_elem_node.call(null, "strong");
hlisp.env.style = hlisp.env.make_elem_node.call(null, "style");
hlisp.env.sub = hlisp.env.make_elem_node.call(null, "sub");
hlisp.env.summary = hlisp.env.make_elem_node.call(null, "summary");
hlisp.env.sup = hlisp.env.make_elem_node.call(null, "sup");
hlisp.env.table = hlisp.env.make_elem_node.call(null, "table");
hlisp.env.tbody = hlisp.env.make_elem_node.call(null, "tbody");
hlisp.env.td = hlisp.env.make_elem_node.call(null, "td");
hlisp.env.textarea = hlisp.env.make_elem_node.call(null, "textarea");
hlisp.env.tfoot = hlisp.env.make_elem_node.call(null, "tfoot");
hlisp.env.th = hlisp.env.make_elem_node.call(null, "th");
hlisp.env.thead = hlisp.env.make_elem_node.call(null, "thead");
hlisp.env.html_time = hlisp.env.make_elem_node.call(null, "time");
hlisp.env.title = hlisp.env.make_elem_node.call(null, "title");
hlisp.env.tr = hlisp.env.make_elem_node.call(null, "tr");
hlisp.env.track = hlisp.env.make_elem_node.call(null, "track");
hlisp.env.tt = hlisp.env.make_elem_node.call(null, "tt");
hlisp.env.u = hlisp.env.make_elem_node.call(null, "u");
hlisp.env.ul = hlisp.env.make_elem_node.call(null, "ul");
hlisp.env.html_var = hlisp.env.make_elem_node.call(null, "var");
hlisp.env.video = hlisp.env.make_elem_node.call(null, "video");
hlisp.env.wbr = hlisp.env.make_elem_node.call(null, "wbr");
hlisp.env.$text = hlisp.env.make_text_node;
hlisp.env.$comment = hlisp.env.make_comment_node;
hlisp.env.text = function text(txt) {
  return txt
};
hlisp.env._STAR_initfns_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
hlisp.env.add_initfn_BANG_ = function add_initfn_BANG_(f) {
  return cljs.core.swap_BANG_.call(null, hlisp.env._STAR_initfns_STAR_, cljs.core.into, cljs.core.PersistentVector.fromArray([f], true))
};
hlisp.env.init = function init(forms) {
  var body__8833 = document.body;
  goog.dom.removeChildren(body__8833);
  cljs.core.mapv.call(null, function(p1__8831_SHARP_) {
    return hlisp.env.append_child.call(null, body__8833, hlisp.env.dom.call(null, p1__8831_SHARP_))
  }, forms);
  return cljs.core.mapv.call(null, function(f) {
    return f.call(null)
  }, cljs.core.deref.call(null, hlisp.env._STAR_initfns_STAR_))
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3941__auto____13304 = reader;
    if(and__3941__auto____13304) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3941__auto____13304
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__3769__auto____13305 = reader == null ? null : reader;
    return function() {
      var or__3943__auto____13306 = cljs.reader.read_char[goog.typeOf(x__3769__auto____13305)];
      if(or__3943__auto____13306) {
        return or__3943__auto____13306
      }else {
        var or__3943__auto____13307 = cljs.reader.read_char["_"];
        if(or__3943__auto____13307) {
          return or__3943__auto____13307
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3941__auto____13312 = reader;
    if(and__3941__auto____13312) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3941__auto____13312
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__3769__auto____13313 = reader == null ? null : reader;
    return function() {
      var or__3943__auto____13314 = cljs.reader.unread[goog.typeOf(x__3769__auto____13313)];
      if(or__3943__auto____13314) {
        return or__3943__auto____13314
      }else {
        var or__3943__auto____13315 = cljs.reader.unread["_"];
        if(or__3943__auto____13315) {
          return or__3943__auto____13315
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__13316 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__13316.buffer_atom))) {
    var idx__13317 = cljs.core.deref.call(null, this__13316.index_atom);
    cljs.core.swap_BANG_.call(null, this__13316.index_atom, cljs.core.inc);
    return this__13316.s[idx__13317]
  }else {
    var buf__13318 = cljs.core.deref.call(null, this__13316.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__13316.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__13318)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__13319 = this;
  return cljs.core.swap_BANG_.call(null, this__13319.buffer_atom, function(p1__13299_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__13299_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3943__auto____13321 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3943__auto____13321)) {
    return or__3943__auto____13321
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3943__auto____13326 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3943__auto____13326) {
    return or__3943__auto____13326
  }else {
    var and__3941__auto____13328 = function() {
      var or__3943__auto____13327 = "+" === initch;
      if(or__3943__auto____13327) {
        return or__3943__auto____13327
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3941__auto____13328)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__13329 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__13329);
        return next_ch__13329
      }())
    }else {
      return and__3941__auto____13328
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__13330) {
    var rdr = cljs.core.first(arglist__13330);
    var msg = cljs.core.rest(arglist__13330);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3941__auto____13334 = !(ch === "#");
  if(and__3941__auto____13334) {
    var and__3941__auto____13335 = !(ch === "'");
    if(and__3941__auto____13335) {
      var and__3941__auto____13336 = !(ch === ":");
      if(and__3941__auto____13336) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3941__auto____13336
      }
    }else {
      return and__3941__auto____13335
    }
  }else {
    return and__3941__auto____13334
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__13341 = new goog.string.StringBuffer(initch);
  var ch__13342 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3943__auto____13343 = ch__13342 == null;
      if(or__3943__auto____13343) {
        return or__3943__auto____13343
      }else {
        var or__3943__auto____13344 = cljs.reader.whitespace_QMARK_.call(null, ch__13342);
        if(or__3943__auto____13344) {
          return or__3943__auto____13344
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__13342)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__13342);
      return sb__13341.toString()
    }else {
      var G__13345 = function() {
        sb__13341.append(ch__13342);
        return sb__13341
      }();
      var G__13346 = cljs.reader.read_char.call(null, rdr);
      sb__13341 = G__13345;
      ch__13342 = G__13346;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__13350 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3943__auto____13351 = ch__13350 === "n";
      if(or__3943__auto____13351) {
        return or__3943__auto____13351
      }else {
        var or__3943__auto____13352 = ch__13350 === "r";
        if(or__3943__auto____13352) {
          return or__3943__auto____13352
        }else {
          return ch__13350 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__13354 = re.exec(s);
  if(matches__13354 == null) {
    return null
  }else {
    if(matches__13354.length === 1) {
      return matches__13354[0]
    }else {
      return matches__13354
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__13362 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__13363 = groups__13362[2];
  if(!function() {
    var or__3943__auto____13364 = group3__13363 == null;
    if(or__3943__auto____13364) {
      return or__3943__auto____13364
    }else {
      return group3__13363.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__13365 = "-" === groups__13362[1] ? -1 : 1;
    var a__13366 = cljs.core.truth_(groups__13362[3]) ? [groups__13362[3], 10] : cljs.core.truth_(groups__13362[4]) ? [groups__13362[4], 16] : cljs.core.truth_(groups__13362[5]) ? [groups__13362[5], 8] : cljs.core.truth_(groups__13362[7]) ? [groups__13362[7], parseInt(groups__13362[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__13367 = a__13366[0];
    var radix__13368 = a__13366[1];
    if(n__13367 == null) {
      return null
    }else {
      return negate__13365 * parseInt(n__13367, radix__13368)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__13372 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__13373 = groups__13372[1];
  var denominator__13374 = groups__13372[2];
  return parseInt(numinator__13373) / parseInt(denominator__13374)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__13377 = re.exec(s);
  if(function() {
    var and__3941__auto____13378 = !(matches__13377 == null);
    if(and__3941__auto____13378) {
      return matches__13377[0] === s
    }else {
      return and__3941__auto____13378
    }
  }()) {
    if(matches__13377.length === 1) {
      return matches__13377[0]
    }else {
      return matches__13377
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__13380 = parseInt(code_str, 16);
  return String.fromCharCode(code__13380)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__13383 = cljs.reader.read_char.call(null, reader);
  var mapresult__13384 = cljs.reader.escape_char_map.call(null, ch__13383);
  if(cljs.core.truth_(mapresult__13384)) {
    return mapresult__13384
  }else {
    if(ch__13383 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__13383, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__13383 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__13383, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__13383)) {
          return String.fromCharCode(ch__13383)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__13383)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__13386 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__13386))) {
      var G__13387 = cljs.reader.read_char.call(null, rdr);
      ch__13386 = G__13387;
      continue
    }else {
      return ch__13386
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__13394 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__13395 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__13395)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__13395) {
      return cljs.core.persistent_BANG_.call(null, a__13394)
    }else {
      var temp__4090__auto____13396 = cljs.reader.macros.call(null, ch__13395);
      if(cljs.core.truth_(temp__4090__auto____13396)) {
        var macrofn__13397 = temp__4090__auto____13396;
        var mret__13398 = macrofn__13397.call(null, rdr, ch__13395);
        var G__13400 = mret__13398 === rdr ? a__13394 : cljs.core.conj_BANG_.call(null, a__13394, mret__13398);
        a__13394 = G__13400;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__13395);
        var o__13399 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__13401 = o__13399 === rdr ? a__13394 : cljs.core.conj_BANG_.call(null, a__13394, o__13399);
        a__13394 = G__13401;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__13406 = cljs.reader.read_char.call(null, rdr);
  var dm__13407 = cljs.reader.dispatch_macros.call(null, ch__13406);
  if(cljs.core.truth_(dm__13407)) {
    return dm__13407.call(null, rdr, _)
  }else {
    var temp__4090__auto____13408 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__13406);
    if(cljs.core.truth_(temp__4090__auto____13408)) {
      var obj__13409 = temp__4090__auto____13408;
      return obj__13409
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__13406)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__13411 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__13411))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__13411)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__13418 = new goog.string.StringBuffer(initch);
  var ch__13419 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3943__auto____13420 = ch__13419 == null;
      if(or__3943__auto____13420) {
        return or__3943__auto____13420
      }else {
        var or__3943__auto____13421 = cljs.reader.whitespace_QMARK_.call(null, ch__13419);
        if(or__3943__auto____13421) {
          return or__3943__auto____13421
        }else {
          return cljs.reader.macros.call(null, ch__13419)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__13419);
      var s__13422 = buffer__13418.toString();
      var or__3943__auto____13423 = cljs.reader.match_number.call(null, s__13422);
      if(cljs.core.truth_(or__3943__auto____13423)) {
        return or__3943__auto____13423
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__13422, "]")
      }
    }else {
      var G__13424 = function() {
        buffer__13418.append(ch__13419);
        return buffer__13418
      }();
      var G__13425 = cljs.reader.read_char.call(null, reader);
      buffer__13418 = G__13424;
      ch__13419 = G__13425;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__13428 = new goog.string.StringBuffer;
  var ch__13429 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__13429 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__13429) {
        var G__13430 = function() {
          buffer__13428.append(cljs.reader.escape_char.call(null, buffer__13428, reader));
          return buffer__13428
        }();
        var G__13431 = cljs.reader.read_char.call(null, reader);
        buffer__13428 = G__13430;
        ch__13429 = G__13431;
        continue
      }else {
        if('"' === ch__13429) {
          return buffer__13428.toString()
        }else {
          if("\ufdd0'default") {
            var G__13432 = function() {
              buffer__13428.append(ch__13429);
              return buffer__13428
            }();
            var G__13433 = cljs.reader.read_char.call(null, reader);
            buffer__13428 = G__13432;
            ch__13429 = G__13433;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__13435 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__13435, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__13435, 0, token__13435.indexOf("/")), cljs.core.subs.call(null, token__13435, token__13435.indexOf("/") + 1, token__13435.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__13435, cljs.core.symbol.call(null, token__13435))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__13445 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__13446 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__13445);
  var token__13447 = a__13446[0];
  var ns__13448 = a__13446[1];
  var name__13449 = a__13446[2];
  if(cljs.core.truth_(function() {
    var or__3943__auto____13451 = function() {
      var and__3941__auto____13450 = !(void 0 === ns__13448);
      if(and__3941__auto____13450) {
        return ns__13448.substring(ns__13448.length - 2, ns__13448.length) === ":/"
      }else {
        return and__3941__auto____13450
      }
    }();
    if(cljs.core.truth_(or__3943__auto____13451)) {
      return or__3943__auto____13451
    }else {
      var or__3943__auto____13452 = name__13449[name__13449.length - 1] === ":";
      if(or__3943__auto____13452) {
        return or__3943__auto____13452
      }else {
        return!(token__13447.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__13447)
  }else {
    if(function() {
      var and__3941__auto____13453 = !(ns__13448 == null);
      if(and__3941__auto____13453) {
        return ns__13448.length > 0
      }else {
        return and__3941__auto____13453
      }
    }()) {
      return cljs.core.keyword.call(null, ns__13448.substring(0, ns__13448.indexOf("/")), name__13449)
    }else {
      return cljs.core.keyword.call(null, token__13447)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__13459 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__13459)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__13460 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__13461__13462 = o__13460;
    if(G__13461__13462) {
      if(function() {
        var or__3943__auto____13463 = G__13461__13462.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3943__auto____13463) {
          return or__3943__auto____13463
        }else {
          return G__13461__13462.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__13461__13462.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__13461__13462)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__13461__13462)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__13460, cljs.core.merge.call(null, cljs.core.meta.call(null, o__13460), m__13459))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__13467 = cljs.reader.read_char.call(null, reader);
    if(ch__13467 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__13467)) {
        var G__13470 = reader;
        var G__13471 = eof_is_error;
        var G__13472 = sentinel;
        var G__13473 = is_recursive;
        reader = G__13470;
        eof_is_error = G__13471;
        sentinel = G__13472;
        is_recursive = G__13473;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__13467)) {
          var G__13474 = cljs.reader.read_comment.call(null, reader, ch__13467);
          var G__13475 = eof_is_error;
          var G__13476 = sentinel;
          var G__13477 = is_recursive;
          reader = G__13474;
          eof_is_error = G__13475;
          sentinel = G__13476;
          is_recursive = G__13477;
          continue
        }else {
          if("\ufdd0'else") {
            var f__13468 = cljs.reader.macros.call(null, ch__13467);
            var res__13469 = cljs.core.truth_(f__13468) ? f__13468.call(null, reader, ch__13467) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__13467) ? cljs.reader.read_number.call(null, reader, ch__13467) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__13467) : null;
            if(res__13469 === reader) {
              var G__13478 = reader;
              var G__13479 = eof_is_error;
              var G__13480 = sentinel;
              var G__13481 = is_recursive;
              reader = G__13478;
              eof_is_error = G__13479;
              sentinel = G__13480;
              is_recursive = G__13481;
              continue
            }else {
              return res__13469
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__13483 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__13483, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__13485 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__13485.getLength() < width) {
            var G__13486 = b__13485.append("0");
            b__13485 = G__13486;
            continue
          }else {
            return b__13485.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3941__auto____13489 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3941__auto____13489)) {
    var or__3943__auto____13490 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3943__auto____13490)) {
      return or__3943__auto____13490
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3941__auto____13489
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__13495 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__13496 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__13496 : dim_norm__13495, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__13497 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__13499 = function(low, n, high, msg) {
    if(function() {
      var and__3941__auto____13498 = low <= n;
      if(and__3941__auto____13498) {
        return n <= high
      }else {
        return and__3941__auto____13498
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474, "\ufdd0'column", 25))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__4092__auto____13500 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__13497, ts)));
    if(cljs.core.truth_(temp__4092__auto____13500)) {
      var vec__13501__13504 = temp__4092__auto____13500;
      var vec__13502__13505 = cljs.core.nth.call(null, vec__13501__13504, 0, null);
      var ___13506 = cljs.core.nth.call(null, vec__13502__13505, 0, null);
      var years__13507 = cljs.core.nth.call(null, vec__13502__13505, 1, null);
      var months__13508 = cljs.core.nth.call(null, vec__13502__13505, 2, null);
      var days__13509 = cljs.core.nth.call(null, vec__13502__13505, 3, null);
      var hours__13510 = cljs.core.nth.call(null, vec__13502__13505, 4, null);
      var minutes__13511 = cljs.core.nth.call(null, vec__13502__13505, 5, null);
      var seconds__13512 = cljs.core.nth.call(null, vec__13502__13505, 6, null);
      var milliseconds__13513 = cljs.core.nth.call(null, vec__13502__13505, 7, null);
      var vec__13503__13514 = cljs.core.nth.call(null, vec__13501__13504, 1, null);
      var ___13515 = cljs.core.nth.call(null, vec__13503__13514, 0, null);
      var ___13516 = cljs.core.nth.call(null, vec__13503__13514, 1, null);
      var ___13517 = cljs.core.nth.call(null, vec__13503__13514, 2, null);
      var V__13518 = vec__13501__13504;
      var vec__13519__13522 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__13494_SHARP_) {
          return parseInt(p1__13494_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__13492_SHARP_, p2__13491_SHARP_) {
        return cljs.core.update_in.call(null, p2__13491_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__13492_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__13493_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__13493_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__13518));
      var vec__13520__13523 = cljs.core.nth.call(null, vec__13519__13522, 0, null);
      var ___13524 = cljs.core.nth.call(null, vec__13520__13523, 0, null);
      var y__13525 = cljs.core.nth.call(null, vec__13520__13523, 1, null);
      var mo__13526 = cljs.core.nth.call(null, vec__13520__13523, 2, null);
      var d__13527 = cljs.core.nth.call(null, vec__13520__13523, 3, null);
      var h__13528 = cljs.core.nth.call(null, vec__13520__13523, 4, null);
      var m__13529 = cljs.core.nth.call(null, vec__13520__13523, 5, null);
      var s__13530 = cljs.core.nth.call(null, vec__13520__13523, 6, null);
      var ms__13531 = cljs.core.nth.call(null, vec__13520__13523, 7, null);
      var vec__13521__13532 = cljs.core.nth.call(null, vec__13519__13522, 1, null);
      var offset_sign__13533 = cljs.core.nth.call(null, vec__13521__13532, 0, null);
      var offset_hours__13534 = cljs.core.nth.call(null, vec__13521__13532, 1, null);
      var offset_minutes__13535 = cljs.core.nth.call(null, vec__13521__13532, 2, null);
      var offset__13536 = offset_sign__13533 * (offset_hours__13534 * 60 + offset_minutes__13535);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__13507) ? 1970 : y__13525, cljs.core.not.call(null, months__13508) ? 1 : check__13499.call(null, 1, mo__13526, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__13509) ? 1 : check__13499.call(null, 1, d__13527, cljs.reader.days_in_month.call(null, mo__13526, cljs.reader.leap_year_QMARK_.call(null, y__13525)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__13510) ? 0 : check__13499.call(null, 0, h__13528, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__13511) ? 0 : check__13499.call(null, 0, m__13529, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__13512) ? 0 : check__13499.call(null, 0, s__13530, cljs.core._EQ_.call(null, m__13529, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__13513) ? 0 : check__13499.call(null, 
      0, ms__13531, 999, "timestamp millisecond field must be in range 0..999"), offset__13536], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto____13548 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__4090__auto____13548)) {
    var vec__13549__13550 = temp__4090__auto____13548;
    var years__13551 = cljs.core.nth.call(null, vec__13549__13550, 0, null);
    var months__13552 = cljs.core.nth.call(null, vec__13549__13550, 1, null);
    var days__13553 = cljs.core.nth.call(null, vec__13549__13550, 2, null);
    var hours__13554 = cljs.core.nth.call(null, vec__13549__13550, 3, null);
    var minutes__13555 = cljs.core.nth.call(null, vec__13549__13550, 4, null);
    var seconds__13556 = cljs.core.nth.call(null, vec__13549__13550, 5, null);
    var ms__13557 = cljs.core.nth.call(null, vec__13549__13550, 6, null);
    var offset__13558 = cljs.core.nth.call(null, vec__13549__13550, 7, null);
    return new Date(Date.UTC(years__13551, months__13552 - 1, days__13553, hours__13554, minutes__13555, seconds__13556, ms__13557) - offset__13558 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__13562 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__4090__auto____13563 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__13562), null);
  if(cljs.core.truth_(temp__4090__auto____13563)) {
    var pfn__13564 = temp__4090__auto____13563;
    return pfn__13564.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__13562), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__13567 = cljs.core.name.call(null, tag);
  var old_parser__13568 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__13567, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__13567, f);
  return old_parser__13568
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__13571 = cljs.core.name.call(null, tag);
  var old_parser__13572 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__13571, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__13571);
  return old_parser__13572
};
goog.provide("hlisp.util");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("clojure.string");
goog.require("cljs.reader");
hlisp.util.pluralize = function pluralize(word, count) {
  return[cljs.core.str(word), cljs.core.str(cljs.core.not_EQ_.call(null, 1, count) ? "s" : null)].join("")
};
hlisp.util.capitalize = function capitalize(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return clojure.string.capitalize.call(null, s)
  }else {
    return null
  }
};
hlisp.util.str_partition = function str_partition(re, s) {
  return cljs.core.mapv.call(null, cljs.core.partial.call(null, cljs.core.apply, cljs.core.str), cljs.core.partition_by.call(null, function(p1__13282_SHARP_) {
    if(cljs.core.truth_(cljs.core.re_matches.call(null, re, p1__13282_SHARP_))) {
      return true
    }else {
      return null
    }
  }, s))
};
hlisp.util.capitalize_name = function capitalize_name(s) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, hlisp.util.capitalize, hlisp.util.str_partition.call(null, /[a-zA-Z]/, s)))
};
hlisp.util.format_date = function format_date(date_str) {
  var vec__13290__13291 = cljs.core.mapv.call(null, Number, clojure.string.split.call(null, date_str, /-/));
  var y__13292 = cljs.core.nth.call(null, vec__13290__13291, 0, null);
  var m__13293 = cljs.core.nth.call(null, vec__13290__13291, 1, null);
  var d__13294 = cljs.core.nth.call(null, vec__13290__13291, 2, null);
  var months__13295 = cljs.core.PersistentVector.fromArray(["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], true);
  var i__13296 = m__13293 - 1;
  if(i__13296 < 0) {
    return"<< Sorry, there was an error computing the date. >>"
  }else {
    return[cljs.core.str(cljs.core.nth.call(null, months__13295, m__13293 - 1)), cljs.core.str(" "), cljs.core.str(d__13294), cljs.core.str(", "), cljs.core.str(y__13292)].join("")
  }
};
hlisp.util.localStorage_set_BANG_ = function localStorage_set_BANG_(k, v) {
  return localStorage.setItem(k, cljs.core.pr_str.call(null, v))
};
hlisp.util.localStorage_get = function localStorage_get(k) {
  var v_str__13298 = localStorage.getItem(k);
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, v_str__13298))) {
    return null
  }else {
    return cljs.reader.read_string.call(null, v_str__13298)
  }
};
goog.provide("tailrecursion.javelin.specials");
goog.require("cljs.core");
tailrecursion.javelin.specials.no_supported = function no_supported(spec_form) {
  return function() {
    throw new Error([cljs.core.str(spec_form), cljs.core.str(" is not supported in cell formulas")].join(""));
  }
};
tailrecursion.javelin.specials.if_STAR_ = function() {
  var if_STAR_ = null;
  var if_STAR___2 = function(pred, consequent) {
    if(cljs.core.truth_(pred)) {
      return consequent
    }else {
      return null
    }
  };
  var if_STAR___3 = function(pred, consequent, alternative) {
    if(cljs.core.truth_(pred)) {
      return consequent
    }else {
      return alternative
    }
  };
  if_STAR_ = function(pred, consequent, alternative) {
    switch(arguments.length) {
      case 2:
        return if_STAR___2.call(this, pred, consequent);
      case 3:
        return if_STAR___3.call(this, pred, consequent, alternative)
    }
    throw"Invalid arity: " + arguments.length;
  };
  if_STAR_.cljs$lang$arity$2 = if_STAR___2;
  if_STAR_.cljs$lang$arity$3 = if_STAR___3;
  return if_STAR_
}();
tailrecursion.javelin.specials.def_STAR_ = tailrecursion.javelin.specials.no_supported.call(null, "def");
tailrecursion.javelin.specials.do_STAR_ = function() {
  var do_STAR___delegate = function(rest__9255_SHARP_) {
    return cljs.core.last.call(null, rest__9255_SHARP_)
  };
  var do_STAR_ = function(var_args) {
    var rest__9255_SHARP_ = null;
    if(goog.isDef(var_args)) {
      rest__9255_SHARP_ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return do_STAR___delegate.call(this, rest__9255_SHARP_)
  };
  do_STAR_.cljs$lang$maxFixedArity = 0;
  do_STAR_.cljs$lang$applyTo = function(arglist__9256) {
    var rest__9255_SHARP_ = cljs.core.seq(arglist__9256);
    return do_STAR___delegate(rest__9255_SHARP_)
  };
  do_STAR_.cljs$lang$arity$variadic = do_STAR___delegate;
  return do_STAR_
}();
tailrecursion.javelin.specials.loop_STAR__STAR_ = tailrecursion.javelin.specials.no_supported.call(null, "loop*");
tailrecursion.javelin.specials.letfn_STAR__STAR_ = tailrecursion.javelin.specials.no_supported.call(null, "letfn*");
tailrecursion.javelin.specials.throw_STAR_ = function throw_STAR_(p1__9257_SHARP_) {
  if(cljs.core.string_QMARK_.call(null, p1__9257_SHARP_)) {
    return new Error(p1__9257_SHARP_)
  }else {
    return p1__9257_SHARP_
  }
};
tailrecursion.javelin.specials.try_STAR__STAR_ = tailrecursion.javelin.specials.no_supported.call(null, "try*");
tailrecursion.javelin.specials.recur_STAR_ = tailrecursion.javelin.specials.no_supported.call(null, "recur");
tailrecursion.javelin.specials.set_BANG__STAR_ = tailrecursion.javelin.specials.no_supported.call(null, "set!");
tailrecursion.javelin.specials.ns_STAR_ = tailrecursion.javelin.specials.no_supported.call(null, "ns");
tailrecursion.javelin.specials.deftype_STAR__STAR_ = tailrecursion.javelin.specials.no_supported.call(null, "deftype*");
tailrecursion.javelin.specials.defrecord_STAR__STAR_ = tailrecursion.javelin.specials.no_supported.call(null, "defrecord*");
tailrecursion.javelin.specials._AMPERSAND__STAR_ = tailrecursion.javelin.specials.no_supported.call(null, "&");
tailrecursion.javelin.specials.new_STAR_ = function() {
  var new_STAR_ = null;
  var new_STAR___1 = function(class$) {
    return new class$
  };
  var new_STAR___2 = function(class$, a) {
    return new class$(a)
  };
  var new_STAR___3 = function(class$, a, b) {
    return new class$(a, b)
  };
  var new_STAR___4 = function(class$, a, b, c) {
    return new class$(a, b, c)
  };
  var new_STAR___5 = function(class$, a, b, c, d) {
    return new class$(a, b, c, d)
  };
  var new_STAR___6 = function(class$, a, b, c, d, e) {
    return new class$(a, b, c, d, e)
  };
  var new_STAR___7 = function(class$, a, b, c, d, e, f) {
    return new class$(a, b, c, d, e, f)
  };
  var new_STAR___8 = function(class$, a, b, c, d, e, f, g) {
    return new class$(a, b, c, d, e, f, g)
  };
  var new_STAR___9 = function(class$, a, b, c, d, e, f, g, h) {
    return new class$(a, b, c, d, e, f, g, h)
  };
  var new_STAR___10 = function(class$, a, b, c, d, e, f, g, h, i) {
    return new class$(a, b, c, d, e, f, g, h, i)
  };
  var new_STAR___11 = function() {
    var G__9258__delegate = function(class$, a, b, c, d, e, f, g, h, i, more) {
      return tailrecursion.javelin.specials.no_supported.call(null, "new w/more than 10 args")
    };
    var G__9258 = function(class$, a, b, c, d, e, f, g, h, i, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 10), 0)
      }
      return G__9258__delegate.call(this, class$, a, b, c, d, e, f, g, h, i, more)
    };
    G__9258.cljs$lang$maxFixedArity = 10;
    G__9258.cljs$lang$applyTo = function(arglist__9259) {
      var class$ = cljs.core.first(arglist__9259);
      var a = cljs.core.first(cljs.core.next(arglist__9259));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9259)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9259))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9259)))));
      var e = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9259))))));
      var f = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9259)))))));
      var g = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9259))))))));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9259)))))))));
      var i = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9259))))))))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9259))))))))));
      return G__9258__delegate(class$, a, b, c, d, e, f, g, h, i, more)
    };
    G__9258.cljs$lang$arity$variadic = G__9258__delegate;
    return G__9258
  }();
  new_STAR_ = function(class$, a, b, c, d, e, f, g, h, i, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return new_STAR___1.call(this, class$);
      case 2:
        return new_STAR___2.call(this, class$, a);
      case 3:
        return new_STAR___3.call(this, class$, a, b);
      case 4:
        return new_STAR___4.call(this, class$, a, b, c);
      case 5:
        return new_STAR___5.call(this, class$, a, b, c, d);
      case 6:
        return new_STAR___6.call(this, class$, a, b, c, d, e);
      case 7:
        return new_STAR___7.call(this, class$, a, b, c, d, e, f);
      case 8:
        return new_STAR___8.call(this, class$, a, b, c, d, e, f, g);
      case 9:
        return new_STAR___9.call(this, class$, a, b, c, d, e, f, g, h);
      case 10:
        return new_STAR___10.call(this, class$, a, b, c, d, e, f, g, h, i);
      default:
        return new_STAR___11.cljs$lang$arity$variadic(class$, a, b, c, d, e, f, g, h, i, cljs.core.array_seq(arguments, 10))
    }
    throw"Invalid arity: " + arguments.length;
  };
  new_STAR_.cljs$lang$maxFixedArity = 10;
  new_STAR_.cljs$lang$applyTo = new_STAR___11.cljs$lang$applyTo;
  new_STAR_.cljs$lang$arity$1 = new_STAR___1;
  new_STAR_.cljs$lang$arity$2 = new_STAR___2;
  new_STAR_.cljs$lang$arity$3 = new_STAR___3;
  new_STAR_.cljs$lang$arity$4 = new_STAR___4;
  new_STAR_.cljs$lang$arity$5 = new_STAR___5;
  new_STAR_.cljs$lang$arity$6 = new_STAR___6;
  new_STAR_.cljs$lang$arity$7 = new_STAR___7;
  new_STAR_.cljs$lang$arity$8 = new_STAR___8;
  new_STAR_.cljs$lang$arity$9 = new_STAR___9;
  new_STAR_.cljs$lang$arity$10 = new_STAR___10;
  new_STAR_.cljs$lang$arity$variadic = new_STAR___11.cljs$lang$arity$variadic;
  return new_STAR_
}();
goog.provide("tailrecursion.priority_map");
goog.require("cljs.core");
goog.require("cljs.core");
tailrecursion.priority_map.PersistentPriorityMap = function(priority__GT_set_of_items, item__GT_priority, meta, __hash) {
  this.priority__GT_set_of_items = priority__GT_set_of_items;
  this.item__GT_priority = item__GT_priority;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417736463
};
tailrecursion.priority_map.PersistentPriorityMap.cljs$lang$type = true;
tailrecursion.priority_map.PersistentPriorityMap.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "tailrecursion.priority-map/PersistentPriorityMap")
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__9067 = this;
  var h__3598__auto____9068 = this__9067.__hash;
  if(!(h__3598__auto____9068 == null)) {
    return h__3598__auto____9068
  }else {
    var h__3598__auto____9069 = cljs.core.hash_imap.call(null, this$);
    this__9067.__hash = h__3598__auto____9069;
    return h__3598__auto____9069
  }
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, item) {
  var this__9070 = this;
  return cljs.core._lookup.call(null, this__9070.item__GT_priority, item, null)
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, item, not_found) {
  var this__9071 = this;
  return cljs.core._lookup.call(null, this__9071.item__GT_priority, item, not_found)
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, item, priority) {
  var this__9072 = this;
  var temp__4090__auto____9073 = cljs.core._lookup.call(null, this__9072.item__GT_priority, item, null);
  if(cljs.core.truth_(temp__4090__auto____9073)) {
    var current_priority__9074 = temp__4090__auto____9073;
    if(cljs.core._EQ_.call(null, current_priority__9074, priority)) {
      return this$
    }else {
      var item_set__9075 = cljs.core._lookup.call(null, this__9072.priority__GT_set_of_items, current_priority__9074, null);
      if(cljs.core._EQ_.call(null, cljs.core.count.call(null, item_set__9075), 1)) {
        return new tailrecursion.priority_map.PersistentPriorityMap(cljs.core.assoc.call(null, cljs.core.dissoc.call(null, this__9072.priority__GT_set_of_items, current_priority__9074), priority, cljs.core.conj.call(null, cljs.core._lookup.call(null, this__9072.priority__GT_set_of_items, priority, cljs.core.PersistentHashSet.EMPTY), item)), cljs.core.assoc.call(null, this__9072.item__GT_priority, item, priority), this__9072.meta, null)
      }else {
        return new tailrecursion.priority_map.PersistentPriorityMap(cljs.core.assoc.call(null, this__9072.priority__GT_set_of_items, current_priority__9074, cljs.core.disj.call(null, cljs.core._lookup.call(null, this__9072.priority__GT_set_of_items, current_priority__9074, null), item), priority, cljs.core.conj.call(null, cljs.core._lookup.call(null, this__9072.priority__GT_set_of_items, priority, cljs.core.PersistentHashSet.EMPTY), item)), cljs.core.assoc.call(null, this__9072.item__GT_priority, 
        item, priority), this__9072.meta, null)
      }
    }
  }else {
    return new tailrecursion.priority_map.PersistentPriorityMap(cljs.core.assoc.call(null, this__9072.priority__GT_set_of_items, priority, cljs.core.conj.call(null, cljs.core._lookup.call(null, this__9072.priority__GT_set_of_items, priority, cljs.core.PersistentHashSet.EMPTY), item)), cljs.core.assoc.call(null, this__9072.item__GT_priority, item, priority), this__9072.meta, null)
  }
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(this$, item) {
  var this__9076 = this;
  return cljs.core.contains_QMARK_.call(null, this__9076.item__GT_priority, item)
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.call = function() {
  var G__9227 = null;
  var G__9227__2 = function(this_sym9077, item) {
    var this__9079 = this;
    var this_sym9077__9080 = this;
    var this__9081 = this_sym9077__9080;
    return this__9081.cljs$core$ILookup$_lookup$arity$2(this__9081, item)
  };
  var G__9227__3 = function(this_sym9078, item, not_found) {
    var this__9079 = this;
    var this_sym9078__9082 = this;
    var this__9083 = this_sym9078__9082;
    return this__9083.cljs$core$ILookup$_lookup$arity$3(this__9083, item, not_found)
  };
  G__9227 = function(this_sym9078, item, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9227__2.call(this, this_sym9078, item);
      case 3:
        return G__9227__3.call(this, this_sym9078, item, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9227
}();
tailrecursion.priority_map.PersistentPriorityMap.prototype.apply = function(this_sym9065, args9066) {
  var this__9084 = this;
  return this_sym9065.call.apply(this_sym9065, [this_sym9065].concat(args9066.slice()))
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, entry) {
  var this__9085 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return this$.cljs$core$IAssociative$_assoc$arity$3(this$, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this$, entry)
  }
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9086 = this;
  return cljs.core.seq.call(null, function() {
    var iter__3868__auto____9125 = function iter__9087(s__9088) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__9088__9108 = s__9088;
        while(true) {
          var temp__4092__auto____9109 = cljs.core.seq.call(null, s__9088__9108);
          if(temp__4092__auto____9109) {
            var xs__4579__auto____9110 = temp__4092__auto____9109;
            var vec__9111__9112 = cljs.core.first.call(null, xs__4579__auto____9110);
            var priority__9113 = cljs.core.nth.call(null, vec__9111__9112, 0, null);
            var item_set__9114 = cljs.core.nth.call(null, vec__9111__9112, 1, null);
            var iterys__3866__auto____9123 = function(s__9088__9108, vec__9111__9112, priority__9113, item_set__9114, xs__4579__auto____9110, temp__4092__auto____9109) {
              return function iter__9089(s__9090) {
                return new cljs.core.LazySeq(null, false, function(s__9088__9108, vec__9111__9112, priority__9113, item_set__9114, xs__4579__auto____9110, temp__4092__auto____9109) {
                  return function() {
                    var s__9090__9119 = s__9090;
                    while(true) {
                      var temp__4092__auto____9120 = cljs.core.seq.call(null, s__9090__9119);
                      if(temp__4092__auto____9120) {
                        var xs__4579__auto____9121 = temp__4092__auto____9120;
                        var item__9122 = cljs.core.first.call(null, xs__4579__auto____9121);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([item__9122, priority__9113], true), iter__9089.call(null, cljs.core.rest.call(null, s__9090__9119)))
                      }else {
                        return null
                      }
                      break
                    }
                  }
                }(s__9088__9108, vec__9111__9112, priority__9113, item_set__9114, xs__4579__auto____9110, temp__4092__auto____9109), null)
              }
            }(s__9088__9108, vec__9111__9112, priority__9113, item_set__9114, xs__4579__auto____9110, temp__4092__auto____9109);
            var fs__3867__auto____9124 = cljs.core.seq.call(null, iterys__3866__auto____9123.call(null, item_set__9114));
            if(fs__3867__auto____9124) {
              return cljs.core.concat.call(null, fs__3867__auto____9124, iter__9087.call(null, cljs.core.rest.call(null, s__9088__9108)))
            }else {
              var G__9228 = cljs.core.rest.call(null, s__9088__9108);
              s__9088__9108 = G__9228;
              continue
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3868__auto____9125.call(null, cljs.core.rseq.call(null, this__9086.priority__GT_set_of_items))
  }())
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.toString = function() {
  var this__9126 = this;
  var this__9127 = this;
  return[cljs.core.str(cljs.core.seq.call(null, this__9127))].join("")
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(this$, ascending_QMARK_) {
  var this__9128 = this;
  return(cljs.core.truth_(ascending_QMARK_) ? cljs.core.seq : cljs.core.rseq).call(null, this$)
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(this$, k, ascending_QMARK_) {
  var this__9129 = this;
  var sets__9130 = cljs.core.truth_(ascending_QMARK_) ? cljs.core.subseq.call(null, this__9129.priority__GT_set_of_items, cljs.core._GT__EQ_, k) : cljs.core.rsubseq.call(null, this__9129.priority__GT_set_of_items, cljs.core._LT__EQ_, k);
  return cljs.core.seq.call(null, function() {
    var iter__3868__auto____9169 = function iter__9131(s__9132) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__9132__9152 = s__9132;
        while(true) {
          var temp__4092__auto____9153 = cljs.core.seq.call(null, s__9132__9152);
          if(temp__4092__auto____9153) {
            var xs__4579__auto____9154 = temp__4092__auto____9153;
            var vec__9155__9156 = cljs.core.first.call(null, xs__4579__auto____9154);
            var priority__9157 = cljs.core.nth.call(null, vec__9155__9156, 0, null);
            var item_set__9158 = cljs.core.nth.call(null, vec__9155__9156, 1, null);
            var iterys__3866__auto____9167 = function(s__9132__9152, vec__9155__9156, priority__9157, item_set__9158, xs__4579__auto____9154, temp__4092__auto____9153) {
              return function iter__9133(s__9134) {
                return new cljs.core.LazySeq(null, false, function(s__9132__9152, vec__9155__9156, priority__9157, item_set__9158, xs__4579__auto____9154, temp__4092__auto____9153) {
                  return function() {
                    var s__9134__9163 = s__9134;
                    while(true) {
                      var temp__4092__auto____9164 = cljs.core.seq.call(null, s__9134__9163);
                      if(temp__4092__auto____9164) {
                        var xs__4579__auto____9165 = temp__4092__auto____9164;
                        var item__9166 = cljs.core.first.call(null, xs__4579__auto____9165);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([item__9166, priority__9157], true), iter__9133.call(null, cljs.core.rest.call(null, s__9134__9163)))
                      }else {
                        return null
                      }
                      break
                    }
                  }
                }(s__9132__9152, vec__9155__9156, priority__9157, item_set__9158, xs__4579__auto____9154, temp__4092__auto____9153), null)
              }
            }(s__9132__9152, vec__9155__9156, priority__9157, item_set__9158, xs__4579__auto____9154, temp__4092__auto____9153);
            var fs__3867__auto____9168 = cljs.core.seq.call(null, iterys__3866__auto____9167.call(null, item_set__9158));
            if(fs__3867__auto____9168) {
              return cljs.core.concat.call(null, fs__3867__auto____9168, iter__9131.call(null, cljs.core.rest.call(null, s__9132__9152)))
            }else {
              var G__9229 = cljs.core.rest.call(null, s__9132__9152);
              s__9132__9152 = G__9229;
              continue
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3868__auto____9169.call(null, sets__9130)
  }())
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(this$, entry) {
  var this__9170 = this;
  return cljs.core.val.call(null, entry)
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(this$) {
  var this__9171 = this;
  return cljs.core.compare
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9172 = this;
  return cljs.core.seq.call(null, function() {
    var iter__3868__auto____9211 = function iter__9173(s__9174) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__9174__9194 = s__9174;
        while(true) {
          var temp__4092__auto____9195 = cljs.core.seq.call(null, s__9174__9194);
          if(temp__4092__auto____9195) {
            var xs__4579__auto____9196 = temp__4092__auto____9195;
            var vec__9197__9198 = cljs.core.first.call(null, xs__4579__auto____9196);
            var priority__9199 = cljs.core.nth.call(null, vec__9197__9198, 0, null);
            var item_set__9200 = cljs.core.nth.call(null, vec__9197__9198, 1, null);
            var iterys__3866__auto____9209 = function(s__9174__9194, vec__9197__9198, priority__9199, item_set__9200, xs__4579__auto____9196, temp__4092__auto____9195) {
              return function iter__9175(s__9176) {
                return new cljs.core.LazySeq(null, false, function(s__9174__9194, vec__9197__9198, priority__9199, item_set__9200, xs__4579__auto____9196, temp__4092__auto____9195) {
                  return function() {
                    var s__9176__9205 = s__9176;
                    while(true) {
                      var temp__4092__auto____9206 = cljs.core.seq.call(null, s__9176__9205);
                      if(temp__4092__auto____9206) {
                        var xs__4579__auto____9207 = temp__4092__auto____9206;
                        var item__9208 = cljs.core.first.call(null, xs__4579__auto____9207);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([item__9208, priority__9199], true), iter__9175.call(null, cljs.core.rest.call(null, s__9176__9205)))
                      }else {
                        return null
                      }
                      break
                    }
                  }
                }(s__9174__9194, vec__9197__9198, priority__9199, item_set__9200, xs__4579__auto____9196, temp__4092__auto____9195), null)
              }
            }(s__9174__9194, vec__9197__9198, priority__9199, item_set__9200, xs__4579__auto____9196, temp__4092__auto____9195);
            var fs__3867__auto____9210 = cljs.core.seq.call(null, iterys__3866__auto____9209.call(null, item_set__9200));
            if(fs__3867__auto____9210) {
              return cljs.core.concat.call(null, fs__3867__auto____9210, iter__9173.call(null, cljs.core.rest.call(null, s__9174__9194)))
            }else {
              var G__9230 = cljs.core.rest.call(null, s__9174__9194);
              s__9174__9194 = G__9230;
              continue
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3868__auto____9211.call(null, this__9172.priority__GT_set_of_items)
  }())
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var this__9212 = this;
  return cljs.core.count.call(null, this__9212.item__GT_priority)
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var this__9213 = this;
  if(cljs.core.empty_QMARK_.call(null, this$)) {
    return null
  }else {
    var f__9214 = cljs.core.first.call(null, this__9213.priority__GT_set_of_items);
    return cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, cljs.core.val.call(null, f__9214)), cljs.core.key.call(null, f__9214)], true)
  }
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var this__9215 = this;
  if(cljs.core.empty_QMARK_.call(null, this$)) {
    throw new Error("Can't pop empty priority map");
  }else {
    var f__9216 = cljs.core.first.call(null, this__9215.priority__GT_set_of_items);
    var item_set__9217 = cljs.core.val.call(null, f__9216);
    var item__9218 = cljs.core.first.call(null, item_set__9217);
    var priority__9219 = cljs.core.key.call(null, f__9216);
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, item_set__9217), 1)) {
      return new tailrecursion.priority_map.PersistentPriorityMap(cljs.core.dissoc.call(null, this__9215.priority__GT_set_of_items, priority__9219), cljs.core.dissoc.call(null, this__9215.item__GT_priority, item__9218), this__9215.meta, null)
    }else {
      return new tailrecursion.priority_map.PersistentPriorityMap(cljs.core.assoc.call(null, this__9215.priority__GT_set_of_items, priority__9219, cljs.core.disj.call(null, item_set__9217, item__9218)), cljs.core.dissoc.call(null, this__9215.item__GT_priority, item__9218), this__9215.meta, null)
    }
  }
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this__9220 = this;
  return cljs.core._equiv.call(null, this__9220.item__GT_priority, other)
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, meta) {
  var this__9221 = this;
  return new tailrecursion.priority_map.PersistentPriorityMap(this__9221.priority__GT_set_of_items, this__9221.item__GT_priority, meta, this__9221.__hash)
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var this__9222 = this;
  return this__9222.meta
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var this__9223 = this;
  return cljs.core.with_meta.call(null, tailrecursion.priority_map.PersistentPriorityMap.EMPTY, this__9223.meta)
};
tailrecursion.priority_map.PersistentPriorityMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this$, item) {
  var this__9224 = this;
  var priority__9225 = this__9224.item__GT_priority.call(null, item, "\ufdd0'tailrecursion.priority-map/not-found");
  if(cljs.core._EQ_.call(null, priority__9225, "\ufdd0'tailrecursion.priority-map/not-found")) {
    return this$
  }else {
    var item_set__9226 = this__9224.priority__GT_set_of_items.call(null, priority__9225);
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, item_set__9226), 1)) {
      return new tailrecursion.priority_map.PersistentPriorityMap(cljs.core.dissoc.call(null, this__9224.priority__GT_set_of_items, priority__9225), cljs.core.dissoc.call(null, this__9224.item__GT_priority, item), this__9224.meta, null)
    }else {
      return new tailrecursion.priority_map.PersistentPriorityMap(cljs.core.assoc.call(null, this__9224.priority__GT_set_of_items, priority__9225, cljs.core.disj.call(null, item_set__9226, item)), cljs.core.dissoc.call(null, this__9224.item__GT_priority, item), this__9224.meta, null)
    }
  }
};
tailrecursion.priority_map.PersistentPriorityMap;
tailrecursion.priority_map.PersistentPriorityMap.EMPTY = new tailrecursion.priority_map.PersistentPriorityMap(cljs.core.sorted_map.call(null), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY, null);
tailrecursion.priority_map.pm_empty_by = function pm_empty_by(comparator) {
  return new tailrecursion.priority_map.PersistentPriorityMap(cljs.core.sorted_map_by.call(null, comparator), cljs.core.ObjMap.EMPTY, cljs.core.ObjMap.EMPTY, null)
};
tailrecursion.priority_map.priority_map = function() {
  var priority_map__delegate = function(keyvals) {
    var in__9233 = cljs.core.seq.call(null, keyvals);
    var out__9234 = tailrecursion.priority_map.PersistentPriorityMap.EMPTY;
    while(true) {
      if(in__9233) {
        var G__9235 = cljs.core.nnext.call(null, in__9233);
        var G__9236 = cljs.core.assoc.call(null, out__9234, cljs.core.first.call(null, in__9233), cljs.core.second.call(null, in__9233));
        in__9233 = G__9235;
        out__9234 = G__9236;
        continue
      }else {
        return out__9234
      }
      break
    }
  };
  var priority_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return priority_map__delegate.call(this, keyvals)
  };
  priority_map.cljs$lang$maxFixedArity = 0;
  priority_map.cljs$lang$applyTo = function(arglist__9237) {
    var keyvals = cljs.core.seq(arglist__9237);
    return priority_map__delegate(keyvals)
  };
  priority_map.cljs$lang$arity$variadic = priority_map__delegate;
  return priority_map
}();
tailrecursion.priority_map.priority_map_by = function() {
  var priority_map_by__delegate = function(comparator, keyvals) {
    var in__9240 = cljs.core.seq.call(null, keyvals);
    var out__9241 = tailrecursion.priority_map.pm_empty_by.call(null, comparator);
    while(true) {
      if(in__9240) {
        var G__9242 = cljs.core.nnext.call(null, in__9240);
        var G__9243 = cljs.core.assoc.call(null, out__9241, cljs.core.first.call(null, in__9240), cljs.core.second.call(null, in__9240));
        in__9240 = G__9242;
        out__9241 = G__9243;
        continue
      }else {
        return out__9241
      }
      break
    }
  };
  var priority_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return priority_map_by__delegate.call(this, comparator, keyvals)
  };
  priority_map_by.cljs$lang$maxFixedArity = 1;
  priority_map_by.cljs$lang$applyTo = function(arglist__9244) {
    var comparator = cljs.core.first(arglist__9244);
    var keyvals = cljs.core.rest(arglist__9244);
    return priority_map_by__delegate(comparator, keyvals)
  };
  priority_map_by.cljs$lang$arity$variadic = priority_map_by__delegate;
  return priority_map_by
}();
goog.provide("alandipert.desiderata");
goog.require("cljs.core");
alandipert.desiderata.bf_seq = function bf_seq(branch_QMARK_, children, root) {
  var walk__9250 = function walk(queue) {
    var temp__4092__auto____9253 = cljs.core.peek.call(null, queue);
    if(cljs.core.truth_(temp__4092__auto____9253)) {
      var node__9254 = temp__4092__auto____9253;
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, node__9254, walk.call(null, cljs.core.into.call(null, cljs.core.pop.call(null, queue), cljs.core.truth_(branch_QMARK_.call(null, node__9254)) ? children.call(null, node__9254) : null)))
      }, null)
    }else {
      return null
    }
  };
  return walk__9250.call(null, cljs.core.conj.call(null, cljs.core.PersistentQueue.EMPTY, root))
};
goog.provide("tailrecursion.javelin.core");
goog.require("cljs.core");
goog.require("tailrecursion.priority_map");
goog.require("alandipert.desiderata");
goog.require("tailrecursion.priority_map");
var rank__8943 = cljs.core.atom.call(null, 0);
tailrecursion.javelin.core.next_rank = function next_rank() {
  return cljs.core.swap_BANG_.call(null, rank__8943, cljs.core.inc)
};
tailrecursion.javelin.core.deref_STAR_ = function deref_STAR_(x) {
  if(cljs.core.truth_(tailrecursion.javelin.core.cell_QMARK_.call(null, x))) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
tailrecursion.javelin.core.self_QMARK_ = function self_QMARK_(x) {
  var and__3941__auto____8947 = tailrecursion.javelin.core.cell_QMARK_.call(null, x);
  if(cljs.core.truth_(and__3941__auto____8947)) {
    var and__3941__auto____8948 = cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, x));
    if(and__3941__auto____8948) {
      return cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, x), "\ufdd0'tailrecursion.javelin.core/self")
    }else {
      return and__3941__auto____8948
    }
  }else {
    return and__3941__auto____8947
  }
};
tailrecursion.javelin.core.sub_self = function sub_self(this$, xs) {
  return cljs.core.map.call(null, function(p1__8944_SHARP_) {
    if(cljs.core.truth_(tailrecursion.javelin.core.self_QMARK_.call(null, p1__8944_SHARP_))) {
      if(cljs.core._EQ_.call(null, "\ufdd0'tailrecursion.javelin.core/none", cljs.core.deref.call(null, this$))) {
        return tailrecursion.javelin.core.input.call(null, (new cljs.core.Keyword("\ufdd0'tailrecursion.javelin.core/self")).call(null, cljs.core.deref.call(null, p1__8944_SHARP_)))
      }else {
        return this$
      }
    }else {
      return p1__8944_SHARP_
    }
  }, xs)
};
tailrecursion.javelin.core.sinks_seq = function sinks_seq(c) {
  return cljs.core.tree_seq.call(null, tailrecursion.javelin.core.cell_QMARK_, function(p1__8949_SHARP_) {
    return cljs.core.seq.call(null, p1__8949_SHARP_.sinks)
  }, c)
};
tailrecursion.javelin.core.propagate_BANG_ = function propagate_BANG_(cell) {
  var queue__8961 = tailrecursion.priority_map.priority_map.call(null, cell, cell.rank);
  while(true) {
    if(cljs.core.seq.call(null, queue__8961)) {
      var next__8962 = cljs.core.key.call(null, cljs.core.peek.call(null, queue__8961));
      var value__8963 = next__8962.thunk.call(null);
      var continue_QMARK___8964 = cljs.core.not_EQ_.call(null, value__8963, next__8962.prev);
      var reducer__8965 = function(queue__8961) {
        return function(p1__8950_SHARP_, p2__8951_SHARP_) {
          return cljs.core.assoc.call(null, p1__8950_SHARP_, p2__8951_SHARP_, p2__8951_SHARP_.rank)
        }
      }(queue__8961);
      var siblings__8966 = cljs.core.pop.call(null, queue__8961);
      var children__8967 = next__8962.sinks;
      if(continue_QMARK___8964) {
        next__8962.prev = value__8963
      }else {
      }
      var G__8968 = continue_QMARK___8964 ? cljs.core.reduce.call(null, reducer__8965, siblings__8966, children__8967) : siblings__8966;
      queue__8961 = G__8968;
      continue
    }else {
      return null
    }
    break
  }
};
tailrecursion.javelin.core.set_formula_BANG_ = function() {
  var set_formula_BANG___delegate = function(this$, p__8969) {
    var vec__8998__8999 = p__8969;
    var f__9000 = cljs.core.nth.call(null, vec__8998__8999, 0, null);
    var sources__9001 = cljs.core.nth.call(null, vec__8998__8999, 1, null);
    var G__9002__9003 = cljs.core.seq.call(null, cljs.core.filter.call(null, tailrecursion.javelin.core.cell_QMARK_, this$.sources));
    if(G__9002__9003) {
      var source__9004 = cljs.core.first.call(null, G__9002__9003);
      var G__9002__9005 = G__9002__9003;
      while(true) {
        source__9004.sinks = cljs.core.disj.call(null, source__9004.sinks, this$);
        var temp__4092__auto____9006 = cljs.core.next.call(null, G__9002__9005);
        if(temp__4092__auto____9006) {
          var G__9002__9007 = temp__4092__auto____9006;
          var G__9026 = cljs.core.first.call(null, G__9002__9007);
          var G__9027 = G__9002__9007;
          source__9004 = G__9026;
          G__9002__9005 = G__9027;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.sources = cljs.core.truth_(f__9000) ? cljs.core.conj.call(null, cljs.core.vec.call(null, sources__9001), f__9000) : cljs.core.vec.call(null, sources__9001);
    var G__9008__9009 = cljs.core.seq.call(null, cljs.core.filter.call(null, tailrecursion.javelin.core.cell_QMARK_, this$.sources));
    if(G__9008__9009) {
      var source__9010 = cljs.core.first.call(null, G__9008__9009);
      var G__9008__9011 = G__9008__9009;
      while(true) {
        source__9010.sinks = cljs.core.conj.call(null, source__9010.sinks, this$);
        if(source__9010.rank > this$.rank) {
          var G__9012__9013 = cljs.core.seq.call(null, alandipert.desiderata.bf_seq.call(null, cljs.core.identity, function(source__9010, G__9008__9011) {
            return function(p1__8952_SHARP_) {
              return p1__8952_SHARP_.sinks
            }
          }(source__9010, G__9008__9011), source__9010));
          if(G__9012__9013) {
            var dep__9014 = cljs.core.first.call(null, G__9012__9013);
            var G__9012__9015 = G__9012__9013;
            while(true) {
              dep__9014.rank = tailrecursion.javelin.core.next_rank.call(null);
              var temp__4092__auto____9016 = cljs.core.next.call(null, G__9012__9015);
              if(temp__4092__auto____9016) {
                var G__9012__9017 = temp__4092__auto____9016;
                var G__9028 = cljs.core.first.call(null, G__9012__9017);
                var G__9029 = G__9012__9017;
                dep__9014 = G__9028;
                G__9012__9015 = G__9029;
                continue
              }else {
              }
              break
            }
          }else {
          }
        }else {
        }
        var temp__4092__auto____9018 = cljs.core.next.call(null, G__9008__9011);
        if(temp__4092__auto____9018) {
          var G__9008__9019 = temp__4092__auto____9018;
          var G__9030 = cljs.core.first.call(null, G__9008__9019);
          var G__9031 = G__9008__9019;
          source__9010 = G__9030;
          G__9008__9011 = G__9031;
          continue
        }else {
        }
        break
      }
    }else {
    }
    var compute__9020 = function(p1__8953_SHARP_) {
      return cljs.core.apply.call(null, tailrecursion.javelin.core.deref_STAR_.call(null, cljs.core.peek.call(null, p1__8953_SHARP_)), cljs.core.map.call(null, tailrecursion.javelin.core.deref_STAR_, tailrecursion.javelin.core.sub_self.call(null, this$, cljs.core.pop.call(null, p1__8953_SHARP_))))
    };
    var thunk__9021 = function() {
      return cljs.core.reset_BANG_.call(null, this$, compute__9020.call(null, this$.sources))
    };
    if(cljs.core.truth_(f__9000)) {
      cljs.core._remove_watch.call(null, this$, "\ufdd0'tailrecursion.javelin.core/propagate")
    }else {
      cljs.core._add_watch.call(null, this$, "\ufdd0'tailrecursion.javelin.core/propagate", function(_9022, cell, _9023, _) {
        return tailrecursion.javelin.core.propagate_BANG_.call(null, cell)
      })
    }
    this$.thunk = cljs.core.truth_(f__9000) ? thunk__9021 : function() {
      return cljs.core.deref.call(null, this$)
    };
    var G__9024__9025 = this$;
    tailrecursion.javelin.core.propagate_BANG_.call(null, G__9024__9025);
    return G__9024__9025
  };
  var set_formula_BANG_ = function(this$, var_args) {
    var p__8969 = null;
    if(goog.isDef(var_args)) {
      p__8969 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return set_formula_BANG___delegate.call(this, this$, p__8969)
  };
  set_formula_BANG_.cljs$lang$maxFixedArity = 1;
  set_formula_BANG_.cljs$lang$applyTo = function(arglist__9032) {
    var this$ = cljs.core.first(arglist__9032);
    var p__8969 = cljs.core.rest(arglist__9032);
    return set_formula_BANG___delegate(this$, p__8969)
  };
  set_formula_BANG_.cljs$lang$arity$variadic = set_formula_BANG___delegate;
  return set_formula_BANG_
}();
tailrecursion.javelin.core.Cell = function(meta, state, rank, prev, sources, sinks, done, thunk, watches) {
  this.meta = meta;
  this.state = state;
  this.rank = rank;
  this.prev = prev;
  this.sources = sources;
  this.sinks = sinks;
  this.done = done;
  this.thunk = thunk;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2147647488
};
tailrecursion.javelin.core.Cell.cljs$lang$type = true;
tailrecursion.javelin.core.Cell.cljs$lang$ctorPrSeq = function(this__3715__auto__) {
  return cljs.core.list.call(null, "tailrecursion.javelin.core/Cell")
};
tailrecursion.javelin.core.Cell.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__9034 = this;
  var G__9035__9036 = cljs.core.seq.call(null, this__9034.watches);
  if(G__9035__9036) {
    var G__9038__9040 = cljs.core.first.call(null, G__9035__9036);
    var vec__9039__9041 = G__9038__9040;
    var key__9042 = cljs.core.nth.call(null, vec__9039__9041, 0, null);
    var f__9043 = cljs.core.nth.call(null, vec__9039__9041, 1, null);
    var G__9035__9044 = G__9035__9036;
    var G__9038__9045 = G__9038__9040;
    var G__9035__9046 = G__9035__9044;
    while(true) {
      var vec__9047__9048 = G__9038__9045;
      var key__9049 = cljs.core.nth.call(null, vec__9047__9048, 0, null);
      var f__9050 = cljs.core.nth.call(null, vec__9047__9048, 1, null);
      var G__9035__9051 = G__9035__9046;
      f__9050.call(null, key__9049, this$, oldval, newval);
      var temp__4092__auto____9052 = cljs.core.next.call(null, G__9035__9051);
      if(temp__4092__auto____9052) {
        var G__9035__9053 = temp__4092__auto____9052;
        var G__9058 = cljs.core.first.call(null, G__9035__9053);
        var G__9059 = G__9035__9053;
        G__9038__9045 = G__9058;
        G__9035__9046 = G__9059;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
tailrecursion.javelin.core.Cell.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__9054 = this;
  return this$.watches = cljs.core.assoc.call(null, this__9054.watches, key, f)
};
tailrecursion.javelin.core.Cell.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__9055 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__9055.watches, key)
};
tailrecursion.javelin.core.Cell.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__9056 = this;
  return this$.state
};
tailrecursion.javelin.core.Cell.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var this__9057 = this;
  return this__9057.meta
};
tailrecursion.javelin.core.Cell;
tailrecursion.javelin.core.done_BANG_ = function done_BANG_(p1__9033_SHARP_) {
  return p1__9033_SHARP_.done = true
};
tailrecursion.javelin.core.cell_QMARK_ = function cell_QMARK_(p1__9060_SHARP_) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, p1__9060_SHARP_), tailrecursion.javelin.core.Cell)
};
tailrecursion.javelin.core.self = function self(p1__9061_SHARP_) {
  return tailrecursion.javelin.core.input.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'tailrecursion.javelin.core/self"], {"\ufdd0'tailrecursion.javelin.core/self":p1__9061_SHARP_}))
};
tailrecursion.javelin.core.input_STAR_ = function input_STAR_(p1__9062_SHARP_) {
  if(cljs.core.truth_(tailrecursion.javelin.core.cell_QMARK_.call(null, p1__9062_SHARP_))) {
    return p1__9062_SHARP_
  }else {
    return tailrecursion.javelin.core.input.call(null, p1__9062_SHARP_)
  }
};
tailrecursion.javelin.core.input = function input(value) {
  return tailrecursion.javelin.core.set_formula_BANG_.call(null, new tailrecursion.javelin.core.Cell(cljs.core.ObjMap.EMPTY, value, tailrecursion.javelin.core.next_rank.call(null), value, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentHashSet.EMPTY, false, null, cljs.core.ObjMap.EMPTY))
};
tailrecursion.javelin.core.lift = function lift(f) {
  return function() {
    var G__9063__delegate = function(sources) {
      return tailrecursion.javelin.core.set_formula_BANG_.call(null, tailrecursion.javelin.core.input.call(null, "\ufdd0'tailrecursion.javelin.core/none"), f, sources)
    };
    var G__9063 = function(var_args) {
      var sources = null;
      if(goog.isDef(var_args)) {
        sources = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__9063__delegate.call(this, sources)
    };
    G__9063.cljs$lang$maxFixedArity = 0;
    G__9063.cljs$lang$applyTo = function(arglist__9064) {
      var sources = cljs.core.seq(arglist__9064);
      return G__9063__delegate(sources)
    };
    G__9063.cljs$lang$arity$variadic = G__9063__delegate;
    return G__9063
  }()
};
goog.provide("tailrecursion.javelin");
goog.require("cljs.core");
goog.require("tailrecursion.javelin.specials");
goog.require("tailrecursion.javelin.core");
tailrecursion.javelin.done_BANG_ = tailrecursion.javelin.core.done_BANG_;
tailrecursion.javelin.cell_QMARK_ = tailrecursion.javelin.core.cell_QMARK_;
tailrecursion.javelin.self = tailrecursion.javelin.core.self;
tailrecursion.javelin.input_STAR_ = tailrecursion.javelin.core.input_STAR_;
tailrecursion.javelin.next_rank = function() {
  var next_rank__delegate = function(args__7832__auto__) {
    return cljs.core.apply.call(null, tailrecursion.javelin.core.next_rank, args__7832__auto__)
  };
  var next_rank = function(var_args) {
    var args__7832__auto__ = null;
    if(goog.isDef(var_args)) {
      args__7832__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return next_rank__delegate.call(this, args__7832__auto__)
  };
  next_rank.cljs$lang$maxFixedArity = 0;
  next_rank.cljs$lang$applyTo = function(arglist__8913) {
    var args__7832__auto__ = cljs.core.seq(arglist__8913);
    return next_rank__delegate(args__7832__auto__)
  };
  next_rank.cljs$lang$arity$variadic = next_rank__delegate;
  return next_rank
}();
tailrecursion.javelin.deref_STAR_ = function() {
  var deref_STAR___delegate = function(args__7832__auto__) {
    return cljs.core.apply.call(null, tailrecursion.javelin.core.deref_STAR_, args__7832__auto__)
  };
  var deref_STAR_ = function(var_args) {
    var args__7832__auto__ = null;
    if(goog.isDef(var_args)) {
      args__7832__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return deref_STAR___delegate.call(this, args__7832__auto__)
  };
  deref_STAR_.cljs$lang$maxFixedArity = 0;
  deref_STAR_.cljs$lang$applyTo = function(arglist__8914) {
    var args__7832__auto__ = cljs.core.seq(arglist__8914);
    return deref_STAR___delegate(args__7832__auto__)
  };
  deref_STAR_.cljs$lang$arity$variadic = deref_STAR___delegate;
  return deref_STAR_
}();
tailrecursion.javelin.self_QMARK_ = function() {
  var self_QMARK___delegate = function(args__7832__auto__) {
    return cljs.core.apply.call(null, tailrecursion.javelin.core.self_QMARK_, args__7832__auto__)
  };
  var self_QMARK_ = function(var_args) {
    var args__7832__auto__ = null;
    if(goog.isDef(var_args)) {
      args__7832__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return self_QMARK___delegate.call(this, args__7832__auto__)
  };
  self_QMARK_.cljs$lang$maxFixedArity = 0;
  self_QMARK_.cljs$lang$applyTo = function(arglist__8915) {
    var args__7832__auto__ = cljs.core.seq(arglist__8915);
    return self_QMARK___delegate(args__7832__auto__)
  };
  self_QMARK_.cljs$lang$arity$variadic = self_QMARK___delegate;
  return self_QMARK_
}();
tailrecursion.javelin.sub_self = function() {
  var sub_self__delegate = function(args__7832__auto__) {
    return cljs.core.apply.call(null, tailrecursion.javelin.core.sub_self, args__7832__auto__)
  };
  var sub_self = function(var_args) {
    var args__7832__auto__ = null;
    if(goog.isDef(var_args)) {
      args__7832__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sub_self__delegate.call(this, args__7832__auto__)
  };
  sub_self.cljs$lang$maxFixedArity = 0;
  sub_self.cljs$lang$applyTo = function(arglist__8916) {
    var args__7832__auto__ = cljs.core.seq(arglist__8916);
    return sub_self__delegate(args__7832__auto__)
  };
  sub_self.cljs$lang$arity$variadic = sub_self__delegate;
  return sub_self
}();
tailrecursion.javelin.sinks_seq = function() {
  var sinks_seq__delegate = function(args__7832__auto__) {
    return cljs.core.apply.call(null, tailrecursion.javelin.core.sinks_seq, args__7832__auto__)
  };
  var sinks_seq = function(var_args) {
    var args__7832__auto__ = null;
    if(goog.isDef(var_args)) {
      args__7832__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sinks_seq__delegate.call(this, args__7832__auto__)
  };
  sinks_seq.cljs$lang$maxFixedArity = 0;
  sinks_seq.cljs$lang$applyTo = function(arglist__8917) {
    var args__7832__auto__ = cljs.core.seq(arglist__8917);
    return sinks_seq__delegate(args__7832__auto__)
  };
  sinks_seq.cljs$lang$arity$variadic = sinks_seq__delegate;
  return sinks_seq
}();
tailrecursion.javelin.propagate_BANG_ = function() {
  var propagate_BANG___delegate = function(args__7832__auto__) {
    return cljs.core.apply.call(null, tailrecursion.javelin.core.propagate_BANG_, args__7832__auto__)
  };
  var propagate_BANG_ = function(var_args) {
    var args__7832__auto__ = null;
    if(goog.isDef(var_args)) {
      args__7832__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return propagate_BANG___delegate.call(this, args__7832__auto__)
  };
  propagate_BANG_.cljs$lang$maxFixedArity = 0;
  propagate_BANG_.cljs$lang$applyTo = function(arglist__8918) {
    var args__7832__auto__ = cljs.core.seq(arglist__8918);
    return propagate_BANG___delegate(args__7832__auto__)
  };
  propagate_BANG_.cljs$lang$arity$variadic = propagate_BANG___delegate;
  return propagate_BANG_
}();
tailrecursion.javelin.set_formula_BANG_ = function() {
  var set_formula_BANG___delegate = function(args__7832__auto__) {
    return cljs.core.apply.call(null, tailrecursion.javelin.core.set_formula_BANG_, args__7832__auto__)
  };
  var set_formula_BANG_ = function(var_args) {
    var args__7832__auto__ = null;
    if(goog.isDef(var_args)) {
      args__7832__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return set_formula_BANG___delegate.call(this, args__7832__auto__)
  };
  set_formula_BANG_.cljs$lang$maxFixedArity = 0;
  set_formula_BANG_.cljs$lang$applyTo = function(arglist__8919) {
    var args__7832__auto__ = cljs.core.seq(arglist__8919);
    return set_formula_BANG___delegate(args__7832__auto__)
  };
  set_formula_BANG_.cljs$lang$arity$variadic = set_formula_BANG___delegate;
  return set_formula_BANG_
}();
tailrecursion.javelin.input = function() {
  var input__delegate = function(args__7832__auto__) {
    return cljs.core.apply.call(null, tailrecursion.javelin.core.input, args__7832__auto__)
  };
  var input = function(var_args) {
    var args__7832__auto__ = null;
    if(goog.isDef(var_args)) {
      args__7832__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return input__delegate.call(this, args__7832__auto__)
  };
  input.cljs$lang$maxFixedArity = 0;
  input.cljs$lang$applyTo = function(arglist__8920) {
    var args__7832__auto__ = cljs.core.seq(arglist__8920);
    return input__delegate(args__7832__auto__)
  };
  input.cljs$lang$arity$variadic = input__delegate;
  return input
}();
tailrecursion.javelin.lift = function() {
  var lift__delegate = function(args__7832__auto__) {
    return cljs.core.apply.call(null, tailrecursion.javelin.core.lift, args__7832__auto__)
  };
  var lift = function(var_args) {
    var args__7832__auto__ = null;
    if(goog.isDef(var_args)) {
      args__7832__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return lift__delegate.call(this, args__7832__auto__)
  };
  lift.cljs$lang$maxFixedArity = 0;
  lift.cljs$lang$applyTo = function(arglist__8921) {
    var args__7832__auto__ = cljs.core.seq(arglist__8921);
    return lift__delegate(args__7832__auto__)
  };
  lift.cljs$lang$arity$variadic = lift__delegate;
  return lift
}();
tailrecursion.javelin.def_STAR_ = tailrecursion.javelin.specials.def_STAR_;
tailrecursion.javelin.do_STAR_ = tailrecursion.javelin.specials.do_STAR_;
tailrecursion.javelin.loop_STAR__STAR_ = tailrecursion.javelin.specials.loop_STAR__STAR_;
tailrecursion.javelin.letfn_STAR__STAR_ = tailrecursion.javelin.specials.letfn_STAR__STAR_;
tailrecursion.javelin.throw_STAR_ = tailrecursion.javelin.specials.throw_STAR_;
tailrecursion.javelin.try_STAR__STAR_ = tailrecursion.javelin.specials.try_STAR__STAR_;
tailrecursion.javelin.recur_STAR_ = tailrecursion.javelin.specials.recur_STAR_;
tailrecursion.javelin.set_BANG__STAR_ = tailrecursion.javelin.specials.set_BANG__STAR_;
tailrecursion.javelin.ns_STAR_ = tailrecursion.javelin.specials.ns_STAR_;
tailrecursion.javelin.deftype_STAR__STAR_ = tailrecursion.javelin.specials.deftype_STAR__STAR_;
tailrecursion.javelin.defrecord_STAR__STAR_ = tailrecursion.javelin.specials.defrecord_STAR__STAR_;
tailrecursion.javelin._AMPERSAND__STAR_ = tailrecursion.javelin.specials._AMPERSAND__STAR_;
tailrecursion.javelin.no_supported = function() {
  var no_supported__delegate = function(args__7832__auto__) {
    return cljs.core.apply.call(null, tailrecursion.javelin.specials.no_supported, args__7832__auto__)
  };
  var no_supported = function(var_args) {
    var args__7832__auto__ = null;
    if(goog.isDef(var_args)) {
      args__7832__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return no_supported__delegate.call(this, args__7832__auto__)
  };
  no_supported.cljs$lang$maxFixedArity = 0;
  no_supported.cljs$lang$applyTo = function(arglist__8928) {
    var args__7832__auto__ = cljs.core.seq(arglist__8928);
    return no_supported__delegate(args__7832__auto__)
  };
  no_supported.cljs$lang$arity$variadic = no_supported__delegate;
  return no_supported
}();
tailrecursion.javelin.if_STAR_ = function() {
  var if_STAR___delegate = function(args__7832__auto__) {
    return cljs.core.apply.call(null, tailrecursion.javelin.specials.if_STAR_, args__7832__auto__)
  };
  var if_STAR_ = function(var_args) {
    var args__7832__auto__ = null;
    if(goog.isDef(var_args)) {
      args__7832__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return if_STAR___delegate.call(this, args__7832__auto__)
  };
  if_STAR_.cljs$lang$maxFixedArity = 0;
  if_STAR_.cljs$lang$applyTo = function(arglist__8929) {
    var args__7832__auto__ = cljs.core.seq(arglist__8929);
    return if_STAR___delegate(args__7832__auto__)
  };
  if_STAR_.cljs$lang$arity$variadic = if_STAR___delegate;
  return if_STAR_
}();
tailrecursion.javelin.new_STAR_ = function() {
  var new_STAR___delegate = function(args__7832__auto__) {
    return cljs.core.apply.call(null, tailrecursion.javelin.specials.new_STAR_, args__7832__auto__)
  };
  var new_STAR_ = function(var_args) {
    var args__7832__auto__ = null;
    if(goog.isDef(var_args)) {
      args__7832__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return new_STAR___delegate.call(this, args__7832__auto__)
  };
  new_STAR_.cljs$lang$maxFixedArity = 0;
  new_STAR_.cljs$lang$applyTo = function(arglist__8930) {
    var args__7832__auto__ = cljs.core.seq(arglist__8930);
    return new_STAR___delegate(args__7832__auto__)
  };
  new_STAR_.cljs$lang$arity$variadic = new_STAR___delegate;
  return new_STAR_
}();
tailrecursion.javelin.log = function log(p1__8922_SHARP_, p2__8923_SHARP_) {
  return console.log(p1__8922_SHARP_, tailrecursion.javelin.clj__GT_js.call(null, p2__8923_SHARP_))
};
tailrecursion.javelin.timeout = function timeout(p1__8931_SHARP_, p2__8932_SHARP_) {
  return window.setTimeout(p1__8931_SHARP_, p2__8932_SHARP_)
};
tailrecursion.javelin.interval = function interval(p1__8933_SHARP_, p2__8934_SHARP_) {
  return window.setInterval(p1__8933_SHARP_, p2__8934_SHARP_)
};
tailrecursion.javelin.route_STAR_ = function route_STAR_(msec, default$) {
  var hash__8938 = function() {
    return window.location.hash
  };
  var ret__8939 = tailrecursion.javelin.input.call(null, hash__8938.call(null));
  tailrecursion.javelin.interval.call(null, function() {
    var h__8940 = hash__8938.call(null);
    return cljs.core.reset_BANG_.call(null, ret__8939, cljs.core.empty_QMARK_.call(null, h__8940) ? default$ : h__8940)
  }, msec);
  return ret__8939
};
tailrecursion.javelin.timer_STAR_ = function timer_STAR_(msec, f, init) {
  var out__8942 = tailrecursion.javelin.input.call(null, init);
  (function rec() {
    return tailrecursion.javelin.timeout.call(null, function() {
      if(!(cljs.core.deref.call(null, msec) < 0)) {
        cljs.core.swap_BANG_.call(null, out__8942, f)
      }else {
      }
      return rec.call(null)
    }, cljs.core.deref.call(null, msec) < 0 ? 0 : cljs.core.deref.call(null, msec))
  }).call(null);
  return out__8942
};
goog.provide("hlisp.reactive");
goog.require("cljs.core");
goog.require("hlisp.util");
goog.require("hlisp.env");
goog.require("tailrecursion.javelin");
hlisp.reactive.timeout = function timeout(f, t) {
  return window.setTimeout(f, t)
};
hlisp.reactive.id = function id(e) {
  return cljs.core.peek.call(null, hlisp.reactive.ids.call(null, e))
};
hlisp.reactive.ids = function ids(e) {
  return e.ids
};
hlisp.reactive.id_BANG_ = function id_BANG_(e) {
  if(cljs.core.not.call(null, cljs.core.seq.call(null, hlisp.reactive.ids.call(null, e)))) {
    return hlisp.env.clone.call(null, e)
  }else {
    return e
  }
};
hlisp.reactive.is_jq_QMARK_ = function is_jq_QMARK_(e) {
  return cljs.core.string_QMARK_.call(null, e.jquery)
};
jQuery("body").on("submit", function(event) {
  return event.preventDefault()
});
hlisp.reactive.filter_id = function filter_id(x) {
  return function(v) {
    return 0 < jQuery(v.target).parentsUntil("body").andSelf().filter([cljs.core.str("[data-hl~='"), cljs.core.str(x), cljs.core.str("']")].join("")).size()
  }
};
hlisp.reactive.filter_not_disabled = function filter_not_disabled(v) {
  return cljs.core.not.call(null, jQuery(v.target).is("[data-disabled]"))
};
hlisp.reactive.find_id = function find_id(x) {
  return jQuery([cljs.core.str("[data-hl~='"), cljs.core.str(x), cljs.core.str("']")].join(""))
};
hlisp.reactive.dom_get = function dom_get(elem) {
  if(function() {
    var G__13219__13220 = elem;
    if(G__13219__13220) {
      if(cljs.core.truth_(function() {
        var or__3943__auto____13221 = null;
        if(cljs.core.truth_(or__3943__auto____13221)) {
          return or__3943__auto____13221
        }else {
          return G__13219__13220.hlisp$env$IDomNode$
        }
      }())) {
        return true
      }else {
        if(!G__13219__13220.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, hlisp.env.IDomNode, G__13219__13220)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, hlisp.env.IDomNode, G__13219__13220)
    }
  }()) {
    return hlisp.reactive.find_id.call(null, hlisp.reactive.id.call(null, elem))
  }else {
    return jQuery(elem)
  }
};
hlisp.reactive.text_val_BANG_ = function() {
  var text_val_BANG_ = null;
  var text_val_BANG___1 = function(e) {
    return e.val()
  };
  var text_val_BANG___2 = function(e, v) {
    return e.val([cljs.core.str(v)].join("")).trigger("change")
  };
  text_val_BANG_ = function(e, v) {
    switch(arguments.length) {
      case 1:
        return text_val_BANG___1.call(this, e);
      case 2:
        return text_val_BANG___2.call(this, e, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  text_val_BANG_.cljs$lang$arity$1 = text_val_BANG___1;
  text_val_BANG_.cljs$lang$arity$2 = text_val_BANG___2;
  return text_val_BANG_
}();
hlisp.reactive.check_val_BANG_ = function() {
  var check_val_BANG_ = null;
  var check_val_BANG___1 = function(e) {
    return e.is(":checked")
  };
  var check_val_BANG___2 = function(e, v) {
    return e.prop("checked", cljs.core.boolean$.call(null, v)).trigger("change")
  };
  check_val_BANG_ = function(e, v) {
    switch(arguments.length) {
      case 1:
        return check_val_BANG___1.call(this, e);
      case 2:
        return check_val_BANG___2.call(this, e, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  check_val_BANG_.cljs$lang$arity$1 = check_val_BANG___1;
  check_val_BANG_.cljs$lang$arity$2 = check_val_BANG___2;
  return check_val_BANG_
}();
hlisp.reactive.value_BANG_ = function() {
  var value_BANG___delegate = function(elem, args) {
    var e__13225 = hlisp.reactive.dom_get.call(null, elem);
    var G__13226__13227 = e__13225.attr("type");
    if(cljs.core._EQ_.call(null, "checkbox", G__13226__13227)) {
      return cljs.core.apply.call(null, hlisp.reactive.check_val_BANG_, e__13225, args)
    }else {
      if("\ufdd0'else") {
        return cljs.core.apply.call(null, hlisp.reactive.text_val_BANG_, e__13225, args)
      }else {
        return null
      }
    }
  };
  var value_BANG_ = function(elem, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return value_BANG___delegate.call(this, elem, args)
  };
  value_BANG_.cljs$lang$maxFixedArity = 1;
  value_BANG_.cljs$lang$applyTo = function(arglist__13228) {
    var elem = cljs.core.first(arglist__13228);
    var args = cljs.core.rest(arglist__13228);
    return value_BANG___delegate(elem, args)
  };
  value_BANG_.cljs$lang$arity$variadic = value_BANG___delegate;
  return value_BANG_
}();
hlisp.reactive.safe_name = function safe_name(x) {
  try {
    return cljs.core.name.call(null, x)
  }catch(e13231) {
    if(cljs.core.instance_QMARK_.call(null, Error, e13231)) {
      var e__13232 = e13231;
      return null
    }else {
      if("\ufdd0'else") {
        throw e13231;
      }else {
        return null
      }
    }
  }
};
hlisp.reactive.attr_BANG_ = function() {
  var attr_BANG_ = null;
  var attr_BANG___2 = function(elem, k) {
    return hlisp.reactive.dom_get.call(null, elem).attr(cljs.core.name.call(null, k))
  };
  var attr_BANG___4 = function() {
    var G__13255__delegate = function(elem, k, v, kvs) {
      return jQuery(function() {
        var e__13245 = hlisp.reactive.dom_get.call(null, elem);
        return cljs.core.mapv.call(null, function(p__13246) {
          var vec__13247__13248 = p__13246;
          var k__13249 = cljs.core.nth.call(null, vec__13247__13248, 0, null);
          var v__13250 = cljs.core.nth.call(null, vec__13247__13248, 1, null);
          var temp__4092__auto____13251 = hlisp.reactive.safe_name.call(null, k__13249);
          if(cljs.core.truth_(temp__4092__auto____13251)) {
            var k__13252 = temp__4092__auto____13251;
            var G__13253__13254 = v__13250;
            if(cljs.core._EQ_.call(null, false, G__13253__13254)) {
              return e__13245.removeAttr(k__13252)
            }else {
              if(cljs.core._EQ_.call(null, true, G__13253__13254)) {
                return e__13245.attr(k__13252, k__13252)
              }else {
                if("\ufdd0'else") {
                  return e__13245.attr(k__13252, [cljs.core.str(v__13250)].join(""))
                }else {
                  return null
                }
              }
            }
          }else {
            return null
          }
        }, cljs.core.partition.call(null, 2, cljs.core.list_STAR_.call(null, k, v, kvs)))
      })
    };
    var G__13255 = function(elem, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13255__delegate.call(this, elem, k, v, kvs)
    };
    G__13255.cljs$lang$maxFixedArity = 3;
    G__13255.cljs$lang$applyTo = function(arglist__13256) {
      var elem = cljs.core.first(arglist__13256);
      var k = cljs.core.first(cljs.core.next(arglist__13256));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13256)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13256)));
      return G__13255__delegate(elem, k, v, kvs)
    };
    G__13255.cljs$lang$arity$variadic = G__13255__delegate;
    return G__13255
  }();
  attr_BANG_ = function(elem, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 2:
        return attr_BANG___2.call(this, elem, k);
      default:
        return attr_BANG___4.cljs$lang$arity$variadic(elem, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  attr_BANG_.cljs$lang$maxFixedArity = 3;
  attr_BANG_.cljs$lang$applyTo = attr_BANG___4.cljs$lang$applyTo;
  attr_BANG_.cljs$lang$arity$2 = attr_BANG___2;
  attr_BANG_.cljs$lang$arity$variadic = attr_BANG___4.cljs$lang$arity$variadic;
  return attr_BANG_
}();
hlisp.reactive.class_BANG_ = function() {
  var class_BANG_ = null;
  var class_BANG___2 = function(elem, c) {
    var temp__4092__auto____13261 = hlisp.reactive.safe_name.call(null, c);
    if(cljs.core.truth_(temp__4092__auto____13261)) {
      var c__13262 = temp__4092__auto____13261;
      return jQuery(function() {
        return hlisp.reactive.dom_get.call(null, elem).toggleClass(c__13262)
      })
    }else {
      return null
    }
  };
  var class_BANG___4 = function() {
    var G__13265__delegate = function(elem, c, switch$, cswitches) {
      return jQuery(function() {
        return cljs.core.mapv.call(null, cljs.core.partial.call(null, cljs.core.apply, function(p1__13233_SHARP_, p2__13234_SHARP_) {
          var temp__4092__auto____13263 = hlisp.reactive.safe_name.call(null, p1__13233_SHARP_);
          if(cljs.core.truth_(temp__4092__auto____13263)) {
            var c__13264 = temp__4092__auto____13263;
            return hlisp.reactive.dom_get.call(null, elem).toggleClass(c__13264, cljs.core.boolean$.call(null, p2__13234_SHARP_))
          }else {
            return null
          }
        }), cljs.core.partition.call(null, 2, cljs.core.list_STAR_.call(null, c, switch$, cswitches)))
      })
    };
    var G__13265 = function(elem, c, switch$, var_args) {
      var cswitches = null;
      if(goog.isDef(var_args)) {
        cswitches = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13265__delegate.call(this, elem, c, switch$, cswitches)
    };
    G__13265.cljs$lang$maxFixedArity = 3;
    G__13265.cljs$lang$applyTo = function(arglist__13266) {
      var elem = cljs.core.first(arglist__13266);
      var c = cljs.core.first(cljs.core.next(arglist__13266));
      var switch$ = cljs.core.first(cljs.core.next(cljs.core.next(arglist__13266)));
      var cswitches = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__13266)));
      return G__13265__delegate(elem, c, switch$, cswitches)
    };
    G__13265.cljs$lang$arity$variadic = G__13265__delegate;
    return G__13265
  }();
  class_BANG_ = function(elem, c, switch$, var_args) {
    var cswitches = var_args;
    switch(arguments.length) {
      case 2:
        return class_BANG___2.call(this, elem, c);
      default:
        return class_BANG___4.cljs$lang$arity$variadic(elem, c, switch$, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  class_BANG_.cljs$lang$maxFixedArity = 3;
  class_BANG_.cljs$lang$applyTo = class_BANG___4.cljs$lang$applyTo;
  class_BANG_.cljs$lang$arity$2 = class_BANG___2;
  class_BANG_.cljs$lang$arity$variadic = class_BANG___4.cljs$lang$arity$variadic;
  return class_BANG_
}();
hlisp.reactive.toggle_BANG_ = function toggle_BANG_(elem, v) {
  return jQuery(function() {
    return hlisp.reactive.dom_get.call(null, elem).toggle(cljs.core.boolean$.call(null, v))
  })
};
hlisp.reactive.slide_toggle_BANG_ = function slide_toggle_BANG_(elem, v) {
  return jQuery(function() {
    if(cljs.core.truth_(v)) {
      return hlisp.reactive.dom_get.call(null, elem).hide().slideDown("fast")
    }else {
      return hlisp.reactive.dom_get.call(null, elem).slideUp("fast")
    }
  })
};
hlisp.reactive.fade_toggle_BANG_ = function fade_toggle_BANG_(elem, v) {
  return jQuery(function() {
    if(cljs.core.truth_(v)) {
      return hlisp.reactive.dom_get.call(null, elem).hide().fadeIn("fast")
    }else {
      return hlisp.reactive.dom_get.call(null, elem).fadeOut("fast")
    }
  })
};
hlisp.reactive.focus_BANG_ = function focus_BANG_(elem, v) {
  return jQuery(function() {
    if(cljs.core.truth_(v)) {
      return hlisp.reactive.timeout.call(null, function() {
        return hlisp.reactive.dom_get.call(null, elem).focus()
      }, 0)
    }else {
      return hlisp.reactive.timeout.call(null, function() {
        return hlisp.reactive.dom_get.call(null, elem).focusout()
      }, 0)
    }
  })
};
hlisp.reactive.select_BANG_ = function select_BANG_(elem, _) {
  return jQuery(function() {
    return hlisp.reactive.dom_get.call(null, elem).select()
  })
};
hlisp.reactive.text_BANG_ = function text_BANG_(elem, v) {
  return jQuery(function() {
    return hlisp.reactive.dom_get.call(null, elem).text([cljs.core.str(v)].join(""))
  })
};
hlisp.reactive.disabled_QMARK_ = function disabled_QMARK_(elem) {
  return hlisp.reactive.dom_get.call(null, elem).is("[data-disabled]")
};
hlisp.reactive.delegate = function delegate(atm, event) {
  jQuery(document).on(event, "[data-hl]", function(p1__13267_SHARP_) {
    return cljs.core.reset_BANG_.call(null, atm, p1__13267_SHARP_)
  });
  return atm
};
hlisp.reactive.events = cljs.core.ObjMap.fromObject(["\ufdd0'submit", "\ufdd0'unload", "\ufdd0'mousedown", "\ufdd0'keypress", "\ufdd0'mouseover", "\ufdd0'mouseout", "\ufdd0'click", "\ufdd0'error", "\ufdd0'load", "\ufdd0'hover", "\ufdd0'change", "\ufdd0'mouseleave", "\ufdd0'focus", "\ufdd0'keydown", "\ufdd0'mouseup", "\ufdd0'keyup", "\ufdd0'mouseenter", "\ufdd0'mousemove", "\ufdd0'focusout", "\ufdd0'scroll", "\ufdd0'ready", "\ufdd0'select", "\ufdd0'focusin", "\ufdd0'dblclick"], {"\ufdd0'submit":hlisp.reactive.delegate.call(null, 
cljs.core.atom.call(null, null), "submit"), "\ufdd0'unload":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "unload"), "\ufdd0'mousedown":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "mousedown"), "\ufdd0'keypress":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "keypress"), "\ufdd0'mouseover":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "mouseover"), "\ufdd0'mouseout":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, 
null), "mouseout"), "\ufdd0'click":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "click"), "\ufdd0'error":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "error"), "\ufdd0'load":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "load"), "\ufdd0'hover":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "hover"), "\ufdd0'change":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "change"), "\ufdd0'mouseleave":hlisp.reactive.delegate.call(null, 
cljs.core.atom.call(null, null), "mouseleave"), "\ufdd0'focus":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "focus"), "\ufdd0'keydown":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "keydown"), "\ufdd0'mouseup":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "mouseup"), "\ufdd0'keyup":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "keyup"), "\ufdd0'mouseenter":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, 
null), "mouseenter"), "\ufdd0'mousemove":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "mousemove"), "\ufdd0'focusout":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "focusout"), "\ufdd0'scroll":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "scroll"), "\ufdd0'ready":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "ready"), "\ufdd0'select":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "select"), 
"\ufdd0'focusin":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "focusin"), "\ufdd0'dblclick":hlisp.reactive.delegate.call(null, cljs.core.atom.call(null, null), "dblclick")});
hlisp.reactive.do_on_BANG_ = function do_on_BANG_(elem, event, callback) {
  var c__13276 = tailrecursion.javelin.input.call(null, null);
  var event__13277 = cljs.core._lookup.call(null, hlisp.reactive.events, cljs.core.keyword.call(null, event), null);
  var update__13279 = function(p1__13270_SHARP_, p2__13271_SHARP_, p3__13268_SHARP_, p4__13269_SHARP_) {
    if(cljs.core.truth_(function() {
      var and__3941__auto____13278 = cljs.core.not_EQ_.call(null, p3__13268_SHARP_, p4__13269_SHARP_);
      if(and__3941__auto____13278) {
        return hlisp.reactive.filter_id.call(null, hlisp.reactive.id.call(null, elem)).call(null, p4__13269_SHARP_)
      }else {
        return and__3941__auto____13278
      }
    }())) {
      return callback.call(null, p4__13269_SHARP_)
    }else {
      return null
    }
  };
  return cljs.core.add_watch.call(null, event__13277, cljs.core.gensym.call(null), update__13279)
};
hlisp.reactive.on_BANG_ = function() {
  var on_BANG___delegate = function(elem, event_callbacks) {
    return cljs.core.mapv.call(null, cljs.core.partial.call(null, cljs.core.apply, hlisp.reactive.do_on_BANG_, elem), cljs.core.partition.call(null, 2, event_callbacks))
  };
  var on_BANG_ = function(elem, var_args) {
    var event_callbacks = null;
    if(goog.isDef(var_args)) {
      event_callbacks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return on_BANG___delegate.call(this, elem, event_callbacks)
  };
  on_BANG_.cljs$lang$maxFixedArity = 1;
  on_BANG_.cljs$lang$applyTo = function(arglist__13281) {
    var elem = cljs.core.first(arglist__13281);
    var event_callbacks = cljs.core.rest(arglist__13281);
    return on_BANG___delegate(elem, event_callbacks)
  };
  on_BANG_.cljs$lang$arity$variadic = on_BANG___delegate;
  return on_BANG_
}();
hlisp.reactive.thing_looper = function thing_looper(things, g) {
  return function(f, container) {
    return cljs.core.into.call(null, container, cljs.core.mapv.call(null, function(p1__13280_SHARP_) {
      return cljs.core.apply.call(null, f, p1__13280_SHARP_, g.call(null, things, p1__13280_SHARP_))
    }, cljs.core.range.call(null, 0, cljs.core.count.call(null, cljs.core.deref.call(null, things)))))
  }
};
goog.provide("lightbulb.core");
goog.require("cljs.core");
goog.require("tailrecursion.javelin");
lightbulb.core.between = function between(x, low, high) {
  return(x > low ? x : low) < high ? x > low ? x : low : high
};
lightbulb.core.sunlight_intensity = tailrecursion.javelin.input.call(null, 0);
lightbulb.core.v_photocell_target = tailrecursion.javelin.input.call(null, 0);
lightbulb.core.v_bulb = tailrecursion.javelin.lift.call(null, lightbulb.core.between).call(null, tailrecursion.javelin.lift.call(null, tailrecursion.javelin.input.call(null, function(G__7999, G__8000) {
  return G__7999 - G__8000
})).call(null, lightbulb.core.v_photocell_target, lightbulb.core.sunlight_intensity), 0, 10);
lightbulb.core.v_photocell = tailrecursion.javelin.lift.call(null, tailrecursion.javelin.input.call(null, function(G__8001, G__8002) {
  return G__8001 + G__8002
})).call(null, lightbulb.core.sunlight_intensity, lightbulb.core.v_bulb);
tailrecursion.javelin.lift.call(null, tailrecursion.javelin.input.call(null, function(obj__7739__auto__, G__8003, G__8004) {
  return obj__7739__auto__.log(G__8003, G__8004)
})).call(null, console, "[tgt]", tailrecursion.javelin.lift.call(null, cljs.core.pr_str).call(null, tailrecursion.javelin.lift.call(null, cljs.core.vector).call(null, lightbulb.core.v_photocell_target, lightbulb.core.v_photocell, lightbulb.core.v_bulb, lightbulb.core.sunlight_intensity)));
goog.provide("lightbulb");
goog.require("cljs.core");
goog.require("hlisp.env");
goog.require("hlisp.reactive");
goog.require("lightbulb.core");
goog.require("hlisp.env");
lightbulb.hlispinit = function hlispinit() {
  return hlisp.env.init.call(null, cljs.core.PersistentVector.fromArray([hlisp.env.div.call(null, hlisp.env.h3.call(null, hlisp.env.$text.call(null, "Do we need loops?")), hlisp.env.p.call(null, hlisp.env.$text.call(null, "You can adjust the sunlight intensity and the target photocell \n           voltage. The bulb voltage and the actual photocell voltages are\n           computed values.")), hlisp.env.label.call(null, tailrecursion.javelin.core.deref_STAR_.call(null, function() {
    var f__8384__auto____8426 = hlisp.env.clone.call(null, hlisp.env.input.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'step", "\ufdd0'min", "\ufdd0'max", "\ufdd0'value"], {"\ufdd0'type":"range", "\ufdd0'step":"0.1", "\ufdd0'min":"0", "\ufdd0'max":"10", "\ufdd0'value":"0"})));
    var G__8427__8428 = f__8384__auto____8426;
    tailrecursion.javelin.lift.call(null, hlisp.reactive.on_BANG_).call(null, G__8427__8428, "\ufdd0'change", tailrecursion.javelin.input.call(null, function(p1__8424_SHARP_) {
      return cljs.core.reset_BANG_.call(null, lightbulb.core.sunlight_intensity, parseFloat(p1__8424_SHARP_.target.value))
    }));
    return G__8427__8428
  }()), hlisp.env.$text.call(null, "\n          Sunlight Intensity\n        ")), hlisp.env.br.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'clear"], {"\ufdd0'clear":"none"})), hlisp.env.label.call(null, tailrecursion.javelin.core.deref_STAR_.call(null, function() {
    var f__8384__auto____8429 = hlisp.env.clone.call(null, hlisp.env.input.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'readonly", "\ufdd0'type", "\ufdd0'step", "\ufdd0'min", "\ufdd0'max", "\ufdd0'value"], {"\ufdd0'readonly":"true", "\ufdd0'type":"range", "\ufdd0'step":"0.1", "\ufdd0'min":"0", "\ufdd0'max":"10", "\ufdd0'value":"0"})));
    var G__8430__8431 = f__8384__auto____8429;
    tailrecursion.javelin.lift.call(null, hlisp.reactive.value_BANG_).call(null, G__8430__8431, lightbulb.core.v_bulb);
    return G__8430__8431
  }()), hlisp.env.$text.call(null, "\n          Bulb Voltage\n        ")), hlisp.env.br.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'clear"], {"\ufdd0'clear":"none"})), hlisp.env.label.call(null, tailrecursion.javelin.core.deref_STAR_.call(null, function() {
    var f__8384__auto____8432 = hlisp.env.clone.call(null, hlisp.env.input.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'readonly", "\ufdd0'type", "\ufdd0'step", "\ufdd0'min", "\ufdd0'max", "\ufdd0'value"], {"\ufdd0'readonly":"true", "\ufdd0'type":"range", "\ufdd0'step":"0.1", "\ufdd0'min":"0", "\ufdd0'max":"10", "\ufdd0'value":"0"})));
    var G__8433__8434 = f__8384__auto____8432;
    tailrecursion.javelin.lift.call(null, hlisp.reactive.value_BANG_).call(null, G__8433__8434, lightbulb.core.v_photocell);
    return G__8433__8434
  }()), hlisp.env.$text.call(null, "\n          Photocell Voltage\n        ")), hlisp.env.br.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'clear"], {"\ufdd0'clear":"none"})), hlisp.env.label.call(null, tailrecursion.javelin.core.deref_STAR_.call(null, function() {
    var f__8384__auto____8435 = hlisp.env.clone.call(null, hlisp.env.input.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'step", "\ufdd0'min", "\ufdd0'max", "\ufdd0'value"], {"\ufdd0'type":"range", "\ufdd0'step":"0.1", "\ufdd0'min":"0", "\ufdd0'max":"10", "\ufdd0'value":"0"})));
    var G__8436__8437 = f__8384__auto____8435;
    tailrecursion.javelin.lift.call(null, hlisp.reactive.on_BANG_).call(null, G__8436__8437, "\ufdd0'change", tailrecursion.javelin.input.call(null, function(p1__8425_SHARP_) {
      return cljs.core.reset_BANG_.call(null, lightbulb.core.v_photocell_target, parseFloat(p1__8425_SHARP_.target.value))
    }));
    return G__8436__8437
  }()), hlisp.env.$text.call(null, "\n          Target Photocell Voltage\n        ")))], true))
};
goog.exportSymbol("lightbulb.hlispinit", lightbulb.hlispinit);
